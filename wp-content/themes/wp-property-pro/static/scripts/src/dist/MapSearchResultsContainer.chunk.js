webpackJsonp([0],Array(793).concat([
/* 793 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */,
/* 810 */,
/* 811 */,
/* 812 */,
/* 813 */,
/* 814 */,
/* 815 */,
/* 816 */,
/* 817 */,
/* 818 */,
/* 819 */,
/* 820 */,
/* 821 */,
/* 822 */,
/* 823 */,
/* 824 */,
/* 825 */,
/* 826 */,
/* 827 */,
/* 828 */,
/* 829 */,
/* 830 */,
/* 831 */,
/* 832 */,
/* 833 */,
/* 834 */,
/* 835 */,
/* 836 */,
/* 837 */,
/* 838 */,
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */,
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */,
/* 1000 */,
/* 1001 */,
/* 1002 */,
/* 1003 */,
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 1045 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(793);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = __webpack_require__(41);

var _ErrorMessageModal = __webpack_require__(385);

var _ErrorMessageModal2 = _interopRequireDefault(_ErrorMessageModal);

var _Api = __webpack_require__(152);

var _Api2 = _interopRequireDefault(_Api);

var _LoadingAccordion = __webpack_require__(160);

var _LoadingAccordion2 = _interopRequireDefault(_LoadingAccordion);

var _lib = __webpack_require__(3);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _filter = __webpack_require__(1335);

var _filter2 = _interopRequireDefault(_filter);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _MapSearchResults = __webpack_require__(1337);

var _MapSearchResults2 = _interopRequireDefault(_MapSearchResults);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MapSearchResultsContainer = function (_Component) {
  _inherits(MapSearchResultsContainer, _Component);

  function MapSearchResultsContainer(props) {
    _classCallCheck(this, MapSearchResultsContainer);

    var _this = _possibleConstructorReturn(this, (MapSearchResultsContainer.__proto__ || Object.getPrototypeOf(MapSearchResultsContainer)).call(this, props));

    _this.fetchData = function (path) {
      var searchQueryParamsCollection = _Util2.default.URLSearchParse('search', path);
      var searchQueryObject = _Util2.default.searchCollectionToObject(searchQueryParamsCollection);
      var termDetails = _Util2.default.reddoorTermDetailsFromSearchParam(searchQueryParamsCollection);
      var term = termDetails;
      var propertyType = searchQueryObject['property_type'] = searchQueryObject.property_type[0];
      _Api2.default.getSearchPageMetadata(term, propertyType, function (err, response) {
        if (err) {
          //TODO: handle the error
          console.log('error thrown');
        }
        var termDetails = [];
        if (response.aggregations) {
          termDetails = term.map(function (d) {
            var termText = (0, _get2.default)(response, 'aggregations[' + d.slug + '.inside.buckets[0].key');
            return _extends({}, d, {
              text: termText
            });
          });

          var propertySubTypesArray = (0, _get2.default)(response.aggregations, 'property_subtypes.slugs.buckets', []);

          // property subtypes
          var propertySubtypes = (0, _get2.default)(response.aggregations, 'property_subtype_based_on_type.property_subtype_slugs.buckets', []).map(function (d) {
            var obj = {};
            obj['slug'] = d.key;

            // determine current subtype item
            var currentSubtype = (0, _filter2.default)(propertySubTypesArray, function (subtype) {
              return subtype.key === d.key;
            });

            obj['title'] = (0, _get2.default)(currentSubtype, '[0].name.buckets[0].key', '');

            return obj;
          });
          var data = {
            propertySubtypes: propertySubtypes,
            queryDefaults: {
              property_subtype: propertySubtypes.map(function (d) {
                return d.slug;
              }),
              sale_type: ['rent', 'sale']
            },
            termDetails: termDetails
          };
          _this.setState({
            data: data
          });
        }
      });
    };

    _this.state = {
      data: {}
    };
    _this.currentURL;
    return _this;
  }

  _createClass(MapSearchResultsContainer, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      //run the query
      var path = this.props.history.location.pathname;
      this.currentURL = path;
      this.fetchData(path);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {

      // decide whether to re-fetch meta data
      var currentPathCollection = _Util2.default.URLSearchParse('search', this.currentURL);
      var currentSearchQueryObject = _Util2.default.searchCollectionToObject(currentPathCollection);
      var currentTermDetails = _Util2.default.reddoorTermDetailsFromSearchParam(currentPathCollection);

      var nextPathCollection = _Util2.default.URLSearchParse('search', nextProps.history.location.pathname);
      var nextSearchQueryObject = _Util2.default.searchCollectionToObject(nextPathCollection);
      var nextTermDetails = _Util2.default.reddoorTermDetailsFromSearchParam(nextPathCollection);
      if (!(0, _isEqual2.default)(currentTermDetails, nextTermDetails) || !(0, _isEqual2.default)(currentSearchQueryObject['property_type'], nextSearchQueryObject['property_type'])) {
        this.fetchData(nextProps.history.location.pathname);
      }
      this.currentURL = nextProps.history.location.pathname;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          agents = _props.agents,
          history = _props.history;
      var data = this.state.data;

      return Object.keys(data).length ? _react2.default.createElement(
        'div',
        { className: 'h-100' },
        _react2.default.createElement(_MapSearchResults2.default, _extends({
          agents: agents
        }, data, {
          history: history,
          currentPathname: history.location.pathname
        }))
      ) : null;
    }
  }]);

  return MapSearchResultsContainer;
}(_react.Component);

MapSearchResultsContainer.propTypes = {};
;

exports.default = MapSearchResultsContainer;

/***/ }),
/* 1050 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.moneyFormat = exports.formatYesOrNoFields = exports.getListingTypeJSONFileName = exports.getContactFormTabFeeder = exports.getContactFormData = exports.daysPassedSincePostedDate = exports.getLastCheckedMoment = exports.getLastUpdatedMoment = exports.footFormat = exports.commonDateFormat = undefined;

var _moment = __webpack_require__(1084);

var _moment2 = _interopRequireDefault(_moment);

var _numeral = __webpack_require__(400);

var _numeral2 = _interopRequireDefault(_numeral);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.commonDateFormat = commonDateFormat;
exports.footFormat = footFormat;
exports.getLastUpdatedMoment = getLastUpdatedMoment;
exports.getLastCheckedMoment = getLastCheckedMoment;
exports.daysPassedSincePostedDate = daysPassedSincePostedDate;
exports.getContactFormData = getContactFormData;
exports.getContactFormTabFeeder = getContactFormTabFeeder;
exports.getListingTypeJSONFileName = getListingTypeJSONFileName;
exports.formatYesOrNoFields = formatYesOrNoFields;
exports.moneyFormat = moneyFormat;

/************************************
* public functions
************************************/

function commonDateFormat(val, formatting) {
  var formattedDate = (0, _moment2.default)(val, formatting);
  return val && formattedDate.isValid() ? formattedDate.format('MMM D, YYYY') : null;
}

function getLastUpdatedMoment(property) {
  var post_modified = property.post_modified;


  var parsed = _moment2.default.utc(post_modified, _lib.Lib.COMMON_DATE_FORMAT_1);
  if (!parsed.isValid()) {
    console.warn('date ' + post_modified + ' could not be parsed');
    return false;
  } else {
    return parsed;
  }
}

function daysPassedSincePostedDate(property) {
  var rets_list_date = property.rets_list_date;


  var parsed = _moment2.default.utc(rets_list_date, _lib.Lib.COMMON_DATE_FORMAT_1);
  if (!parsed.isValid()) {
    console.warn('date ' + rets_list_date + ' could not be parsed');
    return false;
  } else {
    var now = _moment2.default.utc();
    return now.diff(parsed, 'days') !== 0 ? now.diff(parsed, 'days') : 1;
  }
}

function getLastCheckedMoment(property) {
  var post_modified = property.post_modified,
      wpp_import_time = property.wpp_import_time;


  var post_modified_moment = _moment2.default.utc(post_modified, _lib.Lib.COMMON_DATE_FORMAT_1);
  var wpp_import_time_moment = _moment2.default.utc(wpp_import_time, _lib.Lib.COMMON_DATE_FORMAT_1);

  var lastCheckedMoment = post_modified_moment;
  if (wpp_import_time && wpp_import_time_moment.isSameOrAfter(post_modified_moment)) {
    lastCheckedMoment = wpp_import_time_moment;
  }

  return lastCheckedMoment;
}

/*
  @params {object} property - curated metadata
  @output {object}

*/
function getContactFormData(property, agents) {
  var agentId = property.agentId,
      agentName = property.agentName,
      agentPhoneNumber = property.agentPhoneNumber,
      mlsId = property.mlsId,
      listing_office = property.listing_office,
      sale_type = property.sale_type;


  var RETSAgent = {
    id: agentId,
    name: agentName,
    phone: agentPhoneNumber
  };

  var saleTypeWithRDC = getSaleTypeWithRDC(property);
  var listingOffice = saleTypeWithRDC.includes('sale') ? 'Red Door Company' : listing_office;

  var agent = void 0;
  if (RETSAgent.id && agents && agents.length) {
    agent = pickProperAgent(RETSAgent, agents, saleTypeWithRDC);
  }

  return {
    agent: agent,
    mlsId: mlsId,
    listingOffice: listingOffice,
    saleType: sale_type,
    saleTypeWithRDC: saleTypeWithRDC
  };
}

function getListingTypeJSONFileName(_ref) {
  var sale_type = _ref.sale_type,
      listing_type = _ref.listing_type;

  var fileName = void 0;

  if (sale_type === 'rent' && listing_type === 'residential') {
    fileName = 'residential_rent_RT_6';
  } else if (sale_type === 'sale' && listing_type === 'residential') {
    fileName = 'residential_sale_RE_1';
  } else if (sale_type === 'sale' && listing_type === 'commercial') {
    fileName = 'commercial_CI_4';
  } else if (sale_type === 'rent' && listing_type === 'commercial') {
    fileName = 'commercial_CI_4';
  } else if (sale_type === 'sale' && listing_type === 'land') {
    fileName = 'land_CU_5_and_LN_3';
  } else if (sale_type === 'rent' && listing_type === 'land') {
    fileName = 'land_CU_5_and_LN_3';
  }

  if (!fileName) {
    console.log('listing type was not found, property data will not be shown');
  }

  return fileName;
}

function getContactFormTabFeeder(post_title, mlsId) {
  return function (selectedTab) {
    var obj = {
      'request-information-sale': {
        'powf_b62d13821a12e61180e4fc15b428cd78': 'I\'m interested in ' + post_title + ' (MLS ' + mlsId + ')'
      },
      'request-showing-sale': {
        'powf_b62d13821a12e61180e4fc15b428cd78': 'I\'d like to schedule a showing for ' + post_title + ' (MLS ' + mlsId + ')'
      },
      'request-showing-rent': {
        'powf_7e1aec73bc16e61180e9c4346bace2d4': 'I\'d like to schedule a showing for ' + post_title + ' (MLS ' + mlsId + ')'
      }
    };
    return obj[selectedTab] || {};
  };
}

function formatYesOrNoFields(data, ESReference) {
  var t = (0, _get2.default)(data, ESReference, false);
  var result = void 0;
  if (t) {
    if (t.includes('No')) {
      result = "No";
    } else {
      result = "Yes";
    }
  } else {
    result = false;
  }
  return result;
};

function moneyFormat(data) {
  return data !== null && data !== 0 && '$' + (0, _numeral2.default)(data).format('0,0');
};

function footFormat(data) {
  return (0, _numeral2.default)(data).format('0,0');
}

/************************************
* private functions
************************************/

var defaultAgentImage = bundle.static_images_url + 'user-placeholder-image.png';

var getAgentImage = function getAgentImage(agentObject) {
  return (0, _get2.default)(agentObject, 'data.images[0][0]', defaultAgentImage);
};
var getAgentName = function getAgentName(agentObject) {
  return (0, _get2.default)(agentObject, 'data.display_name', null);
};
var getAgentPhone = function getAgentPhone(agentObject) {
  return (0, _get2.default)(agentObject, 'data.meta.phone_number[0]', null);
};

function findAgentById(agents, agentId) {
  var agent = {};

  var foundAgent = agents.find(function (e) {
    return (0, _get2.default)(e, 'data.meta.triangle_mls_id[0]') === agentId;
  });

  if (foundAgent) {
    agent.image = getAgentImage(foundAgent);
    agent.name = getAgentName(foundAgent);
    agent.phone = getAgentPhone(foundAgent);
  }

  return agent;
}

function findRandomAgentBySaleType(agents, saleType) {
  var agent = {};

  var agentsBySaleTypes = agents.filter(function (a) {
    return a.data.meta.sale_type ? a.data.meta.sale_type[0].includes(saleType) : null;
  });

  if (agentsBySaleTypes.length) {
    var randomAgent = agentsBySaleTypes[Math.floor(Math.random() * agentsBySaleTypes.length)];
    agent.image = getAgentImage(randomAgent);
    agent.name = getAgentName(randomAgent);
    agent.phone = getAgentPhone(randomAgent);
  }

  return agent;
}

function pickProperAgent(RETSAgent, agents, saleTypeWithRDC) {
  var agent = void 0;

  if (saleTypeWithRDC === 'rentRDC' || saleTypeWithRDC === 'saleRDC') {
    agent = findAgentById(agents, RETSAgent.id);
  } else if (saleTypeWithRDC === 'rentNOTRdc') {
    agent = RETSAgent;
    if (!RETSAgent.image) {
      agent.image = defaultAgentImage;
    }
  } else if (saleTypeWithRDC === 'saleNotRdc') {
    agent = findRandomAgentBySaleType(agents, 'Buy');
  }

  return agent;
}

function getSaleTypeWithRDC(_ref2) {
  var sale_type = _ref2.sale_type,
      sale_types = _ref2.sale_types,
      listing_office = _ref2.listing_office;

  var saleTypeWithRDC = void 0;
  var isRDCListing = listing_office === 'Red Door Company';

  if (sale_type === 'rent' && isRDCListing) {
    saleTypeWithRDC = 'rentRDC';
  } else if (sale_type === 'rent' && !isRDCListing) {
    saleTypeWithRDC = 'rentNOTRdc';
  } else if (sale_type === 'sale' && isRDCListing) {
    saleTypeWithRDC = 'saleRDC';
  } else if (sale_type === 'sale' && !isRDCListing) {
    saleTypeWithRDC = 'saleNotRdc';
  }

  return saleTypeWithRDC;
}

/***/ }),
/* 1051 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 1052 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(1069),
    baseAssignValue = __webpack_require__(1078);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 1053 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1194);


/***/ }),
/* 1054 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// ==============================
// THEME
// ==============================



var theme = {};

// container
theme.container = {
	background: 'rgba(0, 0, 0, 0.8)',
	gutter: {
		horizontal: 10,
		vertical: 10
	},
	zIndex: 2001
};

// header
theme.header = {
	height: 40
};
theme.close = {
	fill: 'white'
};

// footer
theme.footer = {
	color: 'white',
	count: {
		color: 'rgba(255, 255, 255, 0.75)',
		fontSize: '0.85em'
	},
	height: 40,
	gutter: {
		horizontal: 0,
		vertical: 5
	}
};

// thumbnails
theme.thumbnail = {
	activeBorderColor: 'white',
	size: 50,
	gutter: 2
};

// arrow
theme.arrow = {
	background: 'none',
	fill: 'white',
	height: 120
};

module.exports = theme;

/***/ }),
/* 1055 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.1' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 1056 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(1065);
var IE8_DOM_DEFINE = __webpack_require__(1133);
var toPrimitive = __webpack_require__(1089);
var dP = Object.defineProperty;

exports.f = __webpack_require__(1057) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 1057 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(1067)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 1058 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 1059 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _bindFunctions = __webpack_require__(1215);

var _bindFunctions2 = _interopRequireDefault(_bindFunctions);

var _canUseDom = __webpack_require__(1216);

var _canUseDom2 = _interopRequireDefault(_canUseDom);

var _deepMerge = __webpack_require__(1217);

var _deepMerge2 = _interopRequireDefault(_deepMerge);

module.exports = {
	bindFunctions: _bindFunctions2['default'],
	canUseDom: _canUseDom2['default'],
	deepMerge: _deepMerge2['default']
};

/***/ }),
/* 1060 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1051);
var core = __webpack_require__(1055);
var ctx = __webpack_require__(1132);
var hide = __webpack_require__(1061);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && key in exports) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 1061 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(1056);
var createDesc = __webpack_require__(1072);
module.exports = __webpack_require__(1057) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 1062 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(1136);
var defined = __webpack_require__(1090);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 1063 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(1093)('wks');
var uid = __webpack_require__(1074);
var Symbol = __webpack_require__(1051).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 1064 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getZoning = exports.getZip = exports.getYearBuilt = exports.getWaterHeater = exports.getWaterfrontType = exports.getWaterfront = exports.getWaterAndSewer = exports.getUnitNumber = exports.getType = exports.getTotalOtherAreaSQFT = exports.getTotalLivingAreaSQFT = exports.getTotalBathrooms = exports.getSubTypes = exports.getSubArea = exports.getStyle = exports.getStreetNumber = exports.getStreetDirectional = exports.getStreet = exports.getStatus = exports.getState = exports.getSQFT = exports.getRoof = exports.getRoadFrontage = exports.getRestrictiveCovenants = exports.getPublishedDate = exports.getPropertyType = exports.getPropertySubType = exports.getPricePerSQFT = exports.getPricePerAcre = exports.getPrice = exports.getPostDirectional = exports.getPool = exports.getParking = exports.getOtherRooms = exports.getOtherAreaBelowGrade = exports.getOtherAreaAboveGradeSQFT = exports.getNumberOfRooms = exports.getNewConstruction = exports.getNeighborhood = exports.getModifiedDate = exports.getMLSId = exports.getMiddleSchool = exports.getMasterBedroomOnFirstFloor = exports.getLotSizeDim = exports.getLotSizeArea = exports.getLotNumber = exports.getLotDescription = exports.getLongitude = exports.getLivingAreaBelowGradeSQFT = exports.getLivingAreaAboveGradeSQFT = exports.getListingType = exports.getListingStatuses = exports.getLatitude = exports.getInteriorFeatures = exports.getInsideCity = exports.getHighSchool = exports.getHeatingFuel = exports.getHeating = exports.getHalfBathrooms = exports.getGreenBuildingFeatures = exports.getGreenBuildingCert = exports.getGarageCapacity = exports.getFullBathrooms = exports.getFoundation = exports.getFlooring = exports.getFireplacesDescription = exports.getFireplaces = exports.getExteriorFinish = exports.getExteriorFeatures = exports.getEstFinYear = exports.getEstFinMonth = exports.getElementarySchool = exports.getDirections = exports.getDiningRoom = exports.getDesign = exports.getCrossStreet = exports.getCounty = exports.getCooling = exports.getConstructionCompletion = exports.getCity = exports.getBedroomsOnFirstFloor = exports.getBedrooms = exports.getBathFeatures = exports.getBasementDescription = exports.getBasement = exports.getAreaAndSubArea = exports.getArea = exports.getAppliances = exports.getActiveAdultCommunityNA = exports.getActiveAdultCommunity = exports.getAcres = exports.getAccessibility = undefined;

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _propertyHelper = __webpack_require__(1050);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.getAccessibility = getAccessibility;
exports.getAcres = getAcres;
exports.getActiveAdultCommunity = getActiveAdultCommunity;
exports.getActiveAdultCommunityNA = getActiveAdultCommunityNA;
exports.getAppliances = getAppliances;
exports.getArea = getArea;
exports.getAreaAndSubArea = getAreaAndSubArea;
exports.getBasement = getBasement;
exports.getBasementDescription = getBasementDescription;
exports.getBathFeatures = getBathFeatures;
exports.getBedrooms = getBedrooms;
exports.getBedroomsOnFirstFloor = getBedroomsOnFirstFloor;
exports.getCity = getCity;
exports.getConstructionCompletion = getConstructionCompletion;
exports.getCooling = getCooling;
exports.getCounty = getCounty;
exports.getCrossStreet = getCrossStreet;
exports.getDesign = getDesign;
exports.getDiningRoom = getDiningRoom;
exports.getDirections = getDirections;
exports.getElementarySchool = getElementarySchool;
exports.getEstFinMonth = getEstFinMonth;
exports.getEstFinYear = getEstFinYear;
exports.getExteriorFeatures = getExteriorFeatures;
exports.getExteriorFinish = getExteriorFinish;
exports.getFireplaces = getFireplaces;
exports.getFireplacesDescription = getFireplacesDescription;
exports.getFlooring = getFlooring;
exports.getFoundation = getFoundation;
exports.getFullBathrooms = getFullBathrooms;
exports.getGarageCapacity = getGarageCapacity;
exports.getGreenBuildingCert = getGreenBuildingCert;
exports.getGreenBuildingFeatures = getGreenBuildingFeatures;
exports.getHalfBathrooms = getHalfBathrooms;
exports.getHeating = getHeating;
exports.getHeatingFuel = getHeatingFuel;
exports.getHighSchool = getHighSchool;
exports.getInsideCity = getInsideCity;
exports.getInteriorFeatures = getInteriorFeatures;
exports.getLatitude = getLatitude;
exports.getListingStatuses = getListingStatuses;
exports.getListingType = getListingType;
exports.getLivingAreaAboveGradeSQFT = getLivingAreaAboveGradeSQFT;
exports.getLivingAreaBelowGradeSQFT = getLivingAreaBelowGradeSQFT;
exports.getLongitude = getLongitude;
exports.getLotDescription = getLotDescription;
exports.getLotNumber = getLotNumber;
exports.getLotSizeArea = getLotSizeArea;
exports.getLotSizeDim = getLotSizeDim;
exports.getMasterBedroomOnFirstFloor = getMasterBedroomOnFirstFloor;
exports.getMiddleSchool = getMiddleSchool;
exports.getMLSId = getMLSId;
exports.getModifiedDate = getModifiedDate;
exports.getNeighborhood = getNeighborhood;
exports.getNewConstruction = getNewConstruction;
exports.getNumberOfRooms = getNumberOfRooms;
exports.getOtherAreaAboveGradeSQFT = getOtherAreaAboveGradeSQFT;
exports.getOtherAreaBelowGrade = getOtherAreaBelowGrade;
exports.getOtherRooms = getOtherRooms;
exports.getParking = getParking;
exports.getPool = getPool;
exports.getPostDirectional = getPostDirectional;
exports.getPrice = getPrice;
exports.getPricePerAcre = getPricePerAcre;
exports.getPricePerSQFT = getPricePerSQFT;
exports.getPropertySubType = getPropertySubType;
exports.getPropertyType = getPropertyType;
exports.getPublishedDate = getPublishedDate;
exports.getRestrictiveCovenants = getRestrictiveCovenants;
exports.getRoadFrontage = getRoadFrontage;
exports.getRoof = getRoof;
exports.getSQFT = getSQFT;
exports.getState = getState;
exports.getStatus = getStatus;
exports.getStreet = getStreet;
exports.getStreetDirectional = getStreetDirectional;
exports.getStreetNumber = getStreetNumber;
exports.getStyle = getStyle;
exports.getSubArea = getSubArea;
exports.getSubTypes = getSubTypes;
exports.getTotalBathrooms = getTotalBathrooms;
exports.getTotalLivingAreaSQFT = getTotalLivingAreaSQFT;
exports.getTotalOtherAreaSQFT = getTotalOtherAreaSQFT;
exports.getType = getType;
exports.getUnitNumber = getUnitNumber;
exports.getWaterAndSewer = getWaterAndSewer;
exports.getWaterfront = getWaterfront;
exports.getWaterfrontType = getWaterfrontType;
exports.getWaterHeater = getWaterHeater;
exports.getYearBuilt = getYearBuilt;
exports.getZip = getZip;
exports.getZoning = getZoning;

/************************************
* public functions
************************************/

function getAccessibility(data) {
  return (0, _get2.default)(data, 'tax_input.rets_accessibility.rets_accessibility', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getAcres(data) {
  return (0, _get2.default)(data, 'post_meta.rets_acres.rets_acres', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getActiveAdultCommunity(data) {
  var v = (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_active_adult_community.rets_active_adult_community[0].name');
  return v === "No" ? null : v;
}

function getActiveAdultCommunityNA(data) {
  return (0, _get2.default)(data, 'post_meta.rets_active_adult_community_na[0]', null);
}

function getAppliances(data) {
  return (0, _get2.default)(data, 'tax_input.rets_equipment_appliances.rets_equipment_appliances', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getArea(data) {
  return (0, _get2.default)(data, 'tax_input.rets_listing_area.rets_listing_area', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getAreaAndSubArea(data) {
  var area = getArea(data);
  var subArea = getSubArea(data);
  if (area === null) {
    return null;
  } else {
    return area + (subArea ? ', ' + subArea : '');
  }
}

function getBasement(data) {
  return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_basement.rets_basement[0].name');
}

function getBasementDescription(data) {
  return (0, _get2.default)(data, 'tax_input.rets_basement.rets_basement', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getBathFeatures(data) {
  return (0, _get2.default)(data, 'tax_input.rets_bath_features.rets_bath_features', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getBedrooms(data) {
  return (0, _get2.default)(data, 'post_meta.rets_beds[0]', false);
}

function getBedroomsOnFirstFloor(data) {
  return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_bedrooms_1st_floor.rets_bedrooms_1st_floor[0].name');
}

function getCity(data) {
  return (0, _get2.default)(data, 'tax_input.location_city.location_city', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getConstructionCompletion(data) {
  var estFinMonth = getEstFinMonth(data);
  var estFinYear = getEstFinYear(data);
  if (estFinMonth === null) {
    return null;
  } else {
    return estFinMonth + (estFinYear ? ' ' + estFinYear : '');
  }
}

function getCooling(data) {
  return (0, _get2.default)(data, 'tax_input.rets_cooling.rets_cooling', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getCounty(data) {
  return (0, _get2.default)(data, 'tax_input.location_county.location_county', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getCrossStreet(data) {
  return (0, _get2.default)(data, 'post_meta.rets_cross_street[0]', null);
}

function getDesign(data) {
  return (0, _get2.default)(data, 'tax_input.rets_design.rets_design', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getDiningRoom(data) {
  return (0, _get2.default)(data, 'tax_input.rets_dining_room.rets_dining_room[0].name', false);
}

function getDirections(data) {
  return (0, _get2.default)(data, 'post_meta.rets_directions[0]', null);
}

function getElementarySchool(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_schools.elementary_school', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getEstFinMonth(data) {
  return (0, _get2.default)(data, 'tax_input.rets_est_fin_month.rets_est_fin_month', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getEstFinYear(data) {
  return (0, _get2.default)(data, 'post_meta.rets_est_fin_year[0]', null);
}

function getExteriorFeatures(data) {
  return (0, _get2.default)(data, 'tax_input.rets_exterior_features.rets_exterior_features', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getExteriorFinish(data) {
  return (0, _get2.default)(data, 'tax_input.rets_exterior_finish.rets_exterior_finish', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getFireplaces(data) {
  return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_fireplace.rets_fireplace[0].name', null);
}

function getFireplacesDescription(data) {
  return (0, _get2.default)(data, 'tax_input.rets_fireplaces.rets_fireplaces', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getFlooring(data) {
  return (0, _get2.default)(data, 'tax_input.rets_flooring.rets_flooring', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getFoundation(data) {
  return (0, _get2.default)(data, 'tax_input.rets_foundation.rets_foundation', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getFullBathrooms(data) {
  return (0, _get2.default)(data, 'post_meta.rets_baths_full[0]', false);
}

function getGarageCapacity(data) {
  return (0, _get2.default)(data, 'post_meta.rets_garage[0]', null);
}

function getGreenBuildingCert(data) {
  return (0, _get2.default)(data, 'tax_input.rets_green_building_cert.rets_green_building_cert', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getGreenBuildingFeatures(data) {
  return (0, _get2.default)(data, 'tax_input.rets_green_building_features.rets_green_building_features', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getHalfBathrooms(data) {
  return (0, _get2.default)(data, 'post_meta.rets_baths_half[0]', false);
}

function getHeating(data) {
  return (0, _get2.default)(data, 'tax_input.rets_heating.rets_heating', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getHeatingFuel(data) {
  return (0, _get2.default)(data, 'tax_input.rets_fuel_heat.rets_fuel_heat', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getHighSchool(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_schools.high_school', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getInsideCity(data) {
  var t = (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_inside_city.rets_inside_city[0].name');
  if (t === 'Yes') {
    var city = (0, _get2.default)(data, 'tax_input.location_city.location_city', []).map(function (d) {
      return d.name;
    });
    return t + (city.length ? ', ' + city.join(', ') : '');
  } else if (t === 'No') {
    return t;
  } else if (t === false) {
    return null;
  }
}

function getInteriorFeatures(data) {
  return (0, _get2.default)(data, 'tax_input.rets_interior_features.rets_interior_features', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getLatitude(data) {
  return (0, _get2.default)(data, 'post_meta.rets_latitude[0]', null);
}

function getListingStatuses(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_sale_status.listing_status_sale', []).map(function (d) {
    return d.name.replace('For ', '');
  }).join(', ');
}

function getListingType(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_listing_type.listing_type', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getLivingAreaAboveGradeSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_living_area_above_grade[0]', null);
}

function getLivingAreaBelowGradeSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_living_area_below_grade[0]', null);
}

function getLongitude(data) {
  return (0, _get2.default)(data, 'post_meta.rets_longitude[0]', null);
}

function getLotDescription(data) {
  return (0, _get2.default)(data, 'tax_input.rets_lot_description.rets_lot_description', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getLotNumber(data) {
  return (0, _get2.default)(data, 'post_meta.rets_lot_number[0]', null);
}

function getLotSizeArea(data) {
  return (0, _get2.default)(data, 'post_meta.rets_lot_size_area[0]', null);
}

function getLotSizeDim(data) {
  return (0, _get2.default)(data, 'post_meta.rets_lot_size_dim[0]', null);
}

function getMasterBedroomOnFirstFloor(data) {
  return (0, _get2.default)(data, 'post_meta.rets_master_bedroom_dimensions[0]', false);
}

function getMiddleSchool(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_schools.middle_school', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getMLSId(data) {
  return (0, _get2.default)(data, 'post_meta.rets_mls_number[0]', null);
}

function getModifiedDate(data) {
  var date = (0, _get2.default)(data, 'post_modified', null);
  return (0, _propertyHelper.commonDateFormat)(date, 'YYYY-MM-DD');
}

function getNeighborhood(data) {
  return (0, _get2.default)(data, 'tax_input.location_neighborhood.location_neighborhood', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getNewConstruction(data) {
  return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_new_construction.rets_new_construction[0].name');
}

function getNumberOfRooms(data) {
  return (0, _get2.default)(data, 'post_meta.rets_number_of_rooms[0]', false);
}

function getOtherAreaAboveGradeSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_other_area_above_grade[0]', null);
}

function getOtherAreaBelowGrade(data) {
  return (0, _get2.default)(data, 'post_meta.rets_other_area_below_grade[0]', null);
}

function getOtherRooms(data) {
  return (0, _get2.default)(data, 'tax_input.rets_other_rooms.rets_other_rooms', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getParking(data) {
  return (0, _get2.default)(data, 'tax_input.rets_parking.rets_parking', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getPool(data) {
  return (0, _get2.default)(data, 'tax_input.rets_pool.rets_pool', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getPostDirectional(data) {
  return (0, _get2.default)(data, 'tax_input.rets_post_direction.rets_post_direction', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getPrice(data) {
  return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_list_price[0]', null));
}

function getPricePerAcre(data) {
  return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_price_per_acre[0]', null));
}

function getPricePerSQFT(data) {
  return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_price_per_sqft[0]', null));
}

function getPropertySubType(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_listing_subtype.listing_sub_type', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getPropertyType(data) {
  return (0, _get2.default)(data, 'post_meta.property_type', []).join(', ') || null;
}

function getPublishedDate(data) {
  var date = (0, _get2.default)(data, 'post_meta.rets_list_date[0]', null);
  return (0, _propertyHelper.commonDateFormat)(date, 'YYYY-MM-DD');
}

function getRestrictiveCovenants(data) {
  return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_restrictive_covenants.rets_restrictive_covenants[0].name');
}

function getRoadFrontage(data) {
  var v = (0, _get2.default)(data, 'post_meta.rets_road_frontage[0]', null);
  return v ? (0, _propertyHelper.footFormat)(v) + ' ft' : null;
}

function getRoof(data) {
  return (0, _get2.default)(data, 'tax_input.rets_roof.rets_roof', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_approx_lot_sq_ft[0]', null);
}

function getState(data) {
  return (0, _get2.default)(data, 'tax_input.location_state.location_state', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getStatus(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_listing_status.listing_status', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getStreet(data) {
  return (0, _get2.default)(data, 'post_meta.rets_street_name[0]', null);
}

function getStreetDirectional(data) {
  return (0, _get2.default)(data, 'post_meta.rets_street_dir_prefix[0]', null);
}

function getStreetNumber(data) {
  return (0, _get2.default)(data, 'post_meta.rets_street_number[0]', null);
}

function getStyle(data) {
  return (0, _get2.default)(data, 'tax_input.rets_style.rets_style', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getSubArea(data) {
  return (0, _get2.default)(data, 'tax_input.rets_sub_area.rets_sub_area', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getSubTypes(data) {
  return (0, _get2.default)(data, 'tax_input.wpp_listing_subtype.listing_sub_type', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getTotalBathrooms(data) {
  return (0, _get2.default)(data, 'post_meta.rets_total_baths[0]', false);
}

function getTotalLivingAreaSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_living_area[0]', null);
}

function getTotalOtherAreaSQFT(data) {
  return (0, _get2.default)(data, 'post_meta.rets_total_other_area_sq_ft[0]', null);
}

function getType(data) {
  var propertyType = getListingType(data);
  var propertySubtype = getPropertySubType(data);
  if (propertySubtype === null) {
    return null;
  } else {
    return propertyType + (propertySubtype ? ', ' + propertySubtype : '');
  }
}

function getUnitNumber(data) {
  return (0, _get2.default)(data, 'post_meta.rets_unit_number[0]', null);
}

function getWaterAndSewer(data) {
  return (0, _get2.default)(data, 'tax_input.rets_water_sewer.rets_water_sewer', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getWaterfront(data) {
  return (0, _get2.default)(data, 'tax_input.rets_water_body_name.rets_water_body_name', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getWaterfrontType(data) {
  return (0, _get2.default)(data, 'tax_input.rets_waterfront_type.rets_waterfront_type', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getWaterHeater(data) {
  return (0, _get2.default)(data, 'tax_input.rets_water_heater.rets_water_heater', []).map(function (d) {
    return d.name;
  }).join(', ') || null;
}

function getYearBuilt(data) {
  return (0, _get2.default)(data, 'post_meta.rets_year_built[0]', null);
}

function getZip(data) {
  return (0, _get2.default)(data, 'post_meta.rets_postal_code[0]', null);
}

function getZoning(data) {
  return (0, _get2.default)(data, 'post_meta.rets_zoning[0]', null);
}

/***/ }),
/* 1065 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(1066);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 1066 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 1067 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 1068 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 1069 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(1078),
    eq = __webpack_require__(154);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 1070 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(394),
    baseKeysIn = __webpack_require__(1161),
    isArrayLike = __webpack_require__(62);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 1071 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// returns a style object with a single concated prefixed value string

exports.default = function (property, value) {
  var replacer = arguments.length <= 2 || arguments[2] === undefined ? function (prefix, value) {
    return prefix + value;
  } : arguments[2];
  return _defineProperty({}, property, ['-webkit-', '-moz-', ''].map(function (prefix) {
    return replacer(prefix, value);
  }));
};

module.exports = exports['default'];

/***/ }),
/* 1072 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 1073 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(1135);
var enumBugKeys = __webpack_require__(1094);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 1074 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 1075 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 1076 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(155),
    upperFirst = __webpack_require__(1147);

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return upperFirst(toString(string).toLowerCase());
}

module.exports = capitalize;


/***/ }),
/* 1077 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var noUiSlider = __webpack_require__(1150);
__webpack_require__(1151);

var Slider = function (_Component) {
  _inherits(Slider, _Component);

  function Slider(props) {
    _classCallCheck(this, Slider);

    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(Slider, [{
    key: 'createNoUiSlider',
    value: function createNoUiSlider(props) {
      var formatter = props.formatter,
          handleOnClick = props.handleOnClick,
          max = props.max,
          min = props.min,
          start = props.start,
          step = props.step,
          to = props.to;


      var range = {
        min: min,
        max: max
      };

      var percentages = [20, 40, 60, 80];

      var filterPips = function filterPips(value, type) {
        if (value === min || value === max) {
          return 1;
        } else {
          var ourValue = value / max * 100;
          return percentages.indexOf(ourValue) >= 0 ? 1 : 0;
        }
      };
      this.slider = noUiSlider.create(this.sliderElement, {
        connect: true,
        format: formatter ? formatter() : null,
        pips: {
          mode: 'steps',
          density: 5,
          filter: filterPips,
          format: formatter ? formatter() : null
        },
        range: range,
        start: [start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT ? min : start, to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT ? max : to],
        step: step,
        tooltips: true
      });
      this.slider.on('change', function (values, handle, unencoded) {
        var start = void 0;
        var to = void 0;
        if (values[0] === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT) {
          start = _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT;
        } else {
          if (this.props.allowDecimalPlaces) {
            start = unencoded[0].toFixed(2);
          } else {
            start = Math.round(unencoded[0]);
          }
        }

        if (values[1] === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT) {
          to = _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT;
        } else {
          if (this.props.allowDecimalPlaces) {
            to = unencoded[1].toFixed(2);
          } else {
            to = Math.round(unencoded[1]);
          }
        }

        handleOnClick(start, to);
      }.bind(this));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.createNoUiSlider(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.start !== this.props.start || nextProps.to !== this.props.to) {
        var start = nextProps.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT ? this.props.min : nextProps.start;
        var to = nextProps.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT ? this.props.max : nextProps.to;
        this.sliderElement.noUiSlider.set([start, to]);
      }

      if (nextProps.min !== this.props.min || nextProps.max !== this.props.max) {
        this.sliderElement.noUiSlider.destroy();
        this.createNoUiSlider(nextProps);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + "filter-slider", ref: function ref(r) {
            return _this2.sliderElement = r;
          } })
      );
    }
  }]);

  return Slider;
}(_react.Component);

Slider.propTypes = {
  allowDecimalPlaces: _propTypes2.default.bool,
  formatter: _propTypes2.default.func,
  handleOnClick: _propTypes2.default.func.isRequired,
  min: _propTypes2.default.number,
  max: _propTypes2.default.number,
  start: _propTypes2.default.any,
  step: _propTypes2.default.any,
  to: _propTypes2.default.any
};
;

exports.default = Slider;

/***/ }),
/* 1078 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(399);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 1079 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(392),
    getSymbolsIn = __webpack_require__(1111),
    keysIn = __webpack_require__(1070);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 1080 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(395);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 1081 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(388);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 1082 */
/***/ (function(module, exports) {

/**
 * toString ref.
 */

var toString = Object.prototype.toString;

/**
 * Return the type of `val`.
 *
 * @param {Mixed} val
 * @return {String}
 * @api public
 */

module.exports = function(val){
  switch (toString.call(val)) {
    case '[object Date]': return 'date';
    case '[object RegExp]': return 'regexp';
    case '[object Arguments]': return 'arguments';
    case '[object Array]': return 'array';
    case '[object Error]': return 'error';
  }

  if (val === null) return 'null';
  if (val === undefined) return 'undefined';
  if (val !== val) return 'nan';
  if (val && val.nodeType === 1) return 'element';

  val = val.valueOf
    ? val.valueOf()
    : Object.prototype.valueOf.apply(val)

  return typeof val;
};


/***/ }),
/* 1083 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var helper = {
  decodeHtml: decodeHtml,
  scrollToElement: scrollToElement
};

exports.default = helper;

/************************************
* public functions
************************************/

function decodeHtml(html) {
  var txt = document.createElement('textarea');
  txt.innerHTML = html;
  return txt.value;
}

function scrollToElement(container, target) {
  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;
  var easing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'easeInQuad';

  var topPos = 0;
  var parent = target;
  while (parent !== container && !!parent) {
    topPos += parent.offsetTop;
    parent = parent.offsetParent;
  }

  if ('requestAnimationFrame' in window === false) {
    container.scrollTop = topPos;
    return;
  }

  var start = container.scrollTop;
  var startTime = 'now' in window.performance ? performance.now() : new Date().getTime();

  var prevPos = null;
  var direction = start - topPos >= 0 ? 1 : -1;

  var scroll = function scroll() {
    var now = 'now' in window.performance ? performance.now() : new Date().getTime();
    var time = Math.min(1, (now - startTime) / duration);
    var timeFunction = easingTimeGetters(easing)(time);

    container.scrollTop = Math.ceil(timeFunction * (topPos - start) + start);

    if (direction * (container.scrollTop - topPos) <= 0 || container.scrollTop === prevPos) {
      return;
    }

    prevPos = container.scrollTop;

    requestAnimationFrame(scroll);
  };

  scroll();
  return false;
}

/************************************
* private functions
************************************/
function easingTimeGetters(easing) {
  var getters = {
    linear: function linear(t) {
      return t;
    },
    easeInQuad: function easeInQuad(t) {
      return t * t;
    },
    easeOutQuad: function easeOutQuad(t) {
      return t * (2 - t);
    },
    easeInOutQuad: function easeInOutQuad(t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    },
    easeInCubic: function easeInCubic(t) {
      return t * t * t;
    },
    easeOutCubic: function easeOutCubic(t) {
      return --t * t * t + 1;
    },
    easeInOutCubic: function easeInOutCubic(t) {
      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
    },
    easeInQuart: function easeInQuart(t) {
      return t * t * t * t;
    },
    easeOutQuart: function easeOutQuart(t) {
      return 1 - --t * t * t * t;
    },
    easeInOutQuart: function easeInOutQuart(t) {
      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
    },
    easeInQuint: function easeInQuint(t) {
      return t * t * t * t * t;
    },
    easeOutQuint: function easeOutQuint(t) {
      return 1 + --t * t * t * t * t;
    },
    easeInOutQuint: function easeInOutQuint(t) {
      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
    }
  };

  return getters[easing];
}

/***/ }),
/* 1084 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
//! version : 2.18.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

var hookCallback;

function hooks () {
    return hookCallback.apply(null, arguments);
}

// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback (callback) {
    hookCallback = callback;
}

function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
}

function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function isObjectEmpty(obj) {
    var k;
    for (k in obj) {
        // even if its not own property I'd still call it non-empty
        return false;
    }
    return true;
}

function isUndefined(input) {
    return input === void 0;
}

function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
}

function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
}

function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
        res.push(fn(arr[i], i));
    }
    return res;
}

function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}

function extend(a, b) {
    for (var i in b) {
        if (hasOwnProp(b, i)) {
            a[i] = b[i];
        }
    }

    if (hasOwnProp(b, 'toString')) {
        a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
        a.valueOf = b.valueOf;
    }

    return a;
}

function createUTC (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
}

function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
        empty           : false,
        unusedTokens    : [],
        unusedInput     : [],
        overflow        : -2,
        charsLeftOver   : 0,
        nullInput       : false,
        invalidMonth    : null,
        invalidFormat   : false,
        userInvalidated : false,
        iso             : false,
        parsedDateParts : [],
        meridiem        : null,
        rfc2822         : false,
        weekdayMismatch : false
    };
}

function getParsingFlags(m) {
    if (m._pf == null) {
        m._pf = defaultParsingFlags();
    }
    return m._pf;
}

var some;
if (Array.prototype.some) {
    some = Array.prototype.some;
} else {
    some = function (fun) {
        var t = Object(this);
        var len = t.length >>> 0;

        for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
                return true;
            }
        }

        return false;
    };
}

var some$1 = some;

function isValid(m) {
    if (m._isValid == null) {
        var flags = getParsingFlags(m);
        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {
            return i != null;
        });
        var isNowValid = !isNaN(m._d.getTime()) &&
            flags.overflow < 0 &&
            !flags.empty &&
            !flags.invalidMonth &&
            !flags.invalidWeekday &&
            !flags.nullInput &&
            !flags.invalidFormat &&
            !flags.userInvalidated &&
            (!flags.meridiem || (flags.meridiem && parsedParts));

        if (m._strict) {
            isNowValid = isNowValid &&
                flags.charsLeftOver === 0 &&
                flags.unusedTokens.length === 0 &&
                flags.bigHour === undefined;
        }

        if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
        }
        else {
            return isNowValid;
        }
    }
    return m._isValid;
}

function createInvalid (flags) {
    var m = createUTC(NaN);
    if (flags != null) {
        extend(getParsingFlags(m), flags);
    }
    else {
        getParsingFlags(m).userInvalidated = true;
    }

    return m;
}

// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties = hooks.momentProperties = [];

function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
        to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
        to._i = from._i;
    }
    if (!isUndefined(from._f)) {
        to._f = from._f;
    }
    if (!isUndefined(from._l)) {
        to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
        to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
        to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
        to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
        to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
        to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
        to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
        for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];
            if (!isUndefined(val)) {
                to[prop] = val;
            }
        }
    }

    return to;
}

var updateInProgress = false;

// Moment prototype object
function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
        this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
        updateInProgress = true;
        hooks.updateOffset(this);
        updateInProgress = false;
    }
}

function isMoment (obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
}

function absFloor (number) {
    if (number < 0) {
        // -0 -> 0
        return Math.ceil(number) || 0;
    } else {
        return Math.floor(number);
    }
}

function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
        value = absFloor(coercedNumber);
    }

    return value;
}

// compare two arrays, return the number of differences
function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
        if ((dontConvert && array1[i] !== array2[i]) ||
            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
            diffs++;
        }
    }
    return diffs + lengthDiff;
}

function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false &&
            (typeof console !==  'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}

function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                } else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}

var deprecations = {};

function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}

hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}

function set (config) {
    var prop, i;
    for (i in config) {
        prop = config[i];
        if (isFunction(prop)) {
            this[i] = prop;
        } else {
            this['_' + i] = prop;
        }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
            '|' + (/\d{1,2}/).source);
}

function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig), prop;
    for (prop in childConfig) {
        if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
            } else {
                delete res[prop];
            }
        }
    }
    for (prop in parentConfig) {
        if (hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
        }
    }
    return res;
}

function Locale(config) {
    if (config != null) {
        this.set(config);
    }
}

var keys;

if (Object.keys) {
    keys = Object.keys;
} else {
    keys = function (obj) {
        var i, res = [];
        for (i in obj) {
            if (hasOwnProp(obj, i)) {
                res.push(i);
            }
        }
        return res;
    };
}

var keys$1 = keys;

var defaultCalendar = {
    sameDay : '[Today at] LT',
    nextDay : '[Tomorrow at] LT',
    nextWeek : 'dddd [at] LT',
    lastDay : '[Yesterday at] LT',
    lastWeek : '[Last] dddd [at] LT',
    sameElse : 'L'
};

function calendar (key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
}

var defaultLongDateFormat = {
    LTS  : 'h:mm:ss A',
    LT   : 'h:mm A',
    L    : 'MM/DD/YYYY',
    LL   : 'MMMM D, YYYY',
    LLL  : 'MMMM D, YYYY h:mm A',
    LLLL : 'dddd, MMMM D, YYYY h:mm A'
};

function longDateFormat (key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
        return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
        return val.slice(1);
    });

    return this._longDateFormat[key];
}

var defaultInvalidDate = 'Invalid date';

function invalidDate () {
    return this._invalidDate;
}

var defaultOrdinal = '%d';
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

function ordinal (number) {
    return this._ordinal.replace('%d', number);
}

var defaultRelativeTime = {
    future : 'in %s',
    past   : '%s ago',
    s  : 'a few seconds',
    ss : '%d seconds',
    m  : 'a minute',
    mm : '%d minutes',
    h  : 'an hour',
    hh : '%d hours',
    d  : 'a day',
    dd : '%d days',
    M  : 'a month',
    MM : '%d months',
    y  : 'a year',
    yy : '%d years'
};

function relativeTime (number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ?
        output(number, withoutSuffix, string, isFuture) :
        output.replace(/%d/i, number);
}

function pastFuture (diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
}

var aliases = {};

function addUnitAlias (unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
}

function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;

    for (prop in inputObject) {
        if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
            }
        }
    }

    return normalizedInput;
}

var priorities = {};

function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
}

function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
        units.push({unit: u, priority: priorities[u]});
    }
    units.sort(function (a, b) {
        return a.priority - b.priority;
    });
    return units;
}

function makeGetSet (unit, keepTime) {
    return function (value) {
        if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
        } else {
            return get(this, unit);
        }
    };
}

function get (mom, unit) {
    return mom.isValid() ?
        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
}

function set$1 (mom, unit, value) {
    if (mom.isValid()) {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }
}

// MOMENTS

function stringGet (units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
        return this[units]();
    }
    return this;
}


function stringSet (units, value) {
    if (typeof units === 'object') {
        units = normalizeObjectUnits(units);
        var prioritized = getPrioritizedUnits(units);
        for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
        }
    } else {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units](value);
        }
    }
    return this;
}

function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}

var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions = {};

var formatTokenFunctions = {};

// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken (token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
        func = function () {
            return this[callback]();
        };
    }
    if (token) {
        formatTokenFunctions[token] = func;
    }
    if (padded) {
        formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
        };
    }
    if (ordinal) {
        formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
        };
    }
}

function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
        return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
}

function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;

    for (i = 0, length = array.length; i < length; i++) {
        if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
        } else {
            array[i] = removeFormattingTokens(array[i]);
        }
    }

    return function (mom) {
        var output = '', i;
        for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
        }
        return output;
    };
}

// format date using native date object
function formatMoment(m, format) {
    if (!m.isValid()) {
        return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
}

function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
        return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        localFormattingTokens.lastIndex = 0;
        i -= 1;
    }

    return format;
}

var match1         = /\d/;            //       0 - 9
var match2         = /\d\d/;          //      00 - 99
var match3         = /\d{3}/;         //     000 - 999
var match4         = /\d{4}/;         //    0000 - 9999
var match6         = /[+-]?\d{6}/;    // -999999 - 999999
var match1to2      = /\d\d?/;         //       0 - 99
var match3to4      = /\d\d\d\d?/;     //     999 - 9999
var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
var match1to3      = /\d{1,3}/;       //       0 - 999
var match1to4      = /\d{1,4}/;       //       0 - 9999
var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

var matchUnsigned  = /\d+/;           //       0 - inf
var matchSigned    = /[+-]?\d+/;      //    -inf - inf

var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


var regexes = {};

function addRegexToken (token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
        return (isStrict && strictRegex) ? strictRegex : regex;
    };
}

function getParseRegexForToken (token, config) {
    if (!hasOwnProp(regexes, token)) {
        return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
}

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
    }));
}

function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}

var tokens = {};

function addParseToken (token, callback) {
    var i, func = callback;
    if (typeof token === 'string') {
        token = [token];
    }
    if (isNumber(callback)) {
        func = function (input, array) {
            array[callback] = toInt(input);
        };
    }
    for (i = 0; i < token.length; i++) {
        tokens[token[i]] = func;
    }
}

function addWeekParseToken (token, callback) {
    addParseToken(token, function (input, array, config, token) {
        config._w = config._w || {};
        callback(input, config._w, config, token);
    });
}

function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
        tokens[token](input, config._a, config, token);
    }
}

var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;

var indexOf;

if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function (o) {
        // I know
        var i;
        for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
                return i;
            }
        }
        return -1;
    };
}

var indexOf$1 = indexOf;

function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
}

// FORMATTING

addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
});

addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
});

addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
});

// ALIASES

addUnitAlias('month', 'M');

// PRIORITY

addUnitPriority('month', 8);

// PARSING

addRegexToken('M',    match1to2);
addRegexToken('MM',   match1to2, match2);
addRegexToken('MMM',  function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
});

addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
});

addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
        array[MONTH] = month;
    } else {
        getParsingFlags(config).invalidMonth = input;
    }
});

// LOCALES

var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths (m, format) {
    if (!m) {
        return isArray(this._months) ? this._months :
            this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] :
        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
}

var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort (m, format) {
    if (!m) {
        return isArray(this._monthsShort) ? this._monthsShort :
            this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
}

function handleStrictParse(monthName, format, strict) {
    var i, ii, mom, llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
        // this is not used
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
        for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'MMM') {
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'MMM') {
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._longMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeMonthsParse (monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
        return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
        }
    }
}

// MOMENTS

function setMonth (mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
        // No op
        return mom;
    }

    if (typeof value === 'string') {
        if (/^\d+$/.test(value)) {
            value = toInt(value);
        } else {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (!isNumber(value)) {
                return mom;
            }
        }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
}

function getSetMonth (value) {
    if (value != null) {
        setMonth(this, value);
        hooks.updateOffset(this, true);
        return this;
    } else {
        return get(this, 'Month');
    }
}

function getDaysInMonth () {
    return daysInMonth(this.year(), this.month());
}

var defaultMonthsShortRegex = matchWord;
function monthsShortRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsShortStrictRegex;
        } else {
            return this._monthsShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
        }
        return this._monthsShortStrictRegex && isStrict ?
            this._monthsShortStrictRegex : this._monthsShortRegex;
    }
}

var defaultMonthsRegex = matchWord;
function monthsRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsStrictRegex;
        } else {
            return this._monthsRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
        }
        return this._monthsStrictRegex && isStrict ?
            this._monthsStrictRegex : this._monthsRegex;
    }
}

function computeMonthsParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom;
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        shortPieces.push(this.monthsShort(mom, ''));
        longPieces.push(this.months(mom, ''));
        mixedPieces.push(this.months(mom, ''));
        mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
}

// FORMATTING

addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});

addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});

addFormatToken(0, ['YYYY',   4],       0, 'year');
addFormatToken(0, ['YYYYY',  5],       0, 'year');
addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

// ALIASES

addUnitAlias('year', 'y');

// PRIORITIES

addUnitPriority('year', 1);

// PARSING

addRegexToken('Y',      matchSigned);
addRegexToken('YY',     match1to2, match2);
addRegexToken('YYYY',   match1to4, match4);
addRegexToken('YYYYY',  match1to6, match6);
addRegexToken('YYYYYY', match1to6, match6);

addParseToken(['YYYYY', 'YYYYYY'], YEAR);
addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
});

// HELPERS

function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}

// HOOKS

hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};

// MOMENTS

var getSetYear = makeGetSet('FullYear', true);

function getIsLeapYear () {
    return isLeapYear(this.year());
}

function createDate (y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date = new Date(y, m, d, h, M, s, ms);

    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
        date.setFullYear(y);
    }
    return date;
}

function createUTCDate (y) {
    var date = new Date(Date.UTC.apply(null, arguments));

    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
    }
    return date;
}

// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
        // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
}

// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear, resDayOfYear;

    if (dayOfYear <= 0) {
        resYear = year - 1;
        resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
        resYear = year + 1;
        resDayOfYear = dayOfYear - daysInYear(year);
    } else {
        resYear = year;
        resDayOfYear = dayOfYear;
    }

    return {
        year: resYear,
        dayOfYear: resDayOfYear
    };
}

function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek, resYear;

    if (week < 1) {
        resYear = mom.year() - 1;
        resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
        resWeek = week - weeksInYear(mom.year(), dow, doy);
        resYear = mom.year() + 1;
    } else {
        resYear = mom.year();
        resWeek = week;
    }

    return {
        week: resWeek,
        year: resYear
    };
}

function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// ALIASES

addUnitAlias('week', 'w');
addUnitAlias('isoWeek', 'W');

// PRIORITIES

addUnitPriority('week', 5);
addUnitPriority('isoWeek', 5);

// PARSING

addRegexToken('w',  match1to2);
addRegexToken('ww', match1to2, match2);
addRegexToken('W',  match1to2);
addRegexToken('WW', match1to2, match2);

addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
});

// HELPERS

// LOCALES

function localeWeek (mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
    dow : 0, // Sunday is the first day of the week.
    doy : 6  // The week that contains Jan 1st is the first week of the year.
};

function localeFirstDayOfWeek () {
    return this._week.dow;
}

function localeFirstDayOfYear () {
    return this._week.doy;
}

// MOMENTS

function getSetWeek (input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek (input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}

// FORMATTING

addFormatToken('d', 0, 'do', 'day');

addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
});

addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
});

addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
});

addFormatToken('e', 0, 0, 'weekday');
addFormatToken('E', 0, 0, 'isoWeekday');

// ALIASES

addUnitAlias('day', 'd');
addUnitAlias('weekday', 'e');
addUnitAlias('isoWeekday', 'E');

// PRIORITY
addUnitPriority('day', 11);
addUnitPriority('weekday', 11);
addUnitPriority('isoWeekday', 11);

// PARSING

addRegexToken('d',    match1to2);
addRegexToken('e',    match1to2);
addRegexToken('E',    match1to2);
addRegexToken('dd',   function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',   function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',   function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
});

addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
        week.d = weekday;
    } else {
        getParsingFlags(config).invalidWeekday = input;
    }
});

addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
});

// HELPERS

function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
        return input;
    }

    if (!isNaN(input)) {
        return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
        return input;
    }

    return null;
}

function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
        return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
}

// LOCALES

var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays (m, format) {
    if (!m) {
        return isArray(this._weekdays) ? this._weekdays :
            this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] :
        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
}

var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort (m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}

var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin (m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}

function handleStrictParse$1(weekdayName, format, strict) {
    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._minWeekdaysParse = [];

        for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'dddd') {
            ii = indexOf$1.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'dddd') {
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeWeekdaysParse (weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
        return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._minWeekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already

        mom = createUTC([2000, 1]).day(i);
        if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
        }
        if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
        }
    }
}

// MOMENTS

function getSetDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
    } else {
        return day;
    }
}

function getSetLocaleDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
}

function getSetISODayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
        var weekday = parseIsoWeekday(input, this.localeData());
        return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
        return this.day() || 7;
    }
}

var defaultWeekdaysRegex = matchWord;
function weekdaysRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysStrictRegex;
        } else {
            return this._weekdaysRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
        }
        return this._weekdaysStrictRegex && isStrict ?
            this._weekdaysStrictRegex : this._weekdaysRegex;
    }
}

var defaultWeekdaysShortRegex = matchWord;
function weekdaysShortRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysShortStrictRegex;
        } else {
            return this._weekdaysShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
        }
        return this._weekdaysShortStrictRegex && isStrict ?
            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
}

var defaultWeekdaysMinRegex = matchWord;
function weekdaysMinRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysMinStrictRegex;
        } else {
            return this._weekdaysMinRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
        }
        return this._weekdaysMinStrictRegex && isStrict ?
            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
}


function computeWeekdaysParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom, minp, shortp, longp;
    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, 1]).day(i);
        minp = this.weekdaysMin(mom, '');
        shortp = this.weekdaysShort(mom, '');
        longp = this.weekdays(mom, '');
        minPieces.push(minp);
        shortPieces.push(shortp);
        longPieces.push(longp);
        mixedPieces.push(minp);
        mixedPieces.push(shortp);
        mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
}

// FORMATTING

function hFormat() {
    return this.hours() % 12 || 12;
}

function kFormat() {
    return this.hours() || 24;
}

addFormatToken('H', ['HH', 2], 0, 'hour');
addFormatToken('h', ['hh', 2], 0, hFormat);
addFormatToken('k', ['kk', 2], 0, kFormat);

addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});

addFormatToken('hmmss', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
});

addFormatToken('Hmmss', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

function meridiem (token, lowercase) {
    addFormatToken(token, 0, 0, function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
}

meridiem('a', true);
meridiem('A', false);

// ALIASES

addUnitAlias('hour', 'h');

// PRIORITY
addUnitPriority('hour', 13);

// PARSING

function matchMeridiem (isStrict, locale) {
    return locale._meridiemParse;
}

addRegexToken('a',  matchMeridiem);
addRegexToken('A',  matchMeridiem);
addRegexToken('H',  match1to2);
addRegexToken('h',  match1to2);
addRegexToken('k',  match1to2);
addRegexToken('HH', match1to2, match2);
addRegexToken('hh', match1to2, match2);
addRegexToken('kk', match1to2, match2);

addRegexToken('hmm', match3to4);
addRegexToken('hmmss', match5to6);
addRegexToken('Hmm', match3to4);
addRegexToken('Hmmss', match5to6);

addParseToken(['H', 'HH'], HOUR);
addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
});
addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
});
addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
});
addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
});

// LOCALES

function localeIsPM (input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return ((input + '').toLowerCase().charAt(0) === 'p');
}

var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
function localeMeridiem (hours, minutes, isLower) {
    if (hours > 11) {
        return isLower ? 'pm' : 'PM';
    } else {
        return isLower ? 'am' : 'AM';
    }
}


// MOMENTS

// Setting the hour should keep the time, because the user explicitly
// specified which hour he wants. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
var getSetHour = makeGetSet('Hours', true);

// months
// week
// weekdays
// meridiem
var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse
};

// internal storage for locale config files
var locales = {};
var localeFamilies = {};
var globalLocale;

function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
}

// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names) {
    var i = 0, j, next, locale, split;

    while (i < names.length) {
        split = normalizeLocale(names[i]).split('-');
        j = split.length;
        next = normalizeLocale(names[i + 1]);
        next = next ? next.split('-') : null;
        while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));
            if (locale) {
                return locale;
            }
            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                //the next array item is better than a shallower substring of this one
                break;
            }
            j--;
        }
        i++;
    }
    return null;
}

function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && (typeof module !== 'undefined') &&
            module && module.exports) {
        try {
            oldLocale = globalLocale._abbr;
            !(function webpackMissingModule() { var e = new Error("Cannot find module \"./locale\""); e.code = 'MODULE_NOT_FOUND'; throw e; }());
            // because defineLocale currently also sets the global locale, we
            // want to undo that for lazy loaded locales
            getSetGlobalLocale(oldLocale);
        } catch (e) { }
    }
    return locales[name];
}

// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale (key, values) {
    var data;
    if (key) {
        if (isUndefined(values)) {
            data = getLocale(key);
        }
        else {
            data = defineLocale(key, values);
        }

        if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
        }
    }

    return globalLocale._abbr;
}

function defineLocale (name, config) {
    if (config !== null) {
        var parentConfig = baseConfig;
        config.abbr = name;
        if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
        } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
            } else {
                if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                });
                return null;
            }
        }
        locales[name] = new Locale(mergeConfigs(parentConfig, config));

        if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
                defineLocale(x.name, x.config);
            });
        }

        // backwards compat for now: also set the locale
        // make sure we set the locale AFTER all child locales have been
        // created, so we won't end up with the child locale set.
        getSetGlobalLocale(name);


        return locales[name];
    } else {
        // useful for testing
        delete locales[name];
        return null;
    }
}

function updateLocale(name, config) {
    if (config != null) {
        var locale, parentConfig = baseConfig;
        // MERGE
        if (locales[name] != null) {
            parentConfig = locales[name]._config;
        }
        config = mergeConfigs(parentConfig, config);
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;

        // backwards compat for now: also set the locale
        getSetGlobalLocale(name);
    } else {
        // pass null for config to unupdate, useful for tests
        if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
                locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
                delete locales[name];
            }
        }
    }
    return locales[name];
}

// returns locale data
function getLocale (key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
        key = key._locale._abbr;
    }

    if (!key) {
        return globalLocale;
    }

    if (!isArray(key)) {
        //short-circuit everything else
        locale = loadLocale(key);
        if (locale) {
            return locale;
        }
        key = [key];
    }

    return chooseLocale(key);
}

function listLocales() {
    return keys$1(locales);
}

function checkOverflow (m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
        overflow =
            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
            -1;

        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
        }
        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
        }
        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
        }

        getParsingFlags(m).overflow = overflow;
    }

    return m;
}

// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

var isoDates = [
    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
    ['YYYY-DDD', /\d{4}-\d{3}/],
    ['YYYY-MM', /\d{4}-\d\d/, false],
    ['YYYYYYMMDD', /[+-]\d{10}/],
    ['YYYYMMDD', /\d{8}/],
    // YYYYMM is NOT allowed by the standard
    ['GGGG[W]WWE', /\d{4}W\d{3}/],
    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
    ['YYYYDDD', /\d{7}/]
];

// iso time formats and regexes
var isoTimes = [
    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
    ['HH:mm', /\d\d:\d\d/],
    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
    ['HHmmss', /\d\d\d\d\d\d/],
    ['HHmm', /\d\d\d\d/],
    ['HH', /\d\d/]
];

var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

// date from iso format
function configFromISO(config) {
    var i, l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime, dateFormat, timeFormat, tzFormat;

    if (match) {
        getParsingFlags(config).iso = true;

        for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
            }
        }
        if (dateFormat == null) {
            config._isValid = false;
            return;
        }
        if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (timeFormat == null) {
                config._isValid = false;
                return;
            }
        }
        if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
        }
        if (match[4]) {
            if (tzRegex.exec(match[4])) {
                tzFormat = 'Z';
            } else {
                config._isValid = false;
                return;
            }
        }
        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
        configFromStringAndFormat(config);
    } else {
        config._isValid = false;
    }
}

// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
var basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;

// date and time from ref 2822 format
function configFromRFC2822(config) {
    var string, match, dayFormat,
        dateFormat, timeFormat, tzFormat;
    var timezones = {
        ' GMT': ' +0000',
        ' EDT': ' -0400',
        ' EST': ' -0500',
        ' CDT': ' -0500',
        ' CST': ' -0600',
        ' MDT': ' -0600',
        ' MST': ' -0700',
        ' PDT': ' -0700',
        ' PST': ' -0800'
    };
    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';
    var timezone, timezoneIndex;

    string = config._i
        .replace(/\([^\)]*\)|[\n\t]/g, ' ') // Remove comments and folding whitespace
        .replace(/(\s\s+)/g, ' ') // Replace multiple-spaces with a single space
        .replace(/^\s|\s$/g, ''); // Remove leading and trailing spaces
    match = basicRfcRegex.exec(string);

    if (match) {
        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';
        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');
        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');

        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
        if (match[1]) { // day of week given
            var momentDate = new Date(match[2]);
            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];

            if (match[1].substr(0,3) !== momentDay) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return;
            }
        }

        switch (match[5].length) {
            case 2: // military
                if (timezoneIndex === 0) {
                    timezone = ' +0000';
                } else {
                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;
                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +
                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';
                }
                break;
            case 4: // Zone
                timezone = timezones[match[5]];
                break;
            default: // UT or +/-9999
                timezone = timezones[' GMT'];
        }
        match[5] = timezone;
        config._i = match.splice(1).join('');
        tzFormat = ' ZZ';
        config._f = dayFormat + dateFormat + timeFormat + tzFormat;
        configFromStringAndFormat(config);
        getParsingFlags(config).rfc2822 = true;
    } else {
        config._isValid = false;
    }
}

// date from iso format or fallback
function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
        config._d = new Date(+matched[1]);
        return;
    }

    configFromISO(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    // Final attempt, use Input Fallback
    hooks.createFromInputFallback(config);
}

hooks.createFromInputFallback = deprecate(
    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
    'discouraged and will be removed in an upcoming major release. Please refer to ' +
    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
    function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    }
);

// Pick the first defined of two or three arguments.
function defaults(a, b, c) {
    if (a != null) {
        return a;
    }
    if (b != null) {
        return b;
    }
    return c;
}

function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}

// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray (config) {
    var i, date, input = [], currentDate, yearToUse;

    if (config._d) {
        return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
        dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
        }

        date = createUTCDate(yearToUse, 0, config._dayOfYear);
        config._a[MONTH] = date.getUTCMonth();
        config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
        config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0) {
        config._nextDay = true;
        config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
        config._a[HOUR] = 24;
    }
}

function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
        dow = 1;
        doy = 4;

        // TODO: We need to take the current isoWeekYear, but that depends on
        // how we interpret now (local, utc, fixed offset). So create
        // a now version of current config (take local/utc/offset flags, and
        // create now).
        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
        week = defaults(w.W, 1);
        weekday = defaults(w.E, 1);
        if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
        }
    } else {
        dow = config._locale._week.dow;
        doy = config._locale._week.doy;

        var curWeek = weekOfYear(createLocal(), dow, doy);

        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

        // Default to current week.
        week = defaults(w.w, curWeek.week);

        if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
            }
        } else if (w.e != null) {
            // local weekday -- counting starts from begining of week
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
            }
        } else {
            // default to begining of week
            weekday = dow;
        }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
        getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
        getParsingFlags(config)._overflowWeekday = true;
    } else {
        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }
}

// constant that refers to the ISO standard
hooks.ISO_8601 = function () {};

// constant that refers to the RFC 2822 form
hooks.RFC_2822 = function () {};

// date from string and format string
function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
        configFromISO(config);
        return;
    }
    if (config._f === hooks.RFC_2822) {
        configFromRFC2822(config);
        return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
        i, parsedInput, tokens, token, skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
        token = tokens[i];
        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
        // console.log('token', token, 'parsedInput', parsedInput,
        //         'regex', getParseRegexForToken(token, config));
        if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
        }
        // don't parse if it's not a known token
        if (formatTokenFunctions[token]) {
            if (parsedInput) {
                getParsingFlags(config).empty = false;
            }
            else {
                getParsingFlags(config).unusedTokens.push(token);
            }
            addTimeToArrayFromToken(token, parsedInput, config);
        }
        else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
        }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
        getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (config._a[HOUR] <= 12 &&
        getParsingFlags(config).bigHour === true &&
        config._a[HOUR] > 0) {
        getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
}


function meridiemFixWrap (locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
        // nothing to do
        return hour;
    }
    if (locale.meridiemHour != null) {
        return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
        // Fallback
        isPm = locale.isPM(meridiem);
        if (isPm && hour < 12) {
            hour += 12;
        }
        if (!isPm && hour === 12) {
            hour = 0;
        }
        return hour;
    } else {
        // this is not supposed to happen
        return hour;
    }
}

// date from string and array of format strings
function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,

        scoreToBeat,
        i,
        currentScore;

    if (config._f.length === 0) {
        getParsingFlags(config).invalidFormat = true;
        config._d = new Date(NaN);
        return;
    }

    for (i = 0; i < config._f.length; i++) {
        currentScore = 0;
        tempConfig = copyConfig({}, config);
        if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
        }
        tempConfig._f = config._f[i];
        configFromStringAndFormat(tempConfig);

        if (!isValid(tempConfig)) {
            continue;
        }

        // if there is any input that was not parsed add a penalty for that format
        currentScore += getParsingFlags(tempConfig).charsLeftOver;

        //or tokens
        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

        getParsingFlags(tempConfig).score = currentScore;

        if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
        }
    }

    extend(config, bestMoment || tempConfig);
}

function configFromObject(config) {
    if (config._d) {
        return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10);
    });

    configFromArray(config);
}

function createFromConfig (config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
        // Adding is smart enough around DST
        res.add(1, 'd');
        res._nextDay = undefined;
    }

    return res;
}

function prepareConfig (config) {
    var input = config._i,
        format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || (format === undefined && input === '')) {
        return createInvalid({nullInput: true});
    }

    if (typeof input === 'string') {
        config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
        return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
        config._d = input;
    } else if (isArray(format)) {
        configFromStringAndArray(config);
    } else if (format) {
        configFromStringAndFormat(config);
    }  else {
        configFromInput(config);
    }

    if (!isValid(config)) {
        config._d = null;
    }

    return config;
}

function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
        config._d = new Date(hooks.now());
    } else if (isDate(input)) {
        config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
        configFromString(config);
    } else if (isArray(input)) {
        config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
        });
        configFromArray(config);
    } else if (isObject(input)) {
        configFromObject(config);
    } else if (isNumber(input)) {
        // from milliseconds
        config._d = new Date(input);
    } else {
        hooks.createFromInputFallback(config);
    }
}

function createLocalOrUTC (input, format, locale, strict, isUTC) {
    var c = {};

    if (locale === true || locale === false) {
        strict = locale;
        locale = undefined;
    }

    if ((isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)) {
        input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
}

function createLocal (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
}

var prototypeMin = deprecate(
    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

var prototypeMax = deprecate(
    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
        moments = moments[0];
    }
    if (!moments.length) {
        return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
        if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
        }
    }
    return res;
}

// TODO: Use [].sort instead?
function min () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
}

function max () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
}

var now = function () {
    return Date.now ? Date.now() : +(new Date());
};

var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

function isDurationValid(m) {
    for (var key in m) {
        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
        }
    }

    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
        if (m[ordering[i]]) {
            if (unitHasDecimal) {
                return false; // only allow non-integers for smallest unit
            }
            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                unitHasDecimal = true;
            }
        }
    }

    return true;
}

function isValid$1() {
    return this._isValid;
}

function createInvalid$1() {
    return createDuration(NaN);
}

function Duration (duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
        seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
        weeks * 7;
    // It is impossible translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
        quarters * 3 +
        years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
}

function isDuration (obj) {
    return obj instanceof Duration;
}

function absRound (number) {
    if (number < 0) {
        return Math.round(-1 * number) * -1;
    } else {
        return Math.round(number);
    }
}

// FORMATTING

function offset (token, separator) {
    addFormatToken(token, 0, 0, function () {
        var offset = this.utcOffset();
        var sign = '+';
        if (offset < 0) {
            offset = -offset;
            sign = '-';
        }
        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
}

offset('Z', ':');
offset('ZZ', '');

// PARSING

addRegexToken('Z',  matchShortOffset);
addRegexToken('ZZ', matchShortOffset);
addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
});

// HELPERS

// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset = /([\+\-]|\d\d)/gi;

function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);

    if (matches === null) {
        return null;
    }

    var chunk   = matches[matches.length - 1] || [];
    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ?
      0 :
      parts[0] === '+' ? minutes : -minutes;
}

// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
        res = model.clone();
        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
        // Use low-level api, because this fn is low-level api.
        res._d.setTime(res._d.valueOf() + diff);
        hooks.updateOffset(res, false);
        return res;
    } else {
        return createLocal(input).local();
    }
}

function getDateOffset (m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
}

// HOOKS

// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset = function () {};

// MOMENTS

// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset (input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    if (input != null) {
        if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
                return this;
            }
        } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
            this.add(localAdjust, 'm');
        }
        if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
            }
        }
        return this;
    } else {
        return this._isUTC ? offset : getDateOffset(this);
    }
}

function getSetZone (input, keepLocalTime) {
    if (input != null) {
        if (typeof input !== 'string') {
            input = -input;
        }

        this.utcOffset(input, keepLocalTime);

        return this;
    } else {
        return -this.utcOffset();
    }
}

function setOffsetToUTC (keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
}

function setOffsetToLocal (keepLocalTime) {
    if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;

        if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
        }
    }
    return this;
}

function setOffsetToParsedOffset () {
    if (this._tzm != null) {
        this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
        var tZone = offsetFromString(matchOffset, this._i);
        if (tZone != null) {
            this.utcOffset(tZone);
        }
        else {
            this.utcOffset(0, true);
        }
    }
    return this;
}

function hasAlignedHourOffset (input) {
    if (!this.isValid()) {
        return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
}

function isDaylightSavingTime () {
    return (
        this.utcOffset() > this.clone().month(0).utcOffset() ||
        this.utcOffset() > this.clone().month(5).utcOffset()
    );
}

function isDaylightSavingTimeShifted () {
    if (!isUndefined(this._isDSTShifted)) {
        return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
        this._isDSTShifted = this.isValid() &&
            compareArrays(c._a, other.toArray()) > 0;
    } else {
        this._isDSTShifted = false;
    }

    return this._isDSTShifted;
}

function isLocal () {
    return this.isValid() ? !this._isUTC : false;
}

function isUtcOffset () {
    return this.isValid() ? this._isUTC : false;
}

function isUtc () {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
}

// ASP.NET json date format regex
var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

function createDuration (input, key) {
    var duration = input,
        // matching against regexp is expensive, do it on demand
        match = null,
        sign,
        ret,
        diffRes;

    if (isDuration(input)) {
        duration = {
            ms : input._milliseconds,
            d  : input._days,
            M  : input._months
        };
    } else if (isNumber(input)) {
        duration = {};
        if (key) {
            duration[key] = input;
        } else {
            duration.milliseconds = input;
        }
    } else if (!!(match = aspNetRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y  : 0,
            d  : toInt(match[DATE])                         * sign,
            h  : toInt(match[HOUR])                         * sign,
            m  : toInt(match[MINUTE])                       * sign,
            s  : toInt(match[SECOND])                       * sign,
            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
        };
    } else if (!!(match = isoRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y : parseIso(match[2], sign),
            M : parseIso(match[3], sign),
            w : parseIso(match[4], sign),
            d : parseIso(match[5], sign),
            h : parseIso(match[6], sign),
            m : parseIso(match[7], sign),
            s : parseIso(match[8], sign)
        };
    } else if (duration == null) {// checks for null or undefined
        duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

        duration = {};
        duration.ms = diffRes.milliseconds;
        duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
        ret._locale = input._locale;
    }

    return ret;
}

createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;

function parseIso (inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
}

function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};

    res.months = other.month() - base.month() +
        (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
        --res.months;
    }

    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

    return res;
}

function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
        return {milliseconds: 0, months: 0};
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
        res = positiveMomentsDifference(base, other);
    } else {
        res = positiveMomentsDifference(other, base);
        res.milliseconds = -res.milliseconds;
        res.months = -res.months;
    }

    return res;
}

// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction, name) {
    return function (val, period) {
        var dur, tmp;
        //invert the arguments, but complain about it
        if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val; val = period; period = tmp;
        }

        val = typeof val === 'string' ? +val : val;
        dur = createDuration(val, period);
        addSubtract(this, dur, direction);
        return this;
    };
}

function addSubtract (mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);

    if (!mom.isValid()) {
        // No op
        return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (milliseconds) {
        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (days) {
        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (months) {
        setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
        hooks.updateOffset(mom, days || months);
    }
}

var add      = createAdder(1, 'add');
var subtract = createAdder(-1, 'subtract');

function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
            diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
            diff < 1 ? 'sameDay' :
            diff < 2 ? 'nextDay' :
            diff < 7 ? 'nextWeek' : 'sameElse';
}

function calendar$1 (time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';

    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
}

function clone () {
    return new Moment(this);
}

function isAfter (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() > localInput.valueOf();
    } else {
        return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
}

function isBefore (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() < localInput.valueOf();
    } else {
        return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
}

function isBetween (from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
}

function isSame (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() === localInput.valueOf();
    } else {
        inputMs = localInput.valueOf();
        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
}

function isSameOrAfter (input, units) {
    return this.isSame(input, units) || this.isAfter(input,units);
}

function isSameOrBefore (input, units) {
    return this.isSame(input, units) || this.isBefore(input,units);
}

function diff (input, units, asFloat) {
    var that,
        zoneDelta,
        delta, output;

    if (!this.isValid()) {
        return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
        return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    if (units === 'year' || units === 'month' || units === 'quarter') {
        output = monthDiff(this, that);
        if (units === 'quarter') {
            output = output / 3;
        } else if (units === 'year') {
            output = output / 12;
        }
    } else {
        delta = this - that;
        output = units === 'second' ? delta / 1e3 : // 1000
            units === 'minute' ? delta / 6e4 : // 1000 * 60
            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
            delta;
    }
    return asFloat ? output : absFloor(output);
}

function monthDiff (a, b) {
    // difference in months
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2, adjust;

    if (b - anchor < 0) {
        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor - anchor2);
    } else {
        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
}

hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

function toString () {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}

function toISOString() {
    if (!this.isValid()) {
        return null;
    }
    var m = this.clone().utc();
    if (m.year() < 0 || m.year() > 9999) {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
    if (isFunction(Date.prototype.toISOString)) {
        // native implementation is ~50x faster, use it when we can
        return this.toDate().toISOString();
    }
    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
}

/**
 * Return a human readable representation of a moment that can
 * also be evaluated to get a new moment which is the same
 *
 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
 */
function inspect () {
    if (!this.isValid()) {
        return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
        zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
}

function format (inputString) {
    if (!inputString) {
        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
}

function from (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function fromNow (withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
}

function to (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function toNow (withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
}

// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale (key) {
    var newLocaleData;

    if (key === undefined) {
        return this._locale._abbr;
    } else {
        newLocaleData = getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}

var lang = deprecate(
    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
    function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    }
);

function localeData () {
    return this._locale;
}

function startOf (units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
        case 'date':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
    }

    // weeks are a special case
    if (units === 'week') {
        this.weekday(0);
    }
    if (units === 'isoWeek') {
        this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
}

function endOf (units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
        return this;
    }

    // 'date' is an alias for 'day', so it should be considered as such.
    if (units === 'date') {
        units = 'day';
    }

    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
}

function valueOf () {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
}

function unix () {
    return Math.floor(this.valueOf() / 1000);
}

function toDate () {
    return new Date(this.valueOf());
}

function toArray () {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
}

function toObject () {
    var m = this;
    return {
        years: m.year(),
        months: m.month(),
        date: m.date(),
        hours: m.hours(),
        minutes: m.minutes(),
        seconds: m.seconds(),
        milliseconds: m.milliseconds()
    };
}

function toJSON () {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
}

function isValid$2 () {
    return isValid(this);
}

function parsingFlags () {
    return extend({}, getParsingFlags(this));
}

function invalidAt () {
    return getParsingFlags(this).overflow;
}

function creationData() {
    return {
        input: this._i,
        format: this._f,
        locale: this._locale,
        isUTC: this._isUTC,
        strict: this._strict
    };
}

// FORMATTING

addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
});

addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
});

function addWeekYearFormatToken (token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
}

addWeekYearFormatToken('gggg',     'weekYear');
addWeekYearFormatToken('ggggg',    'weekYear');
addWeekYearFormatToken('GGGG',  'isoWeekYear');
addWeekYearFormatToken('GGGGG', 'isoWeekYear');

// ALIASES

addUnitAlias('weekYear', 'gg');
addUnitAlias('isoWeekYear', 'GG');

// PRIORITY

addUnitPriority('weekYear', 1);
addUnitPriority('isoWeekYear', 1);


// PARSING

addRegexToken('G',      matchSigned);
addRegexToken('g',      matchSigned);
addRegexToken('GG',     match1to2, match2);
addRegexToken('gg',     match1to2, match2);
addRegexToken('GGGG',   match1to4, match4);
addRegexToken('gggg',   match1to4, match4);
addRegexToken('GGGGG',  match1to6, match6);
addRegexToken('ggggg',  match1to6, match6);

addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
});

addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
});

// MOMENTS

function getSetWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy);
}

function getSetISOWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input, this.isoWeek(), this.isoWeekday(), 1, 4);
}

function getISOWeeksInYear () {
    return weeksInYear(this.year(), 1, 4);
}

function getWeeksInYear () {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}

function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
        return weekOfYear(this, dow, doy).year;
    } else {
        weeksTarget = weeksInYear(input, dow, doy);
        if (week > weeksTarget) {
            week = weeksTarget;
        }
        return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
}

function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
}

// FORMATTING

addFormatToken('Q', 0, 'Qo', 'quarter');

// ALIASES

addUnitAlias('quarter', 'Q');

// PRIORITY

addUnitPriority('quarter', 7);

// PARSING

addRegexToken('Q', match1);
addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
});

// MOMENTS

function getSetQuarter (input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}

// FORMATTING

addFormatToken('D', ['DD', 2], 'Do', 'date');

// ALIASES

addUnitAlias('date', 'D');

// PRIOROITY
addUnitPriority('date', 9);

// PARSING

addRegexToken('D',  match1to2);
addRegexToken('DD', match1to2, match2);
addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
      locale._dayOfMonthOrdinalParseLenient;
});

addParseToken(['D', 'DD'], DATE);
addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
});

// MOMENTS

var getSetDayOfMonth = makeGetSet('Date', true);

// FORMATTING

addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

// ALIASES

addUnitAlias('dayOfYear', 'DDD');

// PRIORITY
addUnitPriority('dayOfYear', 4);

// PARSING

addRegexToken('DDD',  match1to3);
addRegexToken('DDDD', match3);
addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
});

// HELPERS

// MOMENTS

function getSetDayOfYear (input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
}

// FORMATTING

addFormatToken('m', ['mm', 2], 0, 'minute');

// ALIASES

addUnitAlias('minute', 'm');

// PRIORITY

addUnitPriority('minute', 14);

// PARSING

addRegexToken('m',  match1to2);
addRegexToken('mm', match1to2, match2);
addParseToken(['m', 'mm'], MINUTE);

// MOMENTS

var getSetMinute = makeGetSet('Minutes', false);

// FORMATTING

addFormatToken('s', ['ss', 2], 0, 'second');

// ALIASES

addUnitAlias('second', 's');

// PRIORITY

addUnitPriority('second', 15);

// PARSING

addRegexToken('s',  match1to2);
addRegexToken('ss', match1to2, match2);
addParseToken(['s', 'ss'], SECOND);

// MOMENTS

var getSetSecond = makeGetSet('Seconds', false);

// FORMATTING

addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
});

addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
});

addFormatToken(0, ['SSS', 3], 0, 'millisecond');
addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
});
addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
});
addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
});
addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
});
addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
});
addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
});


// ALIASES

addUnitAlias('millisecond', 'ms');

// PRIORITY

addUnitPriority('millisecond', 16);

// PARSING

addRegexToken('S',    match1to3, match1);
addRegexToken('SS',   match1to3, match2);
addRegexToken('SSS',  match1to3, match3);

var token;
for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
}

function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
}

for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
}
// MOMENTS

var getSetMillisecond = makeGetSet('Milliseconds', false);

// FORMATTING

addFormatToken('z',  0, 0, 'zoneAbbr');
addFormatToken('zz', 0, 0, 'zoneName');

// MOMENTS

function getZoneAbbr () {
    return this._isUTC ? 'UTC' : '';
}

function getZoneName () {
    return this._isUTC ? 'Coordinated Universal Time' : '';
}

var proto = Moment.prototype;

proto.add               = add;
proto.calendar          = calendar$1;
proto.clone             = clone;
proto.diff              = diff;
proto.endOf             = endOf;
proto.format            = format;
proto.from              = from;
proto.fromNow           = fromNow;
proto.to                = to;
proto.toNow             = toNow;
proto.get               = stringGet;
proto.invalidAt         = invalidAt;
proto.isAfter           = isAfter;
proto.isBefore          = isBefore;
proto.isBetween         = isBetween;
proto.isSame            = isSame;
proto.isSameOrAfter     = isSameOrAfter;
proto.isSameOrBefore    = isSameOrBefore;
proto.isValid           = isValid$2;
proto.lang              = lang;
proto.locale            = locale;
proto.localeData        = localeData;
proto.max               = prototypeMax;
proto.min               = prototypeMin;
proto.parsingFlags      = parsingFlags;
proto.set               = stringSet;
proto.startOf           = startOf;
proto.subtract          = subtract;
proto.toArray           = toArray;
proto.toObject          = toObject;
proto.toDate            = toDate;
proto.toISOString       = toISOString;
proto.inspect           = inspect;
proto.toJSON            = toJSON;
proto.toString          = toString;
proto.unix              = unix;
proto.valueOf           = valueOf;
proto.creationData      = creationData;

// Year
proto.year       = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear    = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month       = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week           = proto.weeks        = getSetWeek;
proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
proto.weeksInYear    = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date       = getSetDayOfMonth;
proto.day        = proto.days             = getSetDayOfWeek;
proto.weekday    = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear  = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset            = getSetOffset;
proto.utc                  = setOffsetToUTC;
proto.local                = setOffsetToLocal;
proto.parseZone            = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST                = isDaylightSavingTime;
proto.isLocal              = isLocal;
proto.isUtcOffset          = isUtcOffset;
proto.isUtc                = isUtc;
proto.isUTC                = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

function createUnix (input) {
    return createLocal(input * 1000);
}

function createInZone () {
    return createLocal.apply(null, arguments).parseZone();
}

function preParsePostFormat (string) {
    return string;
}

var proto$1 = Locale.prototype;

proto$1.calendar        = calendar;
proto$1.longDateFormat  = longDateFormat;
proto$1.invalidDate     = invalidDate;
proto$1.ordinal         = ordinal;
proto$1.preparse        = preParsePostFormat;
proto$1.postformat      = preParsePostFormat;
proto$1.relativeTime    = relativeTime;
proto$1.pastFuture      = pastFuture;
proto$1.set             = set;

// Month
proto$1.months            =        localeMonths;
proto$1.monthsShort       =        localeMonthsShort;
proto$1.monthsParse       =        localeMonthsParse;
proto$1.monthsRegex       = monthsRegex;
proto$1.monthsShortRegex  = monthsShortRegex;

// Week
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;

// Day of Week
proto$1.weekdays       =        localeWeekdays;
proto$1.weekdaysMin    =        localeWeekdaysMin;
proto$1.weekdaysShort  =        localeWeekdaysShort;
proto$1.weekdaysParse  =        localeWeekdaysParse;

proto$1.weekdaysRegex       =        weekdaysRegex;
proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

// Hours
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;

function get$1 (format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
}

function listMonthsImpl (format, index, field) {
    if (isNumber(format)) {
        index = format;
        format = undefined;
    }

    format = format || '';

    if (index != null) {
        return get$1(format, index, field, 'month');
    }

    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get$1(format, i, field, 'month');
    }
    return out;
}

// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl (localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    } else {
        format = localeSorted;
        index = format;
        localeSorted = false;

        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    }

    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;

    if (index != null) {
        return get$1(format, (index + shift) % 7, field, 'day');
    }

    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
}

function listMonths (format, index) {
    return listMonthsImpl(format, index, 'months');
}

function listMonthsShort (format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}

function listWeekdays (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}

function listWeekdaysShort (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}

function listWeekdaysMin (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}

getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (toInt(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

// Side effect imports
hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

var mathAbs = Math.abs;

function abs () {
    var data           = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days         = mathAbs(this._days);
    this._months       = mathAbs(this._months);

    data.milliseconds  = mathAbs(data.milliseconds);
    data.seconds       = mathAbs(data.seconds);
    data.minutes       = mathAbs(data.minutes);
    data.hours         = mathAbs(data.hours);
    data.months        = mathAbs(data.months);
    data.years         = mathAbs(data.years);

    return this;
}

function addSubtract$1 (duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days         += direction * other._days;
    duration._months       += direction * other._months;

    return duration._bubble();
}

// supports only 2.0-style add(1, 's') or add(duration)
function add$1 (input, value) {
    return addSubtract$1(this, input, value, 1);
}

// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1 (input, value) {
    return addSubtract$1(this, input, value, -1);
}

function absCeil (number) {
    if (number < 0) {
        return Math.floor(number);
    } else {
        return Math.ceil(number);
    }
}

function bubble () {
    var milliseconds = this._milliseconds;
    var days         = this._days;
    var months       = this._months;
    var data         = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
            (milliseconds <= 0 && days <= 0 && months <= 0))) {
        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
        days = 0;
        months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds           = absFloor(milliseconds / 1000);
    data.seconds      = seconds % 60;

    minutes           = absFloor(seconds / 60);
    data.minutes      = minutes % 60;

    hours             = absFloor(minutes / 60);
    data.hours        = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days   = days;
    data.months = months;
    data.years  = years;

    return this;
}

function daysToMonths (days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
}

function monthsToDays (months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
}

function as (units) {
    if (!this.isValid()) {
        return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
        days   = this._days   + milliseconds / 864e5;
        months = this._months + daysToMonths(days);
        return units === 'month' ? months : months / 12;
    } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(monthsToDays(this._months));
        switch (units) {
            case 'week'   : return days / 7     + milliseconds / 6048e5;
            case 'day'    : return days         + milliseconds / 864e5;
            case 'hour'   : return days * 24    + milliseconds / 36e5;
            case 'minute' : return days * 1440  + milliseconds / 6e4;
            case 'second' : return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}

// TODO: Use this.as('ms')?
function valueOf$1 () {
    if (!this.isValid()) {
        return NaN;
    }
    return (
        this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        toInt(this._months / 12) * 31536e6
    );
}

function makeAs (alias) {
    return function () {
        return this.as(alias);
    };
}

var asMilliseconds = makeAs('ms');
var asSeconds      = makeAs('s');
var asMinutes      = makeAs('m');
var asHours        = makeAs('h');
var asDays         = makeAs('d');
var asWeeks        = makeAs('w');
var asMonths       = makeAs('M');
var asYears        = makeAs('y');

function get$2 (units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
}

function makeGetter(name) {
    return function () {
        return this.isValid() ? this._data[name] : NaN;
    };
}

var milliseconds = makeGetter('milliseconds');
var seconds      = makeGetter('seconds');
var minutes      = makeGetter('minutes');
var hours        = makeGetter('hours');
var days         = makeGetter('days');
var months       = makeGetter('months');
var years        = makeGetter('years');

function weeks () {
    return absFloor(this.days() / 7);
}

var round = Math.round;
var thresholds = {
    ss: 44,         // a few seconds to seconds
    s : 45,         // seconds to minute
    m : 45,         // minutes to hour
    h : 22,         // hours to day
    d : 26,         // days to month
    M : 11          // months to year
};

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}

function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds <= thresholds.ss && ['s', seconds]  ||
            seconds < thresholds.s   && ['ss', seconds] ||
            minutes <= 1             && ['m']           ||
            minutes < thresholds.m   && ['mm', minutes] ||
            hours   <= 1             && ['h']           ||
            hours   < thresholds.h   && ['hh', hours]   ||
            days    <= 1             && ['d']           ||
            days    < thresholds.d   && ['dd', days]    ||
            months  <= 1             && ['M']           ||
            months  < thresholds.M   && ['MM', months]  ||
            years   <= 1             && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
}

// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding (roundingFunction) {
    if (roundingFunction === undefined) {
        return round;
    }
    if (typeof(roundingFunction) === 'function') {
        round = roundingFunction;
        return true;
    }
    return false;
}

// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold (threshold, limit) {
    if (thresholds[threshold] === undefined) {
        return false;
    }
    if (limit === undefined) {
        return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
        thresholds.ss = limit - 1;
    }
    return true;
}

function humanize (withSuffix) {
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);

    if (withSuffix) {
        output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
}

var abs$1 = Math.abs;

function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000;
    var days         = abs$1(this._days);
    var months       = abs$1(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes           = absFloor(seconds / 60);
    hours             = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years  = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds;
    var total = this.asSeconds();

    if (!total) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
    }

    return (total < 0 ? '-' : '') +
        'P' +
        (Y ? Y + 'Y' : '') +
        (M ? M + 'M' : '') +
        (D ? D + 'D' : '') +
        ((h || m || s) ? 'T' : '') +
        (h ? h + 'H' : '') +
        (m ? m + 'M' : '') +
        (s ? s + 'S' : '');
}

var proto$2 = Duration.prototype;

proto$2.isValid        = isValid$1;
proto$2.abs            = abs;
proto$2.add            = add$1;
proto$2.subtract       = subtract$1;
proto$2.as             = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds      = asSeconds;
proto$2.asMinutes      = asMinutes;
proto$2.asHours        = asHours;
proto$2.asDays         = asDays;
proto$2.asWeeks        = asWeeks;
proto$2.asMonths       = asMonths;
proto$2.asYears        = asYears;
proto$2.valueOf        = valueOf$1;
proto$2._bubble        = bubble;
proto$2.get            = get$2;
proto$2.milliseconds   = milliseconds;
proto$2.seconds        = seconds;
proto$2.minutes        = minutes;
proto$2.hours          = hours;
proto$2.days           = days;
proto$2.weeks          = weeks;
proto$2.months         = months;
proto$2.years          = years;
proto$2.humanize       = humanize;
proto$2.toISOString    = toISOString$1;
proto$2.toString       = toISOString$1;
proto$2.toJSON         = toISOString$1;
proto$2.locale         = locale;
proto$2.localeData     = localeData;

// Deprecations
proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
proto$2.lang = lang;

// Side effect imports

// FORMATTING

addFormatToken('X', 0, 0, 'unix');
addFormatToken('x', 0, 0, 'valueOf');

// PARSING

addRegexToken('x', matchSigned);
addRegexToken('X', matchTimestamp);
addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
});
addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
});

// Side effect imports


hooks.version = '2.18.1';

setHookCallback(createLocal);

hooks.fn                    = proto;
hooks.min                   = min;
hooks.max                   = max;
hooks.now                   = now;
hooks.utc                   = createUTC;
hooks.unix                  = createUnix;
hooks.months                = listMonths;
hooks.isDate                = isDate;
hooks.locale                = getSetGlobalLocale;
hooks.invalid               = createInvalid;
hooks.duration              = createDuration;
hooks.isMoment              = isMoment;
hooks.weekdays              = listWeekdays;
hooks.parseZone             = createInZone;
hooks.localeData            = getLocale;
hooks.isDuration            = isDuration;
hooks.monthsShort           = listMonthsShort;
hooks.weekdaysMin           = listWeekdaysMin;
hooks.defineLocale          = defineLocale;
hooks.updateLocale          = updateLocale;
hooks.locales               = listLocales;
hooks.weekdaysShort         = listWeekdaysShort;
hooks.normalizeUnits        = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat        = getCalendarFormat;
hooks.prototype             = proto;

return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(94)(module)))

/***/ }),
/* 1085 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (value) {
  if (Array.isArray(value)) value = value.join(',');

  return value.match(/-webkit-|-moz-|-ms-/) !== null;
};

module.exports = exports['default'];

/***/ }),
/* 1086 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// {K1: V1, K2: V2, ...} -> [[K1, V1], [K2, V2]]


Object.defineProperty(exports, '__esModule', {
    value: true
});

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var objectToPairs = function objectToPairs(obj) {
    return Object.keys(obj).map(function (key) {
        return [key, obj[key]];
    });
};

exports.objectToPairs = objectToPairs;
// [[K1, V1], [K2, V2]] -> {K1: V1, K2: V2, ...}
var pairsToObject = function pairsToObject(pairs) {
    var result = {};
    pairs.forEach(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2);

        var key = _ref2[0];
        var val = _ref2[1];

        result[key] = val;
    });
    return result;
};

var mapObj = function mapObj(obj, fn) {
    return pairsToObject(objectToPairs(obj).map(fn));
};

exports.mapObj = mapObj;
// Flattens an array one level
// [[A], [B, C, [D]]] -> [A, B, C, [D]]
var flatten = function flatten(list) {
    return list.reduce(function (memo, x) {
        return memo.concat(x);
    }, []);
};

exports.flatten = flatten;
var UPPERCASE_RE = /([A-Z])/g;
var MS_RE = /^ms-/;

var kebabify = function kebabify(string) {
    return string.replace(UPPERCASE_RE, '-$1').toLowerCase();
};
var kebabifyStyleName = function kebabifyStyleName(string) {
    return kebabify(string).replace(MS_RE, '-ms-');
};

exports.kebabifyStyleName = kebabifyStyleName;
var recursiveMerge = function recursiveMerge(a, b) {
    // TODO(jlfwong): Handle malformed input where a and b are not the same
    // type.

    if (typeof a !== 'object') {
        return b;
    }

    var ret = _extends({}, a);

    Object.keys(b).forEach(function (key) {
        if (ret.hasOwnProperty(key)) {
            ret[key] = recursiveMerge(a[key], b[key]);
        } else {
            ret[key] = b[key];
        }
    });

    return ret;
};

exports.recursiveMerge = recursiveMerge;
/**
 * CSS properties which accept numbers but are not in units of "px".
 * Taken from React's CSSProperty.js
 */
var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridColumn: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,

    // SVG-related properties
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
};

/**
 * Taken from React's CSSProperty.js
 *
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 * Taken from React's CSSProperty.js
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
// Taken from React's CSSProperty.js
Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
});

var stringifyValue = function stringifyValue(key, prop) {
    if (typeof prop === "number") {
        if (isUnitlessNumber[key]) {
            return "" + prop;
        } else {
            return prop + "px";
        }
    } else {
        return prop;
    }
};

exports.stringifyValue = stringifyValue;
/**
 * JS Implementation of MurmurHash2
 *
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 *
 * @param {string} str ASCII only
 * @return {string} Base 36 encoded hash result
 */
function murmurhash2_32_gc(str) {
    var l = str.length;
    var h = l;
    var i = 0;
    var k = undefined;

    while (l >= 4) {
        k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;

        k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
        k ^= k >>> 24;
        k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);

        h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;

        l -= 4;
        ++i;
    }

    switch (l) {
        case 3:
            h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
        case 2:
            h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
        case 1:
            h ^= str.charCodeAt(i) & 0xff;
            h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    }

    h ^= h >>> 13;
    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    h ^= h >>> 15;

    return (h >>> 0).toString(36);
}

// Hash a javascript object using JSON.stringify. This is very fast, about 3
// microseconds on my computer for a sample object:
// http://jsperf.com/test-hashfnv32a-hash/5
//
// Note that this uses JSON.stringify to stringify the objects so in order for
// this to produce consistent hashes browsers need to have a consistent
// ordering of objects. Ben Alpert says that Facebook depends on this, so we
// can probably depend on this too.
var hashObject = function hashObject(object) {
    return murmurhash2_32_gc(JSON.stringify(object));
};

exports.hashObject = hashObject;
var IMPORTANT_RE = /^([^:]+:.*?)( !important)?;$/;

// Given a single style rule string like "a: b;", adds !important to generate
// "a: b !important;".
var importantify = function importantify(string) {
    return string.replace(IMPORTANT_RE, function (_, base, important) {
        return base + " !important;";
    });
};
exports.importantify = importantify;

/***/ }),
/* 1087 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * EvEmitter v1.1.0
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {

"use strict";

function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  // copy over to avoid interference if .off() in listener
  listeners = listeners.slice(0);
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  for ( var i=0; i < listeners.length; i++ ) {
    var listener = listeners[i]
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
  }

  return this;
};

proto.allOff = function() {
  delete this._events;
  delete this._onceEvents;
};

return EvEmitter;

}));


/***/ }),
/* 1088 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * getSize v2.0.2
 * measure size of elements
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */
/*global define: false, module: false, console: false */

( function( window, factory ) {
  'use strict';

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return factory();
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }

})( window, function factory() {
'use strict';

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  var num = parseFloat( value );
  // not a percent like '100%', and a number
  var isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

function noop() {}

var logError = typeof console == 'undefined' ? noop :
  function( message ) {
    console.error( message );
  };

// -------------------------- measurements -------------------------- //

var measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth'
];

var measurementsLength = measurements.length;

function getZeroSize() {
  var size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0
  };
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    size[ measurement ] = 0;
  }
  return size;
}

// -------------------------- getStyle -------------------------- //

/**
 * getStyle, get style of element, check for Firefox bug
 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getStyle( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    logError( 'Style returned ' + style +
      '. Are you running this code in a hidden iframe on Firefox? ' +
      'See http://bit.ly/getsizebug1' );
  }
  return style;
}

// -------------------------- setup -------------------------- //

var isSetup = false;

var isBoxSizeOuter;

/**
 * setup
 * check isBoxSizerOuter
 * do on first getSize() rather than on page load for Firefox bug
 */
function setup() {
  // setup once
  if ( isSetup ) {
    return;
  }
  isSetup = true;

  // -------------------------- box sizing -------------------------- //

  /**
   * WebKit measures the outer-width on style.width on border-box elems
   * IE & Firefox<29 measures the inner-width
   */
  var div = document.createElement('div');
  div.style.width = '200px';
  div.style.padding = '1px 2px 3px 4px';
  div.style.borderStyle = 'solid';
  div.style.borderWidth = '1px 2px 3px 4px';
  div.style.boxSizing = 'border-box';

  var body = document.body || document.documentElement;
  body.appendChild( div );
  var style = getStyle( div );

  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;
  body.removeChild( div );

}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  setup();

  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) {
    elem = document.querySelector( elem );
  }

  // do not proceed on non-objects
  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
    return;
  }

  var style = getStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) {
    return getZeroSize();
  }

  var size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    var value = style[ measurement ];
    var num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  }

  var paddingWidth = size.paddingLeft + size.paddingRight;
  var paddingHeight = size.paddingTop + size.paddingBottom;
  var marginWidth = size.marginLeft + size.marginRight;
  var marginHeight = size.marginTop + size.marginBottom;
  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

  // overwrite width and height if we can get it from style
  var styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
  }

  var styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

});


/***/ }),
/* 1089 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(1066);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 1090 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 1091 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 1092 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(1093)('keys');
var uid = __webpack_require__(1074);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 1093 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1051);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};


/***/ }),
/* 1094 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 1095 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 1096 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(1139);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 1097 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 1098 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 1099 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(1065);
var dPs = __webpack_require__(1292);
var enumBugKeys = __webpack_require__(1094);
var IE_PROTO = __webpack_require__(1092)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(1134)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(1293).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 1100 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(1056).f;
var has = __webpack_require__(1058);
var TAG = __webpack_require__(1063)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 1101 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(1063);


/***/ }),
/* 1102 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1051);
var core = __webpack_require__(1055);
var LIBRARY = __webpack_require__(1097);
var wksExt = __webpack_require__(1101);
var defineProperty = __webpack_require__(1056).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 1103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(1309);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(1313);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(1139);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 1104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _FilterBar = __webpack_require__(1146);

var _FilterBar2 = _interopRequireDefault(_FilterBar);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _lib = __webpack_require__(3);

var _Price = __webpack_require__(1149);

var _Price2 = _interopRequireDefault(_Price);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _staticFilters = __webpack_require__(1153);

var _iconResidentialHouse = __webpack_require__(1106);

var _iconResidentialHouse2 = _interopRequireDefault(_iconResidentialHouse);

var _iconResidentialApartment = __webpack_require__(1107);

var _iconResidentialApartment2 = _interopRequireDefault(_iconResidentialApartment);

var _iconCommercialRetail = __webpack_require__(1108);

var _iconCommercialRetail2 = _interopRequireDefault(_iconCommercialRetail);

var _iconLandWooded = __webpack_require__(1109);

var _iconLandWooded2 = _interopRequireDefault(_iconLandWooded);

var _difference = __webpack_require__(1110);

var _difference2 = _interopRequireDefault(_difference);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _LocationModal = __webpack_require__(234);

var _LocationModal2 = _interopRequireDefault(_LocationModal);

var _SQFT = __webpack_require__(1155);

var _SQFT2 = _interopRequireDefault(_SQFT);

var _LotSize = __webpack_require__(1156);

var _LotSize2 = _interopRequireDefault(_LotSize);

var _GroupTransition = __webpack_require__(410);

var _GroupTransition2 = _interopRequireDefault(_GroupTransition);

var _qs = __webpack_require__(380);

var _qs2 = _interopRequireDefault(_qs);

var _urijs = __webpack_require__(230);

var _urijs2 = _interopRequireDefault(_urijs);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var convertToSearchParamObject = function convertToSearchParamObject(obj) {
  var searchObject = {};
  for (var k in obj) {
    searchObject[_lib.Lib.QUERY_PARAM_SEARCH_FILTER_PREFIX + "[" + k + "]"] = obj[k];
  }
  return searchObject;
};

function removeDefaultFilters(filters, defaults) {
  var finalObj = {};
  for (var k in filters) {
    if (!defaults[k] || !(0, _isEqual2.default)(defaults[k], filters[k])) {
      finalObj[k] = filters[k];
    }
  }
  return finalObj;
}

function displayedOnFilterBar(filters, defaults) {
  return removeDefaultFilters(filters, defaults);
}

var PropertiesModal = function (_Component) {
  _inherits(PropertiesModal, _Component);

  function PropertiesModal(props) {
    _classCallCheck(this, PropertiesModal);

    var _this = _possibleConstructorReturn(this, (PropertiesModal.__proto__ || Object.getPrototypeOf(PropertiesModal)).call(this, props));

    _this.handleBathroomSelect = function (val) {
      var filter = { "bathrooms": val };
      var filters = Object.assign({}, _this.state.filters, filter);
      _this.setState({ filters: filters });
    };

    _this.handleBedroomSelect = function (val) {
      var filter = { "bedrooms": val };
      var filters = Object.assign({}, _this.state.filters, filter);
      _this.setState({ filters: filters });
    };

    _this.handleCancel = function () {
      _this.resetFilters();
      _this.props.closeModal();
    };

    _this.handleDeleteSubPropertyTypeFilter = function (slug) {
      var filters = Object.assign({}, _this.state.filters);
      filters['property_subtype'] = filters['property_subtype'].filter(function (d) {
        return d.slug !== slug;
      });

      // remove property_subtype if none exists
      if (!filters['property_subtype'].length) {
        delete filters['property_subtype'];
      }
      _this.setState({ filters: filters });
    };

    _this.handlePriceSelect = function (start, to) {
      var filter = {
        price: {
          start: start,
          to: to
        }
      };
      var filters = Object.assign({}, _this.state.filters, filter);
      _this.setState({ filters: filters });
    };

    _this.handleSaleTypeFilterRemove = function (saleType) {
      var filters = Object.assign({}, _this.state.filters);
      filters['sale_type'] = filters['sale_type'].filter(function (d) {
        return d !== saleType;
      });
      _this.setState({ filters: filters });
    };

    _this.handleSearchTypeSelect = function (searchType) {
      var searchOptions = _Util2.default.getSearchDataFromPropertyTypeOptionsBySearchType(searchType, _this.props.propertyTypeOptions);
      var property_type = searchOptions.property_type;
      var sale_type = searchOptions.sale_type;
      var searchTypeArray = _Util2.default.createSearchTypeArrayParams(property_type, sale_type);
      var searchTypeObject = searchTypeArray.reduce(function (a, b) {
        a[b.key] = b.values[0];return a;
      }, {});
      var filters = Object.assign({}, _this.state.filters, searchTypeObject);
      _this.setState({ filters: filters });
    };

    _this.handleSingleFilterRemove = function (filterKey, defaults) {
      var filters = Object.assign({}, _this.state.filters);
      if (defaults[filterKey]) {
        filters[filterKey] = defaults[filterKey];
      } else {
        delete filters[filterKey];
      }
      _this.setState({ filters: filters });
    };

    _this.handleSQFTSelect = function (start, to) {
      var filter = {
        sqft: {
          start: start,
          to: to
        }
      };
      var filters = Object.assign({}, _this.state.filters, filter);
      _this.setState({ filters: filters });
    };

    _this.handleLocationModalClose = function () {
      if (!_this.state.filters.term.length) {
        // if all terms were removed, undo the last change
        var filters = Object.assign({}, _this.state.filters);
        filters.term.push(_this.lastTermFilter);
        _this.setState({
          filters: filters
        });
      }

      _this.props.closeLocationModal();
    };

    _this.handleAcresSelect = function (start, to) {
      var filter = {
        acres: {
          start: start,
          to: to
        }
      };
      var filters = Object.assign({}, _this.state.filters, filter);
      _this.setState({ filters: filters });
    };

    _this.handlePropertySubTypeToggle = function (filter) {
      var filters = Object.assign({}, _this.state.filters);
      // we check whether property_type exists for cases where all property types have been removed by the user
      var propertySubTypeArray = filters.property_subtype ? filters.property_subtype.slice(0) : [];
      if (propertySubTypeArray.map(function (d) {
        return d.slug;
      }).indexOf(filter.slug) >= 0) {
        propertySubTypeArray = propertySubTypeArray.filter(function (d) {
          return d.slug !== filter.slug;
        });
      } else {
        propertySubTypeArray.push(filter);
      }

      // if nothing is left in the filter, delete it
      if (propertySubTypeArray.length) {
        filters.property_subtype = propertySubTypeArray;
      } else {
        delete filters.property_subtype;
      }

      _this.setState({ filters: filters });
    };

    _this.handleSaleTypeToggle = function (filter) {
      var filters = Object.assign({}, _this.state.filters);
      var saleArray = void 0;
      if (!filters.sale_type) {
        saleArray = [];
      } else {
        saleArray = filters.sale_type.slice(0);
      }
      if (saleArray.indexOf(filter.value) >= 0) {
        saleArray = (0, _difference2.default)(saleArray, [filter.value]);
      } else {
        saleArray.push(filter.value);
      }
      filters.sale_type = saleArray;
      _this.setState({ filters: filters });
    };

    _this.handleTermFilterRemove = function (filter) {
      var filters = Object.assign({}, _this.state.filters);
      var termFilter = filters.term.slice(0);
      termFilter = termFilter.filter(function (t) {
        return !(0, _isEqual2.default)(t, filter);
      });
      filters.term = termFilter;
      _this.setState({
        filters: filters
      });
    };

    _this.handleLastTermRemove = function (filter) {
      _this.handleTermFilterRemove(filter);
      // this is for when the last filter is deleted and the location modal, which would be opened as a result, is also closed without choosing another term filter
      _this.lastTermFilter = filter;
      _this.props.openLocationModal();
    };

    _this.handleTermSelection = function (filter) {
      var filters = Object.assign({}, _this.state.filters);
      // if the term filter is new and it's not one that we already had, then set it
      if (!filters.term.length || filters.term.filter(function (t) {
        return !(0, _isEqual2.default)(t, filter);
      }).length) {
        var termFilter = filters.term.slice(0);
        termFilter.push(filter);
        filters.term = termFilter;
        _this.setState({
          filters: filters
        });
      }
      _this.props.closeLocationModal();
    };

    _this.resetFilters = function () {
      _this.setState({
        filters: Object.assign({}, _this.state.initialFilters)
      });
    };

    _this.saveFilters = function () {
      var filters = Object.assign({}, _this.state.filters);
      if (filters['property_subtype']) {
        filters['property_subtype'] = filters['property_subtype'].map(function (d) {
          return d.slug;
        });
      }
      filters = removeDefaultFilters(filters, _staticFilters.defaultPropertyFilters);
      var reddoorTermObjects = _Util2.default.reddoorConvertToURLTerms(filters.term.slice(0));
      delete filters.term;
      delete filters['selected_property'];
      delete filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX];
      delete filters[_lib.Lib.TOP_LEFT_URL_PREFIX];
      delete filters['search_type'];
      filters = _Util2.default.customFormatToSearchObject(filters);
      var collection = _Util2.default.searchObjectToCollection(filters);
      collection = collection.concat(reddoorTermObjects);
      var searchURL = _Util2.default.createSearchURL('/search', collection.map(function (a) {
        return Object.assign({}, a);
      }));
      _this.props.closeModal();
      _this.props.historyPush(searchURL);
    };

    _this.toggleViewAllFilters = function () {
      _this.setState({
        showAllFilters: !_this.state.showAllFilters
      });
    };

    _this.state = {
      filters: {},
      showAllFilters: false
    };
    return _this;
  }

  _createClass(PropertiesModal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var searchFilters = this.props.searchFilters;

      var showAllFilters = this.displayAllFilters(searchFilters);
      this.setInitialFilters(searchFilters, _staticFilters.defaultPropertyFilters);
      this.setState({
        showAllFilters: showAllFilters
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.open) {
        if (!(0, _isEqual2.default)(prevState.filters, this.state.filters)) {
          var filters = removeDefaultFilters(Object.assign({}, this.state.filters), _staticFilters.defaultPropertyFilters);
          this.props.doSearch(filters);
          this.props.getAvailablePropertySubTypes(Object.assign({}, filters));
        }
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.open !== this.props.open) {
        if (nextProps.open) {
          this.props.turnOnPropertiesModalModeInLocationModal();
          this.setInitialFilters(this.props.searchFilters, _staticFilters.defaultPropertyFilters);
          var filters = removeDefaultFilters(Object.assign({}, this.state.filters), _staticFilters.defaultPropertyFilters);

          // @TODO Don't send requests in case if just was changed property_type and filters contain old property_type value
          // Maybe issue should be fixed at another place
          // fq.jony@UD
          if ((0, _get2.default)(this.props, 'searchFilters.property_type') === (0, _get2.default)(filters, 'property_type')) {
            this.props.doSearch(Object.assign({}, filters));
            this.props.getAvailablePropertySubTypes(Object.assign({}, filters));
          }

          var showAllFilters = this.displayAllFilters(this.props.searchFilters);
          this.setState({
            showAllFilters: showAllFilters
          });
        } else {
          this.props.turnOffPropertiesModalModeInLocationModal();
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.turnOffPropertiesModalModeInLocationModal();
    }
  }, {
    key: 'displayAllFilters',
    value: function displayAllFilters(filters) {
      return !!filters['bathrooms'] || !!filters['sqft'] || !!filters['acres'] || !!filters['property_subtype'];
    }
  }, {
    key: 'setInitialFilters',
    value: function setInitialFilters(searchFilters, defaultFiltervalues) {
      // if a filter is not set, use it's default.
      var filters = Object.assign({}, defaultFiltervalues, searchFilters);
      this.setState({
        initialFilters: filters,
        filters: filters
      });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      var shouldUpdate = !(0, _isEqual2.default)(nextProps.availableSubTypes, this.props.availableSubTypes) || !(0, _isEqual2.default)(nextProps.errorMessage, this.props.errorMessage) || !(0, _isEqual2.default)(nextProps.open, this.props.open) || !(0, _isEqual2.default)(nextProps.resultCount, this.props.resultCount) || !(0, _isEqual2.default)(nextProps.resultCountButtonLoading, this.props.resultCountButtonLoading) || !(0, _isEqual2.default)(nextProps.propertySubTypes, this.props.propertySubTypes) || !(0, _isEqual2.default)(nextProps.propertyTypeOptions, this.props.propertyTypeOptions) || !(0, _isEqual2.default)(nextProps.searchFilters, this.props.searchFilters) || !(0, _isEqual2.default)(nextState.filters, this.state.filters) || !(0, _isEqual2.default)(nextState.showAllFilters, this.state.showAllFilters);
      return shouldUpdate;
    }
  }, {
    key: 'showFilterBasedOnSearchType',
    value: function showFilterBasedOnSearchType(searchType, filter) {
      var filtersSearchTypeMap = {
        'Buy': ['bedrooms', 'bathrooms', 'location', 'acres', 'price', 'property_subtype', 'sqft'],
        'Commercial': ['location', 'acres', 'price', 'property_subtype', 'sale_type', 'sqft'],
        'Rent': ['bathrooms', 'bedrooms', 'location', 'acres', 'price', 'property_subtype'],
        'Land': ['location', 'acres', 'price', 'property_subtype', 'sale_type']
      };
      if (!filtersSearchTypeMap[searchType]) {
        return false;
      }
      return filtersSearchTypeMap[searchType].indexOf(filter) >= 0;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          availableSubTypes = _props.availableSubTypes,
          open = _props.open,
          propertySubTypes = _props.propertySubTypes,
          propertyTypeOptions = _props.propertyTypeOptions;
      var _state = this.state,
          _state$filters = _state.filters,
          acres = _state$filters.acres,
          bedrooms = _state$filters.bedrooms,
          bathrooms = _state$filters.bathrooms,
          price = _state$filters.price,
          property_subtype = _state$filters.property_subtype,
          sale_type = _state$filters.sale_type,
          search_type = _state$filters.search_type,
          sqft = _state$filters.sqft,
          term = _state$filters.term,
          showAllFilters = _state.showAllFilters;

      var bathroomElements = _staticFilters.bathroom.map(function (d) {
        return {
          name: d.name,
          selected: d.value === bathrooms,
          value: d.value
        };
      });

      var bedroomElements = _staticFilters.bedroom.map(function (d) {
        return {
          name: d.name,
          selected: d.value === bedrooms,
          value: d.value
        };
      });
      var saleType = sale_type;
      var saleTypeOptions = [];
      if (['Commercial', 'Land'].indexOf(search_type) >= 0) {
        saleTypeOptions = [{
          selected: saleType && saleType.indexOf('sale') >= 0,
          title: 'Sale',
          value: 'sale'
        }, {
          selected: saleType && saleType.indexOf('rent') >= 0,
          title: 'Rent',
          value: 'rent'
        }];
      }

      var termFilters = term;
      var termFilterElement = void 0;
      if (termFilters && termFilters.length) {
        if (termFilters.length === 1) {
          termFilterElement = _react2.default.createElement(
            'span',
            { key: JSON.stringify(termFilters[0]), className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary selected' },
            _react2.default.createElement('i', { className: 'fa fa-times', onClick: function onClick() {
                return _this2.handleLastTermRemove(termFilters[0]);
              } }),
            _react2.default.createElement(
              'span',
              null,
              termFilters[0].text || 'loading...'
            )
          );
        } else {
          termFilterElement = termFilters.map(function (t, i) {
            return _react2.default.createElement(
              'span',
              { key: JSON.stringify(t), className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary selected' },
              _react2.default.createElement('i', { className: 'fa fa-times', onClick: function onClick() {
                  return _this2.handleTermFilterRemove(t);
                } }),
              _react2.default.createElement(
                'span',
                null,
                t.text || 'loading...'
              )
            );
          });
        }
      }
      var propertySubtypeOptions = propertySubTypes.map(function (d) {
        return {
          count: !availableSubTypes ? null : availableSubTypes.filter(function (e) {
            return e.key === d.slug;
          }).length ? availableSubTypes.filter(function (e) {
            return e.key === d.slug;
          })[0].count : 0,
          disabled: !availableSubTypes ? null : availableSubTypes.map(function (e) {
            return e.key;
          }).indexOf(d.slug) < 0,
          slug: d.slug,
          title: d.title,
          selected: property_subtype && property_subtype.map(function (e) {
            return e.slug;
          }).indexOf(d.slug) >= 0
        };
      });

      // keep DOM elements of filter options, to be rendered in transition group
      var modalBody = [];
      if (this.showFilterBasedOnSearchType(search_type, 'location')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'location' },
          _react2.default.createElement(
            'div',
            { className: 'col-12 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
            _react2.default.createElement(
              'h3',
              null,
              'Location ',
              _react2.default.createElement(
                'span',
                null,
                '(City, School, Neighborhood, Zip)'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'filter-type' },
              termFilterElement,
              _react2.default.createElement(
                'a',
                { href: '#', className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary',
                  onClick: this.props.openLocationModal },
                '+ More Locations'
              )
            )
          )
        ));
      }
      if (this.showFilterBasedOnSearchType(search_type, 'bedrooms')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'bedrooms' },
          _react2.default.createElement(
            'div',
            { className: 'col-12 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
            _react2.default.createElement(
              'h3',
              null,
              'Bedrooms ',
              _react2.default.createElement(
                'span',
                null,
                '(Minimum)'
              )
            ),
            bedroomElements.map(function (d) {
              return _react2.default.createElement(
                'a',
                { key: d.value, href: '#',
                  className: 'btn btn-primary ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button ' + (d.selected ? "selected" : null),
                  onClick: function onClick() {
                    return _this2.handleBedroomSelect(d.value);
                  } },
                d.name
              );
            })
          )
        ));
      }
      if (this.showFilterBasedOnSearchType(search_type, 'price')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'price' },
          _react2.default.createElement(
            'div',
            {
              className: 'col-12 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-slider ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-price' },
            _react2.default.createElement(
              'h3',
              null,
              'Price ',
              _react2.default.createElement(
                'span',
                null,
                '(Range)'
              )
            ),
            _react2.default.createElement(
              'div',
              null,
              search_type && price.start && price.to ? _react2.default.createElement(_Price2.default, { saleType: search_type, start: price.start,
                to: price.to,
                handleOnClick: this.handlePriceSelect.bind(this) }) : null
            ),
            _react2.default.createElement('input', { id: 'priceSlider', className: _lib.Lib.THEME_CLASSES_PREFIX + 'hidden-input bs-hidden-input' })
          )
        ));
      }
      if (showAllFilters && this.showFilterBasedOnSearchType(search_type, 'bathrooms')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'bathrooms' },
          _react2.default.createElement(
            'div',
            { className: 'col-12 all-filters ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
            _react2.default.createElement(
              'h3',
              null,
              'Bathrooms ',
              _react2.default.createElement(
                'span',
                null,
                '(Minimum)'
              )
            ),
            bathroomElements.map(function (d) {
              return _react2.default.createElement(
                'a',
                { key: d.value, href: '#',
                  className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary ' + (d.selected ? "selected" : null),
                  onClick: function onClick() {
                    return _this2.handleBathroomSelect(d.value);
                  } },
                d.name
              );
            })
          )
        ));
      }
      if (showAllFilters && this.showFilterBasedOnSearchType(search_type, 'sqft')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'total-size' },
          _react2.default.createElement(
            'div',
            {
              className: 'col-12 all-filters ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-slider ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-total-size' },
            _react2.default.createElement(
              'h3',
              null,
              'Total Size ',
              _react2.default.createElement(
                'span',
                null,
                '(SQFT)'
              )
            ),
            _react2.default.createElement(
              'div',
              null,
              search_type && sqft.start && sqft.to ? _react2.default.createElement(_SQFT2.default, { saleType: search_type, start: sqft.start,
                to: sqft.to,
                handleOnClick: this.handleSQFTSelect }) : null
            ),
            _react2.default.createElement('input', { id: 'priceSlider', className: _lib.Lib.THEME_CLASSES_PREFIX + 'hidden-input bs-hidden-input' })
          )
        ));
      }
      if (showAllFilters && this.showFilterBasedOnSearchType(search_type, 'acres')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'lot-size' },
          _react2.default.createElement(
            'div',
            {
              className: 'col-12 all-filters ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-slider ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-total-size' },
            _react2.default.createElement(
              'h3',
              null,
              'Lot Size ',
              _react2.default.createElement(
                'span',
                null,
                '(Acres)'
              )
            ),
            _react2.default.createElement(
              'div',
              null,
              search_type && acres.start && acres.to ? _react2.default.createElement(_LotSize2.default, { saleType: search_type, start: acres.start,
                to: acres.to, handleOnClick: this.handleAcresSelect }) : null
            ),
            _react2.default.createElement('input', { id: 'priceSlider', className: _lib.Lib.THEME_CLASSES_PREFIX + 'hidden-input bs-hidden-input' })
          )
        ));
      }

      if (showAllFilters && this.showFilterBasedOnSearchType(search_type, 'sale_type')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'sale_type' },
          _react2.default.createElement(
            'div',
            {
              className: 'col-12 all-filters ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
            _react2.default.createElement(
              'h3',
              null,
              'Sale Type'
            ),
            _react2.default.createElement(
              'div',
              { className: 'filter-type' },
              saleTypeOptions.map(function (d) {
                var title = d.title === 'Sale' ? 'Buy' : d.title;
                return _react2.default.createElement(
                  'a',
                  {
                    key: d.value,
                    href: '#',
                    className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary ' + (d.selected ? "selected" : ""),
                    onClick: function onClick() {
                      return _this2.handleSaleTypeToggle(d);
                    } },
                  title
                );
              })
            )
          )
        ));
      }

      if (showAllFilters && this.showFilterBasedOnSearchType(search_type, 'property_subtype')) {
        modalBody.push(_react2.default.createElement(
          'div',
          { className: 'row', key: 'type' },
          _react2.default.createElement(
            'div',
            {
              className: 'col-12 all-filters ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
            _react2.default.createElement(
              'h3',
              null,
              'Property Type'
            ),
            _react2.default.createElement(
              'div',
              { className: 'filter-type' },
              propertySubtypeOptions.map(function (d) {
                return _react2.default.createElement(
                  'a',
                  {
                    key: d.slug,
                    href: '#',
                    className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section-button btn btn-primary ' + (d.selected ? "selected" : d.disabled !== null && d.disabled ? "disabled" : ""),
                    onClick: function onClick() {
                      return _this2.handlePropertySubTypeToggle(d);
                    } },
                  d.title,
                  d.count !== null && _react2.default.createElement(
                    'span',
                    null,
                    ' (',
                    d.count,
                    ')'
                  )
                );
              })
            )
          )
        ));
      }

      modalBody.push(_react2.default.createElement(
        'div',
        { className: 'row', key: 'view-more' },
        _react2.default.createElement(
          'div',
          { className: 'col-7 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'filter-section' },
          _react2.default.createElement(
            'a',
            { href: '#', className: _lib.Lib.THEME_CLASSES_PREFIX + "view-link",
              onClick: this.toggleViewAllFilters },
            showAllFilters ? '- View Less Filters' : '+ View More Filters'
          )
        )
      ));

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_LocationModal2.default, {
          terms: (0, _get2.default)(this, 'state.filters.term', []),
          onTermSelect: this.handleTermSelection,
          closeModal: this.handleLocationModalClose
        }),
        _react2.default.createElement(
          'div',
          {
            className: 'modal ' + _lib.Lib.THEME_CLASSES_PREFIX + 'search-modal ' + _lib.Lib.THEME_CLASSES_PREFIX + 'advanced-filter ' + (open ? "active" : "remove") },
          _react2.default.createElement(
            'div',
            { className: 'modal-dialog ' + _lib.Lib.THEME_CLASSES_PREFIX + 'modal-dialog m-0', role: 'document' },
            _react2.default.createElement(
              'div',
              { className: 'modal-content' },
              _react2.default.createElement(
                'div',
                { className: 'modal-header ' + _lib.Lib.THEME_CLASSES_PREFIX + 'toolbar ' + _lib.Lib.THEME_CLASSES_PREFIX + 'modal-header hidden-md-down' },
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + 'logo' },
                  _react2.default.createElement(
                    'a',
                    { href: (0, _get2.default)(bundle, 'site_url', '') },
                    _react2.default.createElement('img', { src: bundle.logos.square_logo, alt: (0, _get2.default)(bundle, 'site_name', ''),
                      className: _lib.Lib.THEME_CLASSES_PREFIX + 'logo ' + _lib.Lib.THEME_CLASSES_PREFIX + 'square-logo' })
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + 'drop-nav' },
                  _react2.default.createElement(
                    'a',
                    { href: '#' },
                    search_type
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'pl-3 pl-md-4 pr-2' },
                  _react2.default.createElement('i', { className: 'fa fa-search' })
                ),
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + 'flex-wrapper' },
                  _react2.default.createElement(_FilterBar2.default, {
                    deleteSingleLocalFilter: function deleteSingleLocalFilter(filterKey) {
                      return _this2.handleSingleFilterRemove(filterKey, _staticFilters.defaultPropertyFilters);
                    },
                    deleteLocalFilterTerm: this.handleTermFilterRemove,
                    deleteSubPropertyTypeFilter: this.handleDeleteSubPropertyTypeFilter,
                    filters: displayedOnFilterBar(this.state.filters, _staticFilters.defaultPropertyFilters),
                    deleteLastLocalFilterTerm: this.handleLastTermRemove,
                    deleteSaleTypeFilter: this.handleSaleTypeFilterRemove
                  })
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'px-4' },
                  _react2.default.createElement(
                    'a',
                    { href: '#', className: 'btn-reset', onClick: this.resetFilters },
                    'Reset'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'a',
                    {
                      href: '#',
                      className: 'btn btn-primary ' + _lib.Lib.THEME_CLASSES_PREFIX + 'button ' + _lib.Lib.THEME_CLASSES_PREFIX + 'primary-button ' + (this.props.resultCountButtonLoading || this.props.errorMessage ? 'disabled' : ''),
                      onClick: this.saveFilters },
                    this.props.resultCount ? "View " + this.props.resultCount + " Properties" : "View Properties"
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'px-3 px-md-4' },
                  _react2.default.createElement(
                    'button',
                    {
                      'aria-label': 'Close',
                      className: 'close ' + _lib.Lib.THEME_CLASSES_PREFIX + 'close-panel my-auto hidden-md-down',
                      type: 'button',
                      onClick: this.handleCancel
                    },
                    _react2.default.createElement(
                      'span',
                      { 'aria-hidden': 'true' },
                      '\xD7'
                    )
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'modal-body p-0' },
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-filter-nav hidden-lg-up' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'card col-3' },
                      _react2.default.createElement(
                        'div',
                        { className: 'card-img-top mt-4 text-center' },
                        _react2.default.createElement(_iconResidentialHouse2.default, { className: 'icon-group ' + (search_type === 'Buy' ? 'selected' : ''), onClick: function onClick() {
                            return _this2.handleSearchTypeSelect('Buy');
                          } })
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'card-block' },
                        _react2.default.createElement(
                          'h3',
                          { className: 'card-text text-center ' + _lib.Lib.THEME_CLASSES_PREFIX + 'sale-selection-text' },
                          'Buy'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'card col-3' },
                      _react2.default.createElement(
                        'div',
                        { className: 'card-img-top mt-4 text-center' },
                        _react2.default.createElement(_iconResidentialApartment2.default, { className: 'icon-group ' + (search_type === 'Rent' ? 'selected' : ''), onClick: function onClick() {
                            return _this2.handleSearchTypeSelect('Rent');
                          } })
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'card-block' },
                        _react2.default.createElement(
                          'h3',
                          { className: 'card-text text-center ' + _lib.Lib.THEME_CLASSES_PREFIX + 'sale-selection-text' },
                          'Rent'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'card col-3' },
                      _react2.default.createElement(
                        'div',
                        { className: 'card-img-top mt-4 text-center' },
                        _react2.default.createElement(_iconCommercialRetail2.default, { className: 'icon-group ' + (search_type === 'Commercial' ? 'selected' : ''), onClick: function onClick() {
                            return _this2.handleSearchTypeSelect('Commercial');
                          } })
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'card-block' },
                        _react2.default.createElement(
                          'h3',
                          { className: 'card-text text-center ' + _lib.Lib.THEME_CLASSES_PREFIX + 'sale-selection-text' },
                          'Commercial'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'card col-3' },
                      _react2.default.createElement(
                        'div',
                        { className: 'card-img-top mt-4 text-center' },
                        _react2.default.createElement(_iconLandWooded2.default, { className: 'icon-group ' + (search_type === 'Land' ? 'selected' : ''), onClick: function onClick() {
                            return _this2.handleSearchTypeSelect('Land');
                          } })
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'card-block' },
                        _react2.default.createElement(
                          'h3',
                          { className: 'card-text text-center ' + _lib.Lib.THEME_CLASSES_PREFIX + 'sale-selection-text' },
                          'Land'
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + "search-modal-box" },
                  _react2.default.createElement(
                    'div',
                    { className: 'container' },
                    open && _react2.default.createElement(
                      _GroupTransition2.default,
                      { fromFilterModal: true },
                      modalBody
                    )
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'modal-footer' },
                _react2.default.createElement(
                  'div',
                  { className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-footernav hidden-lg-up' },
                  _react2.default.createElement(
                    'div',
                    { className: 'container' },
                    _react2.default.createElement(
                      'button',
                      {
                        className: _lib.Lib.THEME_CLASSES_PREFIX + 'button-reset btn btn-reset',
                        onClick: this.resetFilters
                      },
                      'Reset'
                    ),
                    _react2.default.createElement(
                      'span',
                      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'filter-footernav-item-right nav-item-right' },
                      _react2.default.createElement(
                        'a',
                        {
                          href: '#',
                          className: 'btn-cancel',
                          onClick: this.handleCancel },
                        'Cancel'
                      ),
                      _react2.default.createElement(
                        'i',
                        null,
                        '|'
                      ),
                      _react2.default.createElement(
                        'a',
                        { href: '#', className: 'btn-apply', onClick: this.saveFilters },
                        'Apply'
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return PropertiesModal;
}(_react.Component);

PropertiesModal.propTypes = {
  availableSubTypes: _propTypes2.default.array,
  closeModal: _propTypes2.default.func.isRequired,
  closeLocationModal: _propTypes2.default.func.isRequired,
  doSearch: _propTypes2.default.func.isRequired,
  errorMessage: _propTypes2.default.string,
  getAvailablePropertySubTypes: _propTypes2.default.func.isRequired,
  historyPush: _propTypes2.default.func.isRequired,
  open: _propTypes2.default.bool.isRequired,
  openLocationModal: _propTypes2.default.func.isRequired,
  resultCount: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  resultCountButtonLoading: _propTypes2.default.bool.isRequired,
  propertySubTypes: _propTypes2.default.array.isRequired,
  propertyTypeOptions: _propTypes2.default.array.isRequired,
  searchFilters: _propTypes2.default.object.isRequired,
  turnOnPropertiesModalModeInLocationModal: _propTypes2.default.func,
  turnOffPropertiesModalModeInLocationModal: _propTypes2.default.func
};
;

exports.default = PropertiesModal;

/***/ }),
/* 1105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterTag = function (_Component) {
  _inherits(FilterTag, _Component);

  function FilterTag() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, FilterTag);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FilterTag.__proto__ || Object.getPrototypeOf(FilterTag)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
      e.stopPropagation(); // need to stop propagation so that it doesn't open filter modal

      var _this$props = _this.props,
          value = _this$props.value,
          handleRemoveFilter = _this$props.handleRemoveFilter;


      if (typeof handleRemoveFilter === 'function') {
        handleRemoveFilter(value);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(FilterTag, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'span',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag' },
        _react2.default.createElement(
          'span',
          null,
          _react2.default.createElement('i', { className: 'fa fa-times', onClick: this.handleClick })
        ),
        this.props.display
      );
    }
  }]);

  return FilterTag;
}(_react.Component);

exports.default = FilterTag;

/***/ }),
/* 1106 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);

function IconResidentialHouse (props) {
    return React.createElement("svg",props,React.createElement("g",{"id":"house"},[React.createElement("path",{"id":"house_1_","d":"M252.7,132.2L137.5,4.2C135.1,1.5,131.6,0,128,0c-3.6,0-7.1,1.5-9.5,4.2L3.3,132.2\n\t\tc-3.4,3.8-4.2,9.2-2.2,13.8c2.1,4.6,6.6,7.6,11.7,7.6h12.8v89.6c0,7.1,5.7,12.8,12.8,12.8h179.2c7.1,0,12.8-5.7,12.8-12.8v-89.6\n\t\th12.8c5.1,0,9.6-3,11.7-7.6C256.9,141.4,256.1,136,252.7,132.2z M102.4,243.2v-64h51.2v64H102.4z M217.6,140.8v102.4h-51.2v-64\n\t\tc0-7.1-5.7-12.8-12.8-12.8h-51.2c-7.1,0-12.8,5.7-12.8,12.8v64H38.4V140.8H12.8L128,12.8l115.2,128H217.6z","key":0}),React.createElement("path",{"id":"window","d":"M102.4,89.6v25.6c0,7.1,5.7,12.8,12.8,12.8h25.6c7.1,0,12.8-5.7,12.8-12.8V89.6c0-7.1-5.7-12.8-12.8-12.8\n\t\th-25.6C108.1,76.8,102.4,82.5,102.4,89.6z M140.8,115.2h-25.6V89.6h25.6V115.2z","key":1})]));
}

IconResidentialHouse.displayName = "IconResidentialHouse";

IconResidentialHouse.defaultProps = {"version":"1.1","id":"Layer_1","x":"0px","y":"0px","viewBox":"0 0 256 256","style":{"enableBackground":"new 0 0 256 256"},"xmlSpace":"preserve"};

module.exports = IconResidentialHouse;

IconResidentialHouse.default = IconResidentialHouse;


/***/ }),
/* 1107 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);

function IconResidentialApartment (props) {
    return React.createElement("svg",props,React.createElement("g",{"id":"residential_apartment"},[React.createElement("path",{"id":"window_4_","d":"M76.8,102.4H64c-7.1,0-12.8,5.7-12.8,12.8v25.6c0,7.1,5.7,12.8,12.8,12.8h12.8c7.1,0,12.8-5.7,12.8-12.8\n\t\tv-25.6C89.6,108.1,83.9,102.4,76.8,102.4z M76.8,140.8H64v-25.6h12.8V140.8z","key":0}),React.createElement("path",{"id":"window_3_","d":"M76.8,179.2H64c-7.1,0-12.8,5.7-12.8,12.8v25.6c0,7.1,5.7,12.8,12.8,12.8h12.8c7.1,0,12.8-5.7,12.8-12.8\n\t\tV192C89.6,184.9,83.9,179.2,76.8,179.2z M76.8,217.6H64V192h12.8V217.6z","key":1}),React.createElement("path",{"id":"window_2_","d":"M192,179.2h-12.8c-7.1,0-12.8,5.7-12.8,12.8v25.6c0,7.1,5.7,12.8,12.8,12.8H192c7.1,0,12.8-5.7,12.8-12.8\n\t\tV192C204.8,184.9,199.1,179.2,192,179.2z M192,217.6h-12.8V192H192V217.6z","key":2}),React.createElement("path",{"id":"window_1_","d":"M140.8,102.4h-25.6c-7.1,0-12.8,5.7-12.8,12.8v25.6c0,7.1,5.7,12.8,12.8,12.8h25.6\n\t\tc7.1,0,12.8-5.7,12.8-12.8v-25.6C153.6,108.1,147.9,102.4,140.8,102.4z M140.8,140.8h-25.6v-25.6h25.6V140.8z","key":3}),React.createElement("path",{"id":"window","d":"M166.4,140.8c0,7.1,5.7,12.8,12.8,12.8H192c7.1,0,12.8-5.7,12.8-12.8v-25.6c0-7.1-5.7-12.8-12.8-12.8h-12.8\n\t\tc-7.1,0-12.8,5.7-12.8,12.8V140.8z M179.2,115.2H192v25.6h-12.8V115.2z","key":4}),React.createElement("path",{"id":"apartment_building","d":"M255.1,72L229.5,8c-1.9-4.9-6.7-8-11.9-8H38.4c-5.2,0-9.9,3.2-11.9,8L0.9,72\n\t\tc-1.6,4-1.1,8.5,1.3,12s6.4,5.6,10.6,5.6h12.8v153.6H12.8c-3.5,0-6.4,2.9-6.4,6.4s2.9,6.4,6.4,6.4h230.4c3.5,0,6.4-2.9,6.4-6.4\n\t\ts-2.9-6.4-6.4-6.4h-12.8V89.6h12.8c4.2,0,8.2-2.1,10.6-5.6S256.7,76,255.1,72z M115.2,243.2V192h25.6v51.2H115.2z M217.6,102.4\n\t\tv140.8h-64V192c0-7.1-5.7-12.8-12.8-12.8h-25.6c-7.1,0-12.8,5.7-12.8,12.8v51.2h-64V102.4V89.6h51.2c4,0,7.8-1.9,10.2-5.1L128,46.9\n\t\tl28.2,37.5c2.4,3.2,6.2,5.1,10.2,5.1h51.2L217.6,102.4L217.6,102.4z M166.4,76.8l-28.2-37.5c-2.6-3.4-6.4-5.1-10.2-5.1\n\t\ts-7.7,1.7-10.2,5.1L89.6,76.8H12.8l25.6-64h179.2l25.6,64H166.4z","key":5})]));
}

IconResidentialApartment.displayName = "IconResidentialApartment";

IconResidentialApartment.defaultProps = {"version":"1.1","id":"Layer_1","x":"0px","y":"0px","viewBox":"0 0 256 256","style":{"enableBackground":"new 0 0 256 256"},"xmlSpace":"preserve"};

module.exports = IconResidentialApartment;

IconResidentialApartment.default = IconResidentialApartment;


/***/ }),
/* 1108 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);

function IconCommercialRetail (props) {
    return React.createElement("svg",props,React.createElement("g",{"id":"commercial_retail"},[React.createElement("path",{"id":"window","d":"M102.4,140.8H64c-7.1,0-12.8,5.7-12.8,12.8v25.6c0,7.1,5.7,12.8,12.8,12.8h38.4c7.1,0,12.8-5.7,12.8-12.8\n\t\tv-25.6C115.2,146.5,109.5,140.8,102.4,140.8z M102.4,179.2H64v-25.6h38.4V179.2z","key":0}),React.createElement("path",{"id":"retail_space","d":"M256.1,72c-0.1-9.7-3.2-19.3-8.8-27.3c-6.5-9.3-10.8-19.8-14.9-30.4C227.6,1.8,222.5,0,212,0\n\t\tC201.7,0,57.6,0,38.4,0C31.1,0,28,4.9,25,10.9c-6.7,13.3-13.3,26.6-20,40c-2,4-5.1,8.5-5.1,13.2c0.1,8-0.7,16.2,1.7,24\n\t\tc3.6,11.6,12.7,22.9,24,27.1c0,2.5,0,93.8-0.1,128c0,7.1,5.7,12.8,12.8,12.8h179.2c7.1,0,12.8-5.7,12.8-12.8v-128\n\t\tc11.3-4.2,20.3-15.5,23.9-27.1C255.9,82.8,256.1,77.4,256.1,72z M217.6,12.8L243.2,64h-64V12.8H217.6z M166.4,12.8V64H89.6V12.8\n\t\tH166.4z M166.4,76.8c0,14.1-11.5,25.6-25.6,25.6h-25.6c-14.1,0-25.6-11.5-25.6-25.6H166.4z M38.4,12.8h38.4V64h-64L38.4,12.8z\n\t\t M12.8,76.8h64c0,14.1-11.5,25.6-25.6,25.6H38.4C24.3,102.4,12.8,90.9,12.8,76.8z M140.8,243.2v-89.6H192v89.6H140.8z M217.6,243.2\n\t\th-12.8v-89.6c0-7.1-5.7-12.8-12.8-12.8h-51.2c-7.1,0-12.8,5.7-12.8,12.8v89.6H38.4v-128h12.8c13.4,0,25.1-6.9,32-17.3\n\t\tc6.9,10.4,18.6,17.3,32,17.3h25.6c13.4,0,25.1-6.9,32-17.3c6.9,10.4,18.6,17.3,32,17.3h12.8V243.2z M217.6,102.4h-12.8\n\t\tc-14.1,0-25.6-11.5-25.6-25.6h64C243.2,90.9,231.7,102.4,217.6,102.4z","key":1})]));
}

IconCommercialRetail.displayName = "IconCommercialRetail";

IconCommercialRetail.defaultProps = {"version":"1.1","id":"Layer_1","x":"0px","y":"0px","viewBox":"0 0 256 256","style":{"enableBackground":"new 0 0 256 256"},"xmlSpace":"preserve"};

module.exports = IconCommercialRetail;

IconCommercialRetail.default = IconCommercialRetail;


/***/ }),
/* 1109 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);

function IconLandWooded (props) {
    return React.createElement("svg",props,React.createElement("path",{"id":"land_wooded","d":"M128,204.8v-38.7c42.9-3.3,76.8-39.1,76.8-82.9c0-45.9-37.2-83.2-83.2-83.2S38.4,37.2,38.4,83.2\n\tc0,43.8,33.9,79.6,76.8,82.9v38.7c0,0.1,0,0.2,0.1,0.3C50.5,207.6,0,229.4,0,256h256C256,227.7,198.7,204.8,128,204.8z M51.2,83.2\n\tc0-38.8,31.6-70.4,70.4-70.4S192,44.4,192,83.2c0,36.7-28.2,66.8-64,70.1v-41.8l30.1-30.1c2.5-2.5,2.5-6.5,0-9s-6.6-2.5-9.1,0\n\tL128,93.3V64c0-3.5-2.9-6.4-6.4-6.4s-6.4,2.9-6.4,6.4v42.2L94.1,85.1c-2.5-2.5-6.6-2.5-9.1,0s-2.5,6.6,0,9.1l30.1,30.1v29\n\tC79.4,150,51.2,119.9,51.2,83.2z M21.2,243.2c16.1-12.9,54.4-25.6,106.8-25.6s90.8,12.7,106.8,25.6H21.2z"}));
}

IconLandWooded.displayName = "IconLandWooded";

IconLandWooded.defaultProps = {"version":"1.1","id":"Layer_1","x":"0px","y":"0px","viewBox":"0 0 256 256","style":{"enableBackground":"new 0 0 256 256"},"xmlSpace":"preserve"};

module.exports = IconLandWooded;

IconLandWooded.default = IconLandWooded;


/***/ }),
/* 1110 */
/***/ (function(module, exports, __webpack_require__) {

var baseDifference = __webpack_require__(1154),
    baseFlatten = __webpack_require__(382),
    baseRest = __webpack_require__(233),
    isArrayLikeObject = __webpack_require__(383);

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
    : [];
});

module.exports = difference;


/***/ }),
/* 1111 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(238),
    getPrototype = __webpack_require__(1080),
    getSymbols = __webpack_require__(381),
    stubArray = __webpack_require__(393);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 1112 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(92),
    baseClone = __webpack_require__(1164),
    baseUnset = __webpack_require__(1118),
    castPath = __webpack_require__(228),
    copyObject = __webpack_require__(1052),
    customOmitClone = __webpack_require__(1180),
    flatRest = __webpack_require__(1181),
    getAllKeysIn = __webpack_require__(1079);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;


/***/ }),
/* 1113 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(43);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(94)(module)))

/***/ }),
/* 1114 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 1115 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;


/***/ }),
/* 1116 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(1081);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 1117 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(1178),
    getPrototype = __webpack_require__(1080),
    isPrototype = __webpack_require__(229);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 1118 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(228),
    last = __webpack_require__(403),
    parent = __webpack_require__(1179),
    toKey = __webpack_require__(115);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;


/***/ }),
/* 1119 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(80),
    getPrototype = __webpack_require__(1080),
    isObjectLike = __webpack_require__(64);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 1120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UserPanelIcon = function UserPanelIcon(_ref) {
  var openUserPanel = _ref.openUserPanel;
  return _react2.default.createElement(
    'a',
    {
      href: '#',
      onClick: function onClick(event) {
        event.preventDefault();openUserPanel();
      },
      className: _lib.Lib.THEME_CLASSES_PREFIX + 'side-navigation'
    },
    _react2.default.createElement('span', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'navbar-navigation-icon fa fa-bars' })
  );
};

exports.default = UserPanelIcon;

/***/ }),
/* 1121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _asap = __webpack_require__(1195);

var _asap2 = _interopRequireDefault(_asap);

var _generate = __webpack_require__(1197);

var _util = __webpack_require__(1086);

// The current <style> tag we are inserting into, or null if we haven't
// inserted anything yet. We could find this each time using
// `document.querySelector("style[data-aphrodite"])`, but holding onto it is
// faster.
var styleTag = null;

// Inject a string of styles into a <style> tag in the head of the document. This
// will automatically create a style tag and then continue to use it for
// multiple injections. It will also use a style tag with the `data-aphrodite`
// tag on it if that exists in the DOM. This could be used for e.g. reusing the
// same style tag that server-side rendering inserts.
var injectStyleTag = function injectStyleTag(cssContents) {
    if (styleTag == null) {
        // Try to find a style tag with the `data-aphrodite` attribute first.
        styleTag = document.querySelector("style[data-aphrodite]");

        // If that doesn't work, generate a new style tag.
        if (styleTag == null) {
            // Taken from
            // http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript
            var head = document.head || document.getElementsByTagName('head')[0];
            styleTag = document.createElement('style');

            styleTag.type = 'text/css';
            styleTag.setAttribute("data-aphrodite", "");
            head.appendChild(styleTag);
        }
    }

    if (styleTag.styleSheet) {
        styleTag.styleSheet.cssText += cssContents;
    } else {
        styleTag.appendChild(document.createTextNode(cssContents));
    }
};

// Custom handlers for stringifying CSS values that have side effects
// (such as fontFamily, which can cause @font-face rules to be injected)
var stringHandlers = {
    // With fontFamily we look for objects that are passed in and interpret
    // them as @font-face rules that we need to inject. The value of fontFamily
    // can either be a string (as normal), an object (a single font face), or
    // an array of objects and strings.
    fontFamily: function fontFamily(val) {
        if (Array.isArray(val)) {
            return val.map(fontFamily).join(",");
        } else if (typeof val === "object") {
            injectStyleOnce(val.fontFamily, "@font-face", [val], false);
            return '"' + val.fontFamily + '"';
        } else {
            return val;
        }
    },

    // With animationName we look for an object that contains keyframes and
    // inject them as an `@keyframes` block, returning a uniquely generated
    // name. The keyframes object should look like
    //  animationName: {
    //    from: {
    //      left: 0,
    //      top: 0,
    //    },
    //    '50%': {
    //      left: 15,
    //      top: 5,
    //    },
    //    to: {
    //      left: 20,
    //      top: 20,
    //    }
    //  }
    // TODO(emily): `stringHandlers` doesn't let us rename the key, so I have
    // to use `animationName` here. Improve that so we can call this
    // `animation` instead of `animationName`.
    animationName: function animationName(val) {
        if (typeof val !== "object") {
            return val;
        }

        // Generate a unique name based on the hash of the object. We can't
        // just use the hash because the name can't start with a number.
        // TODO(emily): this probably makes debugging hard, allow a custom
        // name?
        var name = 'keyframe_' + (0, _util.hashObject)(val);

        // Since keyframes need 3 layers of nesting, we use `generateCSS` to
        // build the inner layers and wrap it in `@keyframes` ourselves.
        var finalVal = '@keyframes ' + name + '{';
        Object.keys(val).forEach(function (key) {
            finalVal += (0, _generate.generateCSS)(key, [val[key]], stringHandlers, false);
        });
        finalVal += '}';

        injectGeneratedCSSOnce(name, finalVal);

        return name;
    }
};

// This is a map from Aphrodite's generated class names to `true` (acting as a
// set of class names)
var alreadyInjected = {};

// This is the buffer of styles which have not yet been flushed.
var injectionBuffer = "";

// A flag to tell if we are already buffering styles. This could happen either
// because we scheduled a flush call already, so newly added styles will
// already be flushed, or because we are statically buffering on the server.
var isBuffering = false;

var injectGeneratedCSSOnce = function injectGeneratedCSSOnce(key, generatedCSS) {
    if (!alreadyInjected[key]) {
        if (!isBuffering) {
            // We should never be automatically buffering on the server (or any
            // place without a document), so guard against that.
            if (typeof document === "undefined") {
                throw new Error("Cannot automatically buffer without a document");
            }

            // If we're not already buffering, schedule a call to flush the
            // current styles.
            isBuffering = true;
            (0, _asap2['default'])(flushToStyleTag);
        }

        injectionBuffer += generatedCSS;
        alreadyInjected[key] = true;
    }
};

var injectStyleOnce = function injectStyleOnce(key, selector, definitions, useImportant) {
    if (!alreadyInjected[key]) {
        var generated = (0, _generate.generateCSS)(selector, definitions, stringHandlers, useImportant);

        injectGeneratedCSSOnce(key, generated);
    }
};

exports.injectStyleOnce = injectStyleOnce;
var reset = function reset() {
    injectionBuffer = "";
    alreadyInjected = {};
    isBuffering = false;
    styleTag = null;
};

exports.reset = reset;
var startBuffering = function startBuffering() {
    if (isBuffering) {
        throw new Error("Cannot buffer while already buffering");
    }
    isBuffering = true;
};

exports.startBuffering = startBuffering;
var flushToString = function flushToString() {
    isBuffering = false;
    var ret = injectionBuffer;
    injectionBuffer = "";
    return ret;
};

exports.flushToString = flushToString;
var flushToStyleTag = function flushToStyleTag() {
    var cssContent = flushToString();
    if (cssContent.length > 0) {
        injectStyleTag(cssContent);
    }
};

exports.flushToStyleTag = flushToStyleTag;
var getRenderedClassNames = function getRenderedClassNames() {
    return Object.keys(alreadyInjected);
};

exports.getRenderedClassNames = getRenderedClassNames;
var addRenderedClassNames = function addRenderedClassNames(classNames) {
    classNames.forEach(function (className) {
        alreadyInjected[className] = true;
    });
};

exports.addRenderedClassNames = addRenderedClassNames;
/**
 * Inject styles associated with the passed style definition objects, and return
 * an associated CSS class name.
 *
 * @param {boolean} useImportant If true, will append !important to generated
 *     CSS output. e.g. {color: red} -> "color: red !important".
 * @param {Object[]} styleDefinitions style definition objects as returned as
 *     properties of the return value of StyleSheet.create().
 */
var injectAndGetClassName = function injectAndGetClassName(useImportant, styleDefinitions) {
    // Filter out falsy values from the input, to allow for
    // `css(a, test && c)`
    var validDefinitions = styleDefinitions.filter(function (def) {
        return def;
    });

    // Break if there aren't any valid styles.
    if (validDefinitions.length === 0) {
        return "";
    }

    var className = validDefinitions.map(function (s) {
        return s._name;
    }).join("-o_O-");
    injectStyleOnce(className, '.' + className, validDefinitions.map(function (d) {
        return d._definition;
    }), useImportant);

    return className;
};
exports.injectAndGetClassName = injectAndGetClassName;

/***/ }),
/* 1122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = { "Webkit": { "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "backfaceVisibility": true, "perspective": true, "perspectiveOrigin": true, "transformStyle": true, "transformOriginZ": true, "animation": true, "animationDelay": true, "animationDirection": true, "animationFillMode": true, "animationDuration": true, "animationIterationCount": true, "animationName": true, "animationPlayState": true, "animationTimingFunction": true, "appearance": true, "userSelect": true, "fontKerning": true, "textEmphasisPosition": true, "textEmphasis": true, "textEmphasisStyle": true, "textEmphasisColor": true, "boxDecorationBreak": true, "clipPath": true, "maskImage": true, "maskMode": true, "maskRepeat": true, "maskPosition": true, "maskClip": true, "maskOrigin": true, "maskSize": true, "maskComposite": true, "mask": true, "maskBorderSource": true, "maskBorderMode": true, "maskBorderSlice": true, "maskBorderWidth": true, "maskBorderOutset": true, "maskBorderRepeat": true, "maskBorder": true, "maskType": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "filter": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true, "flex": true, "flexBasis": true, "flexDirection": true, "flexGrow": true, "flexFlow": true, "flexShrink": true, "flexWrap": true, "alignContent": true, "alignItems": true, "alignSelf": true, "justifyContent": true, "order": true, "transition": true, "transitionDelay": true, "transitionDuration": true, "transitionProperty": true, "transitionTimingFunction": true, "backdropFilter": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "shapeImageThreshold": true, "shapeImageMargin": true, "shapeImageOutside": true, "hyphens": true, "flowInto": true, "flowFrom": true, "regionFragment": true, "textSizeAdjust": true }, "Moz": { "appearance": true, "userSelect": true, "boxSizing": true, "textAlignLast": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "tabSize": true, "hyphens": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true }, "ms": { "flex": true, "flexBasis": false, "flexDirection": true, "flexGrow": false, "flexFlow": true, "flexShrink": false, "flexWrap": true, "alignContent": false, "alignItems": false, "alignSelf": false, "justifyContent": false, "order": false, "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "userSelect": true, "wrapFlow": true, "wrapThrough": true, "wrapMargin": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "touchAction": true, "hyphens": true, "flowInto": true, "flowFrom": true, "breakBefore": true, "breakAfter": true, "breakInside": true, "regionFragment": true, "gridTemplateColumns": true, "gridTemplateRows": true, "gridTemplateAreas": true, "gridTemplate": true, "gridAutoColumns": true, "gridAutoRows": true, "gridAutoFlow": true, "grid": true, "gridRowStart": true, "gridColumnStart": true, "gridRowEnd": true, "gridRow": true, "gridColumn": true, "gridColumnEnd": true, "gridColumnGap": true, "gridRowGap": true, "gridArea": true, "gridGap": true, "textSizeAdjust": true } };
module.exports = exports["default"];

/***/ }),
/* 1123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// helper to capitalize strings

exports.default = function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
};

module.exports = exports["default"];

/***/ }),
/* 1124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _utils = __webpack_require__(1059);

var _Icon = __webpack_require__(1125);

var _Icon2 = _interopRequireDefault(_Icon);

function Arrow(_ref, _ref2) {
	var direction = _ref.direction;
	var icon = _ref.icon;
	var onClick = _ref.onClick;
	var size = _ref.size;

	var props = _objectWithoutProperties(_ref, ['direction', 'icon', 'onClick', 'size']);

	var theme = _ref2.theme;

	var classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

	return _react2['default'].createElement(
		'button',
		_extends({
			type: 'button',
			className: (0, _aphroditeNoImportant.css)(classes.arrow, classes['arrow__direction__' + direction], size && classes['arrow__size__' + size]),
			onClick: onClick,
			onTouchEnd: onClick
		}, props),
		_react2['default'].createElement(_Icon2['default'], { fill: !!theme.arrow && theme.arrow.fill || _theme2['default'].arrow.fill, type: icon })
	);
}

Arrow.propTypes = {
	direction: _propTypes2['default'].oneOf(['left', 'right']),
	icon: _propTypes2['default'].string,
	onClick: _propTypes2['default'].func.isRequired,
	size: _propTypes2['default'].oneOf(['medium', 'small']).isRequired
};
Arrow.defaultProps = {
	size: 'medium'
};
Arrow.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	arrow: {
		background: 'none',
		border: 'none',
		borderRadius: 4,
		cursor: 'pointer',
		outline: 'none',
		padding: 10, // increase hit area
		position: 'absolute',
		top: '50%',

		// disable user select
		WebkitTouchCallout: 'none',
		userSelect: 'none'
	},

	// sizes
	arrow__size__medium: {
		height: _theme2['default'].arrow.height,
		marginTop: _theme2['default'].arrow.height / -2,
		width: 40,

		'@media (min-width: 768px)': {
			width: 70
		}
	},
	arrow__size__small: {
		height: _theme2['default'].thumbnail.size,
		marginTop: _theme2['default'].thumbnail.size / -2,
		width: 30,

		'@media (min-width: 500px)': {
			width: 40
		}
	},

	// direction
	arrow__direction__right: {
		right: _theme2['default'].container.gutter.horizontal
	},
	arrow__direction__left: {
		left: _theme2['default'].container.gutter.horizontal
	}
};

module.exports = Arrow;

/***/ }),
/* 1125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _icons = __webpack_require__(1218);

var _icons2 = _interopRequireDefault(_icons);

var Icon = function Icon(_ref) {
	var fill = _ref.fill;
	var type = _ref.type;

	var props = _objectWithoutProperties(_ref, ['fill', 'type']);

	var icon = _icons2['default'][type];

	return _react2['default'].createElement('span', _extends({
		dangerouslySetInnerHTML: { __html: icon(fill) }
	}, props));
};

Icon.propTypes = {
	fill: _propTypes2['default'].string,
	type: _propTypes2['default'].oneOf(Object.keys(_icons2['default']))
};
Icon.defaultProps = {
	fill: 'white'
};

exports['default'] = Icon;
module.exports = exports['default'];

/***/ }),
/* 1126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
module.exports = exports['default'];

/***/ }),
/* 1127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.nameShape = undefined;
exports.transitionTimeout = transitionTimeout;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;

  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

        // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  leave: _propTypes2.default.string,
  active: _propTypes2.default.string
}), _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  enterActive: _propTypes2.default.string,
  leave: _propTypes2.default.string,
  leaveActive: _propTypes2.default.string,
  appear: _propTypes2.default.string,
  appearActive: _propTypes2.default.string
})]);

/***/ }),
/* 1128 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(1078),
    eq = __webpack_require__(154);

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),
/* 1129 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(233),
    isIterateeCall = __webpack_require__(240);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 1130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function(collection, callback) {
    for(var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if(result) {
            return result;
        }
    }
};


/***/ }),
/* 1131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function(version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if(!isAnyIeVersion()) {
        return false;
    }

    if(!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = (function(){
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + (++v) + "]><i></i><![endif]-->";
        }
        while (all[0]);

        return v > 4 ? v : undef;
    }());

    return version === ieVersion;
};

detector.isLegacyOpera = function() {
    return !!window.opera;
};


/***/ }),
/* 1132 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(1281);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 1133 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(1057) && !__webpack_require__(1067)(function () {
  return Object.defineProperty(__webpack_require__(1134)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 1134 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(1066);
var document = __webpack_require__(1051).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 1135 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(1058);
var toIObject = __webpack_require__(1062);
var arrayIndexOf = __webpack_require__(1283)(false);
var IE_PROTO = __webpack_require__(1092)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 1136 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(1137);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 1137 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 1138 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(1090);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 1139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(1287);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(1299);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 1140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(1097);
var $export = __webpack_require__(1060);
var redefine = __webpack_require__(1141);
var hide = __webpack_require__(1061);
var has = __webpack_require__(1058);
var Iterators = __webpack_require__(1098);
var $iterCreate = __webpack_require__(1291);
var setToStringTag = __webpack_require__(1100);
var getPrototypeOf = __webpack_require__(1294);
var ITERATOR = __webpack_require__(1063)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 1141 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1061);


/***/ }),
/* 1142 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(1135);
var hiddenKeys = __webpack_require__(1094).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 1143 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(1075);
var createDesc = __webpack_require__(1072);
var toIObject = __webpack_require__(1062);
var toPrimitive = __webpack_require__(1089);
var has = __webpack_require__(1058);
var IE8_DOM_DEFINE = __webpack_require__(1133);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(1057) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 1144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(1317);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 1145 */,
/* 1146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _capitalize = __webpack_require__(1076);

var _capitalize2 = _interopRequireDefault(_capitalize);

var _FilterTag = __webpack_require__(1105);

var _FilterTag2 = _interopRequireDefault(_FilterTag);

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterBar = function (_Component) {
  _inherits(FilterBar, _Component);

  function FilterBar(props) {
    _classCallCheck(this, FilterBar);

    var _this = _possibleConstructorReturn(this, (FilterBar.__proto__ || Object.getPrototypeOf(FilterBar)).call(this, props));

    _this.handleTermFilterRemove = function (filter) {
      _this.props.deleteLocalFilterTerm(filter);
    };

    _this.handleDeleteLastLocalFilterTerm = function (filter) {
      _this.props.deleteLastLocalFilterTerm(filter);
    };

    return _this;
  }

  _createClass(FilterBar, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var filters = this.props.filters;


      var termFilterElement = void 0;
      var termFilters = [];
      var termFilter = filters['term'];

      if (termFilter && termFilter.length) {
        termFilters = termFilter;
        if (termFilters.length === 1) {
          termFilterElement = _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(termFilters[0]), handleRemoveFilter: function handleRemoveFilter() {
              return _this2.handleDeleteLastLocalFilterTerm(termFilters[0]);
            }, display: termFilters[0].text, value: termFilters[0].text });
        } else {
          termFilterElement = termFilters.map(function (t, i) {
            return _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(t), handleRemoveFilter: function handleRemoveFilter() {
                return _this2.handleTermFilterRemove(t);
              }, display: t.text, value: t.text });
          });
        }
      }

      var bathroomsElement = void 0;
      var bathroomsFilter = filters['bathrooms'];
      var bedroomsFilter = filters['bedrooms'];
      var bedroomsElement = void 0;
      var lotSizeElement = void 0;
      var lotSizeFilter = filters['acres'];
      var priceFilter = filters['price'];
      var priceElement = void 0;
      var saleTypeFilter = filters['sale_type'];
      var saleTypeElement = void 0;
      var sqftFilter = filters['sqft'];
      var sqftElement = void 0;
      var subPropertyTypeFilter = filters['property_subtype'];
      var subPropertyTypeElement = void 0;
      if (bathroomsFilter) {
        bathroomsElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: function handleRemoveFilter() {
            return _this2.props.deleteSingleLocalFilter('bathrooms');
          }, display: bathroomsFilter + '+ Baths', value: bathroomsFilter });
      }

      if (bedroomsFilter) {
        bedroomsElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: function handleRemoveFilter() {
            return _this2.props.deleteSingleLocalFilter('bedrooms');
          }, display: bedroomsFilter + '+ Beds', value: bedroomsFilter });
      }

      if (lotSizeFilter) {
        lotSizeElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: function handleRemoveFilter() {
            return _this2.props.deleteSingleLocalFilter('acres');
          }, display: _Util2.default.lotSizeFilterSearchTagText(lotSizeFilter), value: lotSizeFilter });
      }

      if (priceFilter) {
        priceElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: function handleRemoveFilter() {
            return _this2.props.deleteSingleLocalFilter('price');
          }, display: _Util2.default.priceFilterSearchTagText(priceFilter), value: priceFilter });
      }

      if (subPropertyTypeFilter) {
        subPropertyTypeElement = subPropertyTypeFilter.map(function (s, i) {
          return _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(s), handleRemoveFilter: function handleRemoveFilter() {
              return _this2.props.deleteSubPropertyTypeFilter(s.slug);
            }, display: s.title, value: s.slug });
        });
      }

      if (['Commercial', 'Land'].indexOf(filters.search_type) >= 0 && saleTypeFilter) {
        saleTypeElement = saleTypeFilter.map(function (s, i) {
          var saleType = s === 'sale' ? 'buy' : s;
          return _react2.default.createElement(_FilterTag2.default, { key: s, handleRemoveFilter: _this2.props.deleteSaleTypeFilter, display: (0, _capitalize2.default)(saleType), value: s });
        });
      }

      if (sqftFilter) {
        sqftElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: function handleRemoveFilter() {
            return _this2.props.deleteSingleLocalFilter('sqft');
          }, display: _Util2.default.sqftFilterSearchTagText(sqftFilter), value: sqftFilter });
      }

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'bs-tags-box mr-auto' },
        termFilterElement,
        bathroomsElement,
        bedroomsElement,
        priceElement,
        sqftElement,
        lotSizeElement,
        subPropertyTypeElement,
        saleTypeElement,
        !termFilterElement && _react2.default.createElement('input', { type: 'text', size: '1', placeholder: 'Select bedroom type, amenities' })
      );
    }
  }]);

  return FilterBar;
}(_react.Component);

FilterBar.propTypes = {
  deleteSingleLocalFilter: _propTypes2.default.func.isRequired,
  deleteLocalFilterTerm: _propTypes2.default.func.isRequired,
  filters: _propTypes2.default.object.isRequired,
  deleteLastLocalFilterTerm: _propTypes2.default.func.isRequired,
  deleteSaleTypeFilter: _propTypes2.default.func.isRequired,
  deleteSubPropertyTypeFilter: _propTypes2.default.func.isRequired
};
;

exports.default = FilterBar;

/***/ }),
/* 1147 */
/***/ (function(module, exports, __webpack_require__) {

var createCaseFirst = __webpack_require__(1148);

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

module.exports = upperFirst;


/***/ }),
/* 1148 */
/***/ (function(module, exports, __webpack_require__) {

var castSlice = __webpack_require__(404),
    hasUnicode = __webpack_require__(242),
    stringToArray = __webpack_require__(406),
    toString = __webpack_require__(155);

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

module.exports = createCaseFirst;


/***/ }),
/* 1149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Slider = __webpack_require__(1077);

var _Slider2 = _interopRequireDefault(_Slider);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sliderFormatter = function sliderFormatter(min, max) {
  return function () {
    return {
      to: function to(val) {
        var returnVal = void 0;
        if (val === min) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT;
        } else if (val === max) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT;
        } else {
          returnVal = _Util2.default.formatPriceValue(val);
        }
        return returnVal;
      },
      from: function from(val) {
        return val;
      }
    };
  };
};

var Price = function (_Component) {
  _inherits(Price, _Component);

  function Price(props) {
    _classCallCheck(this, Price);

    var _this = _possibleConstructorReturn(this, (Price.__proto__ || Object.getPrototypeOf(Price)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(Price, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          saleType = _props.saleType,
          start = _props.start,
          to = _props.to;

      var defaults = {
        Commercial: {
          start: 500,
          to: 3000
        },
        Rent: {
          start: 500,
          to: 3000
        },
        Land: {
          start: 500,
          to: 3000
        },
        Buy: {
          start: 150000,
          to: 400000
        }
      };
      var formatter = void 0;
      var min = void 0;
      var max = void 0;
      var step = void 0;
      if (saleType === 'Commercial') {
        min = 25000;
        max = 1000000;
        formatter = sliderFormatter(min, max);
        step = 25000;
      } else if (saleType === 'Rent') {
        min = 125;
        max = 5000;
        formatter = sliderFormatter(min, max);
        step = 125;
      } else if (saleType === 'Land') {
        min = 25000;
        max = 1000000;
        formatter = sliderFormatter(min, max);
        step = 25000;
      } else if (saleType === 'Buy') {
        min = 25000;
        max = 1000000;
        formatter = sliderFormatter(min, max);
        step = 25000;
      }
      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + "noUislider-container" },
        _react2.default.createElement(_Slider2.default, { formatter: formatter, max: max, min: min, start: start || defaults[saleType].start, step: step, to: to || defaults[saleType].to, handleOnClick: this.props.handleOnClick })
      );
    }
  }]);

  return Price;
}(_react.Component);

Price.propTypes = {
  saleType: _propTypes2.default.string,
  start: _propTypes2.default.any,
  to: _propTypes2.default.any,
  handleOnClick: _propTypes2.default.func
};
;

exports.default = Price;

/***/ }),
/* 1150 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 9.2.0 - 2017-01-11 10:35:34 */

(function (factory) {

    if ( true ) {

        // AMD. Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

    } else if ( typeof exports === 'object' ) {

        // Node/CommonJS
        module.exports = factory();

    } else {

        // Browser globals
        window.noUiSlider = factory();
    }

}(function( ){

	'use strict';

	var VERSION = '9.2.0';


	// Creates a node, adds it to target, returns the new node.
	function addNodeTo ( target, className ) {
		var div = document.createElement('div');
		addClass(div, className);
		target.appendChild(div);
		return div;
	}

	// Removes duplicates from an array.
	function unique ( array ) {
		return array.filter(function(a){
			return !this[a] ? this[a] = true : false;
		}, {});
	}

	// Round a value to the closest 'to'.
	function closest ( value, to ) {
		return Math.round(value / to) * to;
	}

	// Current position of an element relative to the document.
	function offset ( elem, orientation ) {

	var rect = elem.getBoundingClientRect(),
		doc = elem.ownerDocument,
		docElem = doc.documentElement,
		pageOffset = getPageOffset();

		// getBoundingClientRect contains left scroll in Chrome on Android.
		// I haven't found a feature detection that proves this. Worst case
		// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.
		if ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {
			pageOffset.x = 0;
		}

		return orientation ? (rect.top + pageOffset.y - docElem.clientTop) : (rect.left + pageOffset.x - docElem.clientLeft);
	}

	// Checks whether a value is numerical.
	function isNumeric ( a ) {
		return typeof a === 'number' && !isNaN( a ) && isFinite( a );
	}

	// Sets a class and removes it after [duration] ms.
	function addClassFor ( element, className, duration ) {
		if (duration > 0) {
		addClass(element, className);
			setTimeout(function(){
				removeClass(element, className);
			}, duration);
		}
	}

	// Limits a value to 0 - 100
	function limit ( a ) {
		return Math.max(Math.min(a, 100), 0);
	}

	// Wraps a variable as an array, if it isn't one yet.
	// Note that an input array is returned by reference!
	function asArray ( a ) {
		return Array.isArray(a) ? a : [a];
	}

	// Counts decimals
	function countDecimals ( numStr ) {
		numStr = String(numStr);
		var pieces = numStr.split(".");
		return pieces.length > 1 ? pieces[1].length : 0;
	}

	// http://youmightnotneedjquery.com/#add_class
	function addClass ( el, className ) {
		if ( el.classList ) {
			el.classList.add(className);
		} else {
			el.className += ' ' + className;
		}
	}

	// http://youmightnotneedjquery.com/#remove_class
	function removeClass ( el, className ) {
		if ( el.classList ) {
			el.classList.remove(className);
		} else {
			el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
		}
	}

	// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/
	function hasClass ( el, className ) {
		return el.classList ? el.classList.contains(className) : new RegExp('\\b' + className + '\\b').test(el.className);
	}

	// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes
	function getPageOffset ( ) {

		var supportPageOffset = window.pageXOffset !== undefined,
			isCSS1Compat = ((document.compatMode || "") === "CSS1Compat"),
			x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,
			y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;

		return {
			x: x,
			y: y
		};
	}

	// we provide a function to compute constants instead
	// of accessing window.* as soon as the module needs it
	// so that we do not compute anything if not needed
	function getActions ( ) {

		// Determine the events to bind. IE11 implements pointerEvents without
		// a prefix, which breaks compatibility with the IE10 implementation.
		return window.navigator.pointerEnabled ? {
			start: 'pointerdown',
			move: 'pointermove',
			end: 'pointerup'
		} : window.navigator.msPointerEnabled ? {
			start: 'MSPointerDown',
			move: 'MSPointerMove',
			end: 'MSPointerUp'
		} : {
			start: 'mousedown touchstart',
			move: 'mousemove touchmove',
			end: 'mouseup touchend'
		};
	}


// Value calculation

	// Determine the size of a sub-range in relation to a full range.
	function subRangeRatio ( pa, pb ) {
		return (100 / (pb - pa));
	}

	// (percentage) How many percent is this value of this range?
	function fromPercentage ( range, value ) {
		return (value * 100) / ( range[1] - range[0] );
	}

	// (percentage) Where is this value on this range?
	function toPercentage ( range, value ) {
		return fromPercentage( range, range[0] < 0 ?
			value + Math.abs(range[0]) :
				value - range[0] );
	}

	// (value) How much is this percentage on this range?
	function isPercentage ( range, value ) {
		return ((value * ( range[1] - range[0] )) / 100) + range[0];
	}


// Range conversion

	function getJ ( value, arr ) {

		var j = 1;

		while ( value >= arr[j] ){
			j += 1;
		}

		return j;
	}

	// (percentage) Input a value, find where, on a scale of 0-100, it applies.
	function toStepping ( xVal, xPct, value ) {

		if ( value >= xVal.slice(-1)[0] ){
			return 100;
		}

		var j = getJ( value, xVal ), va, vb, pa, pb;

		va = xVal[j-1];
		vb = xVal[j];
		pa = xPct[j-1];
		pb = xPct[j];

		return pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));
	}

	// (value) Input a percentage, find where it is on the specified range.
	function fromStepping ( xVal, xPct, value ) {

		// There is no range group that fits 100
		if ( value >= 100 ){
			return xVal.slice(-1)[0];
		}

		var j = getJ( value, xPct ), va, vb, pa, pb;

		va = xVal[j-1];
		vb = xVal[j];
		pa = xPct[j-1];
		pb = xPct[j];

		return isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));
	}

	// (percentage) Get the step that applies at a certain value.
	function getStep ( xPct, xSteps, snap, value ) {

		if ( value === 100 ) {
			return value;
		}

		var j = getJ( value, xPct ), a, b;

		// If 'snap' is set, steps are used as fixed points on the slider.
		if ( snap ) {

			a = xPct[j-1];
			b = xPct[j];

			// Find the closest position, a or b.
			if ((value - a) > ((b-a)/2)){
				return b;
			}

			return a;
		}

		if ( !xSteps[j-1] ){
			return value;
		}

		return xPct[j-1] + closest(
			value - xPct[j-1],
			xSteps[j-1]
		);
	}


// Entry parsing

	function handleEntryPoint ( index, value, that ) {

		var percentage;

		// Wrap numerical input in an array.
		if ( typeof value === "number" ) {
			value = [value];
		}

		// Reject any invalid input, by testing whether value is an array.
		if ( Object.prototype.toString.call( value ) !== '[object Array]' ){
			throw new Error("noUiSlider (" + VERSION + "): 'range' contains invalid value.");
		}

		// Covert min/max syntax to 0 and 100.
		if ( index === 'min' ) {
			percentage = 0;
		} else if ( index === 'max' ) {
			percentage = 100;
		} else {
			percentage = parseFloat( index );
		}

		// Check for correct input.
		if ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {
			throw new Error("noUiSlider (" + VERSION + "): 'range' value isn't numeric.");
		}

		// Store values.
		that.xPct.push( percentage );
		that.xVal.push( value[0] );

		// NaN will evaluate to false too, but to keep
		// logging clear, set step explicitly. Make sure
		// not to override the 'step' setting with false.
		if ( !percentage ) {
			if ( !isNaN( value[1] ) ) {
				that.xSteps[0] = value[1];
			}
		} else {
			that.xSteps.push( isNaN(value[1]) ? false : value[1] );
		}

		that.xHighestCompleteStep.push(0);
	}

	function handleStepPoint ( i, n, that ) {

		// Ignore 'false' stepping.
		if ( !n ) {
			return true;
		}

		// Factor to range ratio
		that.xSteps[i] = fromPercentage([
			 that.xVal[i]
			,that.xVal[i+1]
		], n) / subRangeRatio (
			that.xPct[i],
			that.xPct[i+1] );

		var totalSteps = (that.xVal[i+1] - that.xVal[i]) / that.xNumSteps[i];
		var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);
		var step = that.xVal[i] + (that.xNumSteps[i] * highestStep);

		that.xHighestCompleteStep[i] = step;
	}


// Interface

	// The interface to Spectrum handles all direction-based
	// conversions, so the above values are unaware.

	function Spectrum ( entry, snap, direction, singleStep ) {

		this.xPct = [];
		this.xVal = [];
		this.xSteps = [ singleStep || false ];
		this.xNumSteps = [ false ];
		this.xHighestCompleteStep = [];

		this.snap = snap;
		this.direction = direction;

		var index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];

		// Map the object keys to an array.
		for ( index in entry ) {
			if ( entry.hasOwnProperty(index) ) {
				ordered.push([entry[index], index]);
			}
		}

		// Sort all entries by value (numeric sort).
		if ( ordered.length && typeof ordered[0][0] === "object" ) {
			ordered.sort(function(a, b) { return a[0][0] - b[0][0]; });
		} else {
			ordered.sort(function(a, b) { return a[0] - b[0]; });
		}


		// Convert all entries to subranges.
		for ( index = 0; index < ordered.length; index++ ) {
			handleEntryPoint(ordered[index][1], ordered[index][0], this);
		}

		// Store the actual step values.
		// xSteps is sorted in the same order as xPct and xVal.
		this.xNumSteps = this.xSteps.slice(0);

		// Convert all numeric steps to the percentage of the subrange they represent.
		for ( index = 0; index < this.xNumSteps.length; index++ ) {
			handleStepPoint(index, this.xNumSteps[index], this);
		}
	}

	Spectrum.prototype.getMargin = function ( value ) {

		var step = this.xNumSteps[0];

		if ( step && ((value / step) % 1) !== 0 ) {
			throw new Error("noUiSlider (" + VERSION + "): 'limit', 'margin' and 'padding' must be divisible by step.");
		}

		return this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;
	};

	Spectrum.prototype.toStepping = function ( value ) {

		value = toStepping( this.xVal, this.xPct, value );

		return value;
	};

	Spectrum.prototype.fromStepping = function ( value ) {

		return fromStepping( this.xVal, this.xPct, value );
	};

	Spectrum.prototype.getStep = function ( value ) {

		value = getStep(this.xPct, this.xSteps, this.snap, value );

		return value;
	};

	Spectrum.prototype.getNearbySteps = function ( value ) {

		var j = getJ(value, this.xPct);

		return {
			stepBefore: { startValue: this.xVal[j-2], step: this.xNumSteps[j-2], highestStep: this.xHighestCompleteStep[j-2] },
			thisStep: { startValue: this.xVal[j-1], step: this.xNumSteps[j-1], highestStep: this.xHighestCompleteStep[j-1] },
			stepAfter: { startValue: this.xVal[j-0], step: this.xNumSteps[j-0], highestStep: this.xHighestCompleteStep[j-0] }
		};
	};

	Spectrum.prototype.countStepDecimals = function () {
		var stepDecimals = this.xNumSteps.map(countDecimals);
		return Math.max.apply(null, stepDecimals);
 	};

	// Outside testing
	Spectrum.prototype.convert = function ( value ) {
		return this.getStep(this.toStepping(value));
	};

/*	Every input option is tested and parsed. This'll prevent
	endless validation in internal methods. These tests are
	structured with an item for every option available. An
	option can be marked as required by setting the 'r' flag.
	The testing function is provided with three arguments:
		- The provided value for the option;
		- A reference to the options object;
		- The name for the option;

	The testing function returns false when an error is detected,
	or true when everything is OK. It can also modify the option
	object, to make sure all values can be correctly looped elsewhere. */

	var defaultFormatter = { 'to': function( value ){
		return value !== undefined && value.toFixed(2);
	}, 'from': Number };

	function testStep ( parsed, entry ) {

		if ( !isNumeric( entry ) ) {
			throw new Error("noUiSlider (" + VERSION + "): 'step' is not numeric.");
		}

		// The step option can still be used to set stepping
		// for linear sliders. Overwritten if set in 'range'.
		parsed.singleStep = entry;
	}

	function testRange ( parsed, entry ) {

		// Filter incorrect input.
		if ( typeof entry !== 'object' || Array.isArray(entry) ) {
			throw new Error("noUiSlider (" + VERSION + "): 'range' is not an object.");
		}

		// Catch missing start or end.
		if ( entry.min === undefined || entry.max === undefined ) {
			throw new Error("noUiSlider (" + VERSION + "): Missing 'min' or 'max' in 'range'.");
		}

		// Catch equal start or end.
		if ( entry.min === entry.max ) {
			throw new Error("noUiSlider (" + VERSION + "): 'range' 'min' and 'max' cannot be equal.");
		}

		parsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);
	}

	function testStart ( parsed, entry ) {

		entry = asArray(entry);

		// Validate input. Values aren't tested, as the public .val method
		// will always provide a valid location.
		if ( !Array.isArray( entry ) || !entry.length ) {
			throw new Error("noUiSlider (" + VERSION + "): 'start' option is incorrect.");
		}

		// Store the number of handles.
		parsed.handles = entry.length;

		// When the slider is initialized, the .val method will
		// be called with the start options.
		parsed.start = entry;
	}

	function testSnap ( parsed, entry ) {

		// Enforce 100% stepping within subranges.
		parsed.snap = entry;

		if ( typeof entry !== 'boolean' ){
			throw new Error("noUiSlider (" + VERSION + "): 'snap' option must be a boolean.");
		}
	}

	function testAnimate ( parsed, entry ) {

		// Enforce 100% stepping within subranges.
		parsed.animate = entry;

		if ( typeof entry !== 'boolean' ){
			throw new Error("noUiSlider (" + VERSION + "): 'animate' option must be a boolean.");
		}
	}

	function testAnimationDuration ( parsed, entry ) {

		parsed.animationDuration = entry;

		if ( typeof entry !== 'number' ){
			throw new Error("noUiSlider (" + VERSION + "): 'animationDuration' option must be a number.");
		}
	}

	function testConnect ( parsed, entry ) {

		var connect = [false];
		var i;

		// Map legacy options
		if ( entry === 'lower' ) {
			entry = [true, false];
		}

		else if ( entry === 'upper' ) {
			entry = [false, true];
		}

		// Handle boolean options
		if ( entry === true || entry === false ) {

			for ( i = 1; i < parsed.handles; i++ ) {
				connect.push(entry);
			}

			connect.push(false);
		}

		// Reject invalid input
		else if ( !Array.isArray( entry ) || !entry.length || entry.length !== parsed.handles + 1 ) {
			throw new Error("noUiSlider (" + VERSION + "): 'connect' option doesn't match handle count.");
		}

		else {
			connect = entry;
		}

		parsed.connect = connect;
	}

	function testOrientation ( parsed, entry ) {

		// Set orientation to an a numerical value for easy
		// array selection.
		switch ( entry ){
		  case 'horizontal':
			parsed.ort = 0;
			break;
		  case 'vertical':
			parsed.ort = 1;
			break;
		  default:
			throw new Error("noUiSlider (" + VERSION + "): 'orientation' option is invalid.");
		}
	}

	function testMargin ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider (" + VERSION + "): 'margin' option must be numeric.");
		}

		// Issue #582
		if ( entry === 0 ) {
			return;
		}

		parsed.margin = parsed.spectrum.getMargin(entry);

		if ( !parsed.margin ) {
			throw new Error("noUiSlider (" + VERSION + "): 'margin' option is only supported on linear sliders.");
		}
	}

	function testLimit ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider (" + VERSION + "): 'limit' option must be numeric.");
		}

		parsed.limit = parsed.spectrum.getMargin(entry);

		if ( !parsed.limit || parsed.handles < 2 ) {
			throw new Error("noUiSlider (" + VERSION + "): 'limit' option is only supported on linear sliders with 2 or more handles.");
		}
	}

	function testPadding ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider (" + VERSION + "): 'padding' option must be numeric.");
		}

		if ( entry === 0 ) {
			return;
		}

		parsed.padding = parsed.spectrum.getMargin(entry);

		if ( !parsed.padding ) {
			throw new Error("noUiSlider (" + VERSION + "): 'padding' option is only supported on linear sliders.");
		}

		if ( parsed.padding < 0 ) {
			throw new Error("noUiSlider (" + VERSION + "): 'padding' option must be a positive number.");
		}

		if ( parsed.padding >= 50 ) {
			throw new Error("noUiSlider (" + VERSION + "): 'padding' option must be less than half the range.");
		}
	}

	function testDirection ( parsed, entry ) {

		// Set direction as a numerical value for easy parsing.
		// Invert connection for RTL sliders, so that the proper
		// handles get the connect/background classes.
		switch ( entry ) {
		  case 'ltr':
			parsed.dir = 0;
			break;
		  case 'rtl':
			parsed.dir = 1;
			break;
		  default:
			throw new Error("noUiSlider (" + VERSION + "): 'direction' option was not recognized.");
		}
	}

	function testBehaviour ( parsed, entry ) {

		// Make sure the input is a string.
		if ( typeof entry !== 'string' ) {
			throw new Error("noUiSlider (" + VERSION + "): 'behaviour' must be a string containing options.");
		}

		// Check if the string contains any keywords.
		// None are required.
		var tap = entry.indexOf('tap') >= 0;
		var drag = entry.indexOf('drag') >= 0;
		var fixed = entry.indexOf('fixed') >= 0;
		var snap = entry.indexOf('snap') >= 0;
		var hover = entry.indexOf('hover') >= 0;

		if ( fixed ) {

			if ( parsed.handles !== 2 ) {
				throw new Error("noUiSlider (" + VERSION + "): 'fixed' behaviour must be used with 2 handles");
			}

			// Use margin to enforce fixed state
			testMargin(parsed, parsed.start[1] - parsed.start[0]);
		}

		parsed.events = {
			tap: tap || snap,
			drag: drag,
			fixed: fixed,
			snap: snap,
			hover: hover
		};
	}

	function testTooltips ( parsed, entry ) {

		if ( entry === false ) {
			return;
		}

		else if ( entry === true ) {

			parsed.tooltips = [];

			for ( var i = 0; i < parsed.handles; i++ ) {
				parsed.tooltips.push(true);
			}
		}

		else {

			parsed.tooltips = asArray(entry);

			if ( parsed.tooltips.length !== parsed.handles ) {
				throw new Error("noUiSlider (" + VERSION + "): must pass a formatter for all handles.");
			}

			parsed.tooltips.forEach(function(formatter){
				if ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {
					throw new Error("noUiSlider (" + VERSION + "): 'tooltips' must be passed a formatter or 'false'.");
				}
			});
		}
	}

	function testFormat ( parsed, entry ) {

		parsed.format = entry;

		// Any object with a to and from method is supported.
		if ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {
			return true;
		}

		throw new Error("noUiSlider (" + VERSION + "): 'format' requires 'to' and 'from' methods.");
	}

	function testCssPrefix ( parsed, entry ) {

		if ( entry !== undefined && typeof entry !== 'string' && entry !== false ) {
			throw new Error("noUiSlider (" + VERSION + "): 'cssPrefix' must be a string or `false`.");
		}

		parsed.cssPrefix = entry;
	}

	function testCssClasses ( parsed, entry ) {

		if ( entry !== undefined && typeof entry !== 'object' ) {
			throw new Error("noUiSlider (" + VERSION + "): 'cssClasses' must be an object.");
		}

		if ( typeof parsed.cssPrefix === 'string' ) {
			parsed.cssClasses = {};

			for ( var key in entry ) {
				if ( !entry.hasOwnProperty(key) ) { continue; }

				parsed.cssClasses[key] = parsed.cssPrefix + entry[key];
			}
		} else {
			parsed.cssClasses = entry;
		}
	}

	function testUseRaf ( parsed, entry ) {
		if ( entry === true || entry === false ) {
			parsed.useRequestAnimationFrame = entry;
		} else {
			throw new Error("noUiSlider (" + VERSION + "): 'useRequestAnimationFrame' option should be true (default) or false.");
		}
	}

	// Test all developer settings and parse to assumption-safe values.
	function testOptions ( options ) {

		// To prove a fix for #537, freeze options here.
		// If the object is modified, an error will be thrown.
		// Object.freeze(options);

		var parsed = {
			margin: 0,
			limit: 0,
			padding: 0,
			animate: true,
			animationDuration: 300,
			format: defaultFormatter
		};

		// Tests are executed in the order they are presented here.
		var tests = {
			'step': { r: false, t: testStep },
			'start': { r: true, t: testStart },
			'connect': { r: true, t: testConnect },
			'direction': { r: true, t: testDirection },
			'snap': { r: false, t: testSnap },
			'animate': { r: false, t: testAnimate },
			'animationDuration': { r: false, t: testAnimationDuration },
			'range': { r: true, t: testRange },
			'orientation': { r: false, t: testOrientation },
			'margin': { r: false, t: testMargin },
			'limit': { r: false, t: testLimit },
			'padding': { r: false, t: testPadding },
			'behaviour': { r: true, t: testBehaviour },
			'format': { r: false, t: testFormat },
			'tooltips': { r: false, t: testTooltips },
			'cssPrefix': { r: false, t: testCssPrefix },
			'cssClasses': { r: false, t: testCssClasses },
			'useRequestAnimationFrame': { r: false, t: testUseRaf }
		};

		var defaults = {
			'connect': false,
			'direction': 'ltr',
			'behaviour': 'tap',
			'orientation': 'horizontal',
			'cssPrefix' : 'noUi-',
			'cssClasses': {
				target: 'target',
				base: 'base',
				origin: 'origin',
				handle: 'handle',
				handleLower: 'handle-lower',
				handleUpper: 'handle-upper',
				horizontal: 'horizontal',
				vertical: 'vertical',
				background: 'background',
				connect: 'connect',
				ltr: 'ltr',
				rtl: 'rtl',
				draggable: 'draggable',
				drag: 'state-drag',
				tap: 'state-tap',
				active: 'active',
				tooltip: 'tooltip',
				pips: 'pips',
				pipsHorizontal: 'pips-horizontal',
				pipsVertical: 'pips-vertical',
				marker: 'marker',
				markerHorizontal: 'marker-horizontal',
				markerVertical: 'marker-vertical',
				markerNormal: 'marker-normal',
				markerLarge: 'marker-large',
				markerSub: 'marker-sub',
				value: 'value',
				valueHorizontal: 'value-horizontal',
				valueVertical: 'value-vertical',
				valueNormal: 'value-normal',
				valueLarge: 'value-large',
				valueSub: 'value-sub'
			},
			'useRequestAnimationFrame': true
		};

		// Run all options through a testing mechanism to ensure correct
		// input. It should be noted that options might get modified to
		// be handled properly. E.g. wrapping integers in arrays.
		Object.keys(tests).forEach(function( name ){

			// If the option isn't set, but it is required, throw an error.
			if ( options[name] === undefined && defaults[name] === undefined ) {

				if ( tests[name].r ) {
					throw new Error("noUiSlider (" + VERSION + "): '" + name + "' is required.");
				}

				return true;
			}

			tests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );
		});

		// Forward pips options
		parsed.pips = options.pips;

		var styles = [['left', 'top'], ['right', 'bottom']];

		// Pre-define the styles.
		parsed.style = styles[parsed.dir][parsed.ort];
		parsed.styleOposite = styles[parsed.dir?0:1][parsed.ort];

		return parsed;
	}


function closure ( target, options, originalOptions ){

	var actions = getActions( );

	// All variables local to 'closure' are prefixed with 'scope_'
	var scope_Target = target;
	var scope_Locations = [];
	var scope_Base;
	var scope_Handles;
	var scope_HandleNumbers = [];
	var scope_ActiveHandle = false;
	var scope_Connects;
	var scope_Spectrum = options.spectrum;
	var scope_Values = [];
	var scope_Events = {};
	var scope_Self;


	// Append a origin to the base
	function addOrigin ( base, handleNumber ) {

		var origin = addNodeTo(base, options.cssClasses.origin);
		var handle = addNodeTo(origin, options.cssClasses.handle);

		handle.setAttribute('data-handle', handleNumber);

		if ( handleNumber === 0 ) {
			addClass(handle, options.cssClasses.handleLower);
		}

		else if ( handleNumber === options.handles - 1 ) {
			addClass(handle, options.cssClasses.handleUpper);
		}

		return origin;
	}

	// Insert nodes for connect elements
	function addConnect ( base, add ) {

		if ( !add ) {
			return false;
		}

		return addNodeTo(base, options.cssClasses.connect);
	}

	// Add handles to the slider base.
	function addElements ( connectOptions, base ) {

		scope_Handles = [];
		scope_Connects = [];

		scope_Connects.push(addConnect(base, connectOptions[0]));

		// [::::O====O====O====]
		// connectOptions = [0, 1, 1, 1]

		for ( var i = 0; i < options.handles; i++ ) {
			// Keep a list of all added handles.
			scope_Handles.push(addOrigin(base, i));
			scope_HandleNumbers[i] = i;
			scope_Connects.push(addConnect(base, connectOptions[i + 1]));
		}
	}

	// Initialize a single slider.
	function addSlider ( target ) {

		// Apply classes and data to the target.
		addClass(target, options.cssClasses.target);

		if ( options.dir === 0 ) {
			addClass(target, options.cssClasses.ltr);
		} else {
			addClass(target, options.cssClasses.rtl);
		}

		if ( options.ort === 0 ) {
			addClass(target, options.cssClasses.horizontal);
		} else {
			addClass(target, options.cssClasses.vertical);
		}

		scope_Base = addNodeTo(target, options.cssClasses.base);
	}


	function addTooltip ( handle, handleNumber ) {

		if ( !options.tooltips[handleNumber] ) {
			return false;
		}

		return addNodeTo(handle.firstChild, options.cssClasses.tooltip);
	}

	// The tooltips option is a shorthand for using the 'update' event.
	function tooltips ( ) {

		// Tooltips are added with options.tooltips in original order.
		var tips = scope_Handles.map(addTooltip);

		bindEvent('update', function(values, handleNumber, unencoded) {

			if ( !tips[handleNumber] ) {
				return;
			}

			var formattedValue = values[handleNumber];

			if ( options.tooltips[handleNumber] !== true ) {
				formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);
			}

			tips[handleNumber].innerHTML = formattedValue;
		});
	}


	function getGroup ( mode, values, stepped ) {

		// Use the range.
		if ( mode === 'range' || mode === 'steps' ) {
			return scope_Spectrum.xVal;
		}

		if ( mode === 'count' ) {

			if ( !values ) {
				throw new Error("noUiSlider (" + VERSION + "): 'values' required for mode 'count'.");
			}

			// Divide 0 - 100 in 'count' parts.
			var spread = ( 100 / (values - 1) );
			var v;
			var i = 0;

			values = [];

			// List these parts and have them handled as 'positions'.
			while ( (v = i++ * spread) <= 100 ) {
				values.push(v);
			}

			mode = 'positions';
		}

		if ( mode === 'positions' ) {

			// Map all percentages to on-range values.
			return values.map(function( value ){
				return scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );
			});
		}

		if ( mode === 'values' ) {

			// If the value must be stepped, it needs to be converted to a percentage first.
			if ( stepped ) {

				return values.map(function( value ){

					// Convert to percentage, apply step, return to value.
					return scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );
				});

			}

			// Otherwise, we can simply use the values.
			return values;
		}
	}

	function generateSpread ( density, mode, group ) {

		function safeIncrement(value, increment) {
			// Avoid floating point variance by dropping the smallest decimal places.
			return (value + increment).toFixed(7) / 1;
		}

		var indexes = {};
		var firstInRange = scope_Spectrum.xVal[0];
		var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1];
		var ignoreFirst = false;
		var ignoreLast = false;
		var prevPct = 0;

		// Create a copy of the group, sort it and filter away all duplicates.
		group = unique(group.slice().sort(function(a, b){ return a - b; }));

		// Make sure the range starts with the first element.
		if ( group[0] !== firstInRange ) {
			group.unshift(firstInRange);
			ignoreFirst = true;
		}

		// Likewise for the last one.
		if ( group[group.length - 1] !== lastInRange ) {
			group.push(lastInRange);
			ignoreLast = true;
		}

		group.forEach(function ( current, index ) {

			// Get the current step and the lower + upper positions.
			var step;
			var i;
			var q;
			var low = current;
			var high = group[index+1];
			var newPct;
			var pctDifference;
			var pctPos;
			var type;
			var steps;
			var realSteps;
			var stepsize;

			// When using 'steps' mode, use the provided steps.
			// Otherwise, we'll step on to the next subrange.
			if ( mode === 'steps' ) {
				step = scope_Spectrum.xNumSteps[ index ];
			}

			// Default to a 'full' step.
			if ( !step ) {
				step = high-low;
			}

			// Low can be 0, so test for false. If high is undefined,
			// we are at the last subrange. Index 0 is already handled.
			if ( low === false || high === undefined ) {
				return;
			}

			// Make sure step isn't 0, which would cause an infinite loop (#654)
			step = Math.max(step, 0.0000001);

			// Find all steps in the subrange.
			for ( i = low; i <= high; i = safeIncrement(i, step) ) {

				// Get the percentage value for the current step,
				// calculate the size for the subrange.
				newPct = scope_Spectrum.toStepping( i );
				pctDifference = newPct - prevPct;

				steps = pctDifference / density;
				realSteps = Math.round(steps);

				// This ratio represents the ammount of percentage-space a point indicates.
				// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.
				// Round the percentage offset to an even number, then divide by two
				// to spread the offset on both sides of the range.
				stepsize = pctDifference/realSteps;

				// Divide all points evenly, adding the correct number to this subrange.
				// Run up to <= so that 100% gets a point, event if ignoreLast is set.
				for ( q = 1; q <= realSteps; q += 1 ) {

					// The ratio between the rounded value and the actual size might be ~1% off.
					// Correct the percentage offset by the number of points
					// per subrange. density = 1 will result in 100 points on the
					// full range, 2 for 50, 4 for 25, etc.
					pctPos = prevPct + ( q * stepsize );
					indexes[pctPos.toFixed(5)] = ['x', 0];
				}

				// Determine the point type.
				type = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );

				// Enforce the 'ignoreFirst' option by overwriting the type for 0.
				if ( !index && ignoreFirst ) {
					type = 0;
				}

				if ( !(i === high && ignoreLast)) {
					// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.
					indexes[newPct.toFixed(5)] = [i, type];
				}

				// Update the percentage count.
				prevPct = newPct;
			}
		});

		return indexes;
	}

	function addMarking ( spread, filterFunc, formatter ) {

		var element = document.createElement('div');
		var out = '';
		var valueSizeClasses = [
			options.cssClasses.valueNormal,
			options.cssClasses.valueLarge,
			options.cssClasses.valueSub
		];
		var markerSizeClasses = [
			options.cssClasses.markerNormal,
			options.cssClasses.markerLarge,
			options.cssClasses.markerSub
		];
		var valueOrientationClasses = [
			options.cssClasses.valueHorizontal,
			options.cssClasses.valueVertical
		];
		var markerOrientationClasses = [
			options.cssClasses.markerHorizontal,
			options.cssClasses.markerVertical
		];

		addClass(element, options.cssClasses.pips);
		addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);

		function getClasses( type, source ){
			var a = source === options.cssClasses.value;
			var orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;
			var sizeClasses = a ? valueSizeClasses : markerSizeClasses;

			return source + ' ' + orientationClasses[options.ort] + ' ' + sizeClasses[type];
		}

		function getTags( offset, source, values ) {
			return 'class="' + getClasses(values[1], source) + '" style="' + options.style + ': ' + offset + '%"';
		}

		function addSpread ( offset, values ){

			// Apply the filter function, if it is set.
			values[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];

			// Add a marker for every point
			out += '<div ' + getTags(offset, options.cssClasses.marker, values) + '></div>';

			// Values are only appended for points marked '1' or '2'.
			if ( values[1] ) {
				out += '<div ' + getTags(offset, options.cssClasses.value, values) + '>' + formatter.to(values[0]) + '</div>';
			}
		}

		// Append all points.
		Object.keys(spread).forEach(function(a){
			addSpread(a, spread[a]);
		});

		element.innerHTML = out;

		return element;
	}

	function pips ( grid ) {

		var mode = grid.mode;
		var density = grid.density || 1;
		var filter = grid.filter || false;
		var values = grid.values || false;
		var stepped = grid.stepped || false;
		var group = getGroup( mode, values, stepped );
		var spread = generateSpread( density, mode, group );
		var format = grid.format || {
			to: Math.round
		};

		return scope_Target.appendChild(addMarking(
			spread,
			filter,
			format
		));
	}


	// Shorthand for base dimensions.
	function baseSize ( ) {
		var rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];
		return options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);
	}

	// Handler for attaching events trough a proxy.
	function attachEvent ( events, element, callback, data ) {

		// This function can be used to 'filter' events to the slider.
		// element is a node, not a nodeList

		var method = function ( e ){

			if ( scope_Target.hasAttribute('disabled') ) {
				return false;
			}

			// Stop if an active 'tap' transition is taking place.
			if ( hasClass(scope_Target, options.cssClasses.tap) ) {
				return false;
			}

			e = fixEvent(e, data.pageOffset);

			// Handle reject of multitouch
			if ( !e ) {
				return false;
			}

			// Ignore right or middle clicks on start #454
			if ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {
				return false;
			}

			// Ignore right or middle clicks on start #454
			if ( data.hover && e.buttons ) {
				return false;
			}

			e.calcPoint = e.points[ options.ort ];

			// Call the event handler with the event [ and additional data ].
			callback ( e, data );
		};

		var methods = [];

		// Bind a closure on the target for every event type.
		events.split(' ').forEach(function( eventName ){
			element.addEventListener(eventName, method, false);
			methods.push([eventName, method]);
		});

		return methods;
	}

	// Provide a clean event with standardized offset values.
	function fixEvent ( e, pageOffset ) {

		// Prevent scrolling and panning on touch events, while
		// attempting to slide. The tap event also depends on this.
		e.preventDefault();

		// Filter the event to register the type, which can be
		// touch, mouse or pointer. Offset changes need to be
		// made on an event specific basis.
		var touch = e.type.indexOf('touch') === 0;
		var mouse = e.type.indexOf('mouse') === 0;
		var pointer = e.type.indexOf('pointer') === 0;
		var x;
		var y;

		// IE10 implemented pointer events with a prefix;
		if ( e.type.indexOf('MSPointer') === 0 ) {
			pointer = true;
		}

		if ( touch ) {

			// Fix bug when user touches with two or more fingers on mobile devices.
			// It's useful when you have two or more sliders on one page,
			// that can be touched simultaneously.
			// #649, #663, #668
			if ( e.touches.length > 1 ) {
				return false;
			}

			// noUiSlider supports one movement at a time,
			// so we can select the first 'changedTouch'.
			x = e.changedTouches[0].pageX;
			y = e.changedTouches[0].pageY;
		}

		pageOffset = pageOffset || getPageOffset();

		if ( mouse || pointer ) {
			x = e.clientX + pageOffset.x;
			y = e.clientY + pageOffset.y;
		}

		e.pageOffset = pageOffset;
		e.points = [x, y];
		e.cursor = mouse || pointer; // Fix #435

		return e;
	}

	// Translate a coordinate in the document to a percentage on the slider
	function calcPointToPercentage ( calcPoint ) {
		var location = calcPoint - offset(scope_Base, options.ort);
		var proposal = ( location * 100 ) / baseSize();
		return options.dir ? 100 - proposal : proposal;
	}

	// Find handle closest to a certain percentage on the slider
	function getClosestHandle ( proposal ) {

		var closest = 100;
		var handleNumber = false;

		scope_Handles.forEach(function(handle, index){

			// Disabled handles are ignored
			if ( handle.hasAttribute('disabled') ) {
				return;
			}

			var pos = Math.abs(scope_Locations[index] - proposal);

			if ( pos < closest ) {
				handleNumber = index;
				closest = pos;
			}
		});

		return handleNumber;
	}

	// Moves handle(s) by a percentage
	// (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])
	function moveHandles ( upward, proposal, locations, handleNumbers ) {

		var proposals = locations.slice();

		var b = [!upward, upward];
		var f = [upward, !upward];

		// Copy handleNumbers so we don't change the dataset
		handleNumbers = handleNumbers.slice();

		// Check to see which handle is 'leading'.
		// If that one can't move the second can't either.
		if ( upward ) {
			handleNumbers.reverse();
		}

		// Step 1: get the maximum percentage that any of the handles can move
		if ( handleNumbers.length > 1 ) {

			handleNumbers.forEach(function(handleNumber, o) {

				var to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o]);

				// Stop if one of the handles can't move.
				if ( to === false ) {
					proposal = 0;
				} else {
					proposal = to - proposals[handleNumber];
					proposals[handleNumber] = to;
				}
			});
		}

		// If using one handle, check backward AND forward
		else {
			b = f = [true];
		}

		var state = false;

		// Step 2: Try to set the handles with the found percentage
		handleNumbers.forEach(function(handleNumber, o) {
			state = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;
		});

		// Step 3: If a handle moved, fire events
		if ( state ) {
			handleNumbers.forEach(function(handleNumber){
				fireEvent('update', handleNumber);
				fireEvent('slide', handleNumber);
			});
		}
	}

	// External event handling
	function fireEvent ( eventName, handleNumber, tap ) {

		Object.keys(scope_Events).forEach(function( targetEvent ) {

			var eventType = targetEvent.split('.')[0];

			if ( eventName === eventType ) {
				scope_Events[targetEvent].forEach(function( callback ) {

					callback.call(
						// Use the slider public API as the scope ('this')
						scope_Self,
						// Return values as array, so arg_1[arg_2] is always valid.
						scope_Values.map(options.format.to),
						// Handle index, 0 or 1
						handleNumber,
						// Unformatted slider values
						scope_Values.slice(),
						// Event is fired by tap, true or false
						tap || false,
						// Left offset of the handle, in relation to the slider
						scope_Locations.slice()
					);
				});
			}
		});
	}


	// Fire 'end' when a mouse or pen leaves the document.
	function documentLeave ( event, data ) {
		if ( event.type === "mouseout" && event.target.nodeName === "HTML" && event.relatedTarget === null ){
			eventEnd (event, data);
		}
	}

	// Handle movement on document for handle and range drag.
	function eventMove ( event, data ) {

		// Fix #498
		// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).
		// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero
		// IE9 has .buttons and .which zero on mousemove.
		// Firefox breaks the spec MDN defines.
		if ( navigator.appVersion.indexOf("MSIE 9") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {
			return eventEnd(event, data);
		}

		// Check if we are moving up or down
		var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);

		// Convert the movement into a percentage of the slider width/height
		var proposal = (movement * 100) / data.baseSize;

		moveHandles(movement > 0, proposal, data.locations, data.handleNumbers);
	}

	// Unbind move events on document, call callbacks.
	function eventEnd ( event, data ) {

		// The handle is no longer active, so remove the class.
		if ( scope_ActiveHandle ) {
			removeClass(scope_ActiveHandle, options.cssClasses.active);
			scope_ActiveHandle = false;
		}

		// Remove cursor styles and text-selection events bound to the body.
		if ( event.cursor ) {
			document.body.style.cursor = '';
			document.body.removeEventListener('selectstart', document.body.noUiListener);
		}

		// Unbind the move and end events, which are added on 'start'.
		document.documentElement.noUiListeners.forEach(function( c ) {
			document.documentElement.removeEventListener(c[0], c[1]);
		});

		// Remove dragging class.
		removeClass(scope_Target, options.cssClasses.drag);

		setZindex();

		data.handleNumbers.forEach(function(handleNumber){
			fireEvent('set', handleNumber);
			fireEvent('change', handleNumber);
			fireEvent('end', handleNumber);
		});
	}

	// Bind move events on document.
	function eventStart ( event, data ) {

		if ( data.handleNumbers.length === 1 ) {

			var handle = scope_Handles[data.handleNumbers[0]];

			// Ignore 'disabled' handles
			if ( handle.hasAttribute('disabled') ) {
				return false;
			}

			// Mark the handle as 'active' so it can be styled.
			scope_ActiveHandle = handle.children[0];
			addClass(scope_ActiveHandle, options.cssClasses.active);
		}

		// Fix #551, where a handle gets selected instead of dragged.
		event.preventDefault();

		// A drag should never propagate up to the 'tap' event.
		event.stopPropagation();

		// Attach the move and end events.
		var moveEvent = attachEvent(actions.move, document.documentElement, eventMove, {
			startCalcPoint: event.calcPoint,
			baseSize: baseSize(),
			pageOffset: event.pageOffset,
			handleNumbers: data.handleNumbers,
			buttonsProperty: event.buttons,
			locations: scope_Locations.slice()
		});

		var endEvent = attachEvent(actions.end, document.documentElement, eventEnd, {
			handleNumbers: data.handleNumbers
		});

		var outEvent = attachEvent("mouseout", document.documentElement, documentLeave, {
			handleNumbers: data.handleNumbers
		});

		document.documentElement.noUiListeners = moveEvent.concat(endEvent, outEvent);

		// Text selection isn't an issue on touch devices,
		// so adding cursor styles can be skipped.
		if ( event.cursor ) {

			// Prevent the 'I' cursor and extend the range-drag cursor.
			document.body.style.cursor = getComputedStyle(event.target).cursor;

			// Mark the target with a dragging state.
			if ( scope_Handles.length > 1 ) {
				addClass(scope_Target, options.cssClasses.drag);
			}

			var f = function(){
				return false;
			};

			document.body.noUiListener = f;

			// Prevent text selection when dragging the handles.
			document.body.addEventListener('selectstart', f, false);
		}

		data.handleNumbers.forEach(function(handleNumber){
			fireEvent('start', handleNumber);
		});
	}

	// Move closest handle to tapped location.
	function eventTap ( event ) {

		// The tap event shouldn't propagate up
		event.stopPropagation();

		var proposal = calcPointToPercentage(event.calcPoint);
		var handleNumber = getClosestHandle(proposal);

		// Tackle the case that all handles are 'disabled'.
		if ( handleNumber === false ) {
			return false;
		}

		// Flag the slider as it is now in a transitional state.
		// Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.
		if ( !options.events.snap ) {
			addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
		}

		setHandle(handleNumber, proposal, true, true);

		setZindex();

		fireEvent('slide', handleNumber, true);
		fireEvent('set', handleNumber, true);
		fireEvent('change', handleNumber, true);
		fireEvent('update', handleNumber, true);

		if ( options.events.snap ) {
			eventStart(event, { handleNumbers: [handleNumber] });
		}
	}

	// Fires a 'hover' event for a hovered mouse/pen position.
	function eventHover ( event ) {

		var proposal = calcPointToPercentage(event.calcPoint);

		var to = scope_Spectrum.getStep(proposal);
		var value = scope_Spectrum.fromStepping(to);

		Object.keys(scope_Events).forEach(function( targetEvent ) {
			if ( 'hover' === targetEvent.split('.')[0] ) {
				scope_Events[targetEvent].forEach(function( callback ) {
					callback.call( scope_Self, value );
				});
			}
		});
	}

	// Attach events to several slider parts.
	function bindSliderEvents ( behaviour ) {

		// Attach the standard drag event to the handles.
		if ( !behaviour.fixed ) {

			scope_Handles.forEach(function( handle, index ){

				// These events are only bound to the visual handle
				// element, not the 'real' origin element.
				attachEvent ( actions.start, handle.children[0], eventStart, {
					handleNumbers: [index]
				});
			});
		}

		// Attach the tap event to the slider base.
		if ( behaviour.tap ) {
			attachEvent (actions.start, scope_Base, eventTap, {});
		}

		// Fire hover events
		if ( behaviour.hover ) {
			attachEvent (actions.move, scope_Base, eventHover, { hover: true });
		}

		// Make the range draggable.
		if ( behaviour.drag ){

			scope_Connects.forEach(function( connect, index ){

				if ( connect === false || index === 0 || index === scope_Connects.length - 1 ) {
					return;
				}

				var handleBefore = scope_Handles[index - 1];
				var handleAfter = scope_Handles[index];
				var eventHolders = [connect];

				addClass(connect, options.cssClasses.draggable);

				// When the range is fixed, the entire range can
				// be dragged by the handles. The handle in the first
				// origin will propagate the start event upward,
				// but it needs to be bound manually on the other.
				if ( behaviour.fixed ) {
					eventHolders.push(handleBefore.children[0]);
					eventHolders.push(handleAfter.children[0]);
				}

				eventHolders.forEach(function( eventHolder ) {
					attachEvent ( actions.start, eventHolder, eventStart, {
						handles: [handleBefore, handleAfter],
						handleNumbers: [index - 1, index]
					});
				});
			});
		}
	}


	// Split out the handle positioning logic so the Move event can use it, too
	function checkHandlePosition ( reference, handleNumber, to, lookBackward, lookForward ) {

		// For sliders with multiple handles, limit movement to the other handle.
		// Apply the margin option by adding it to the handle positions.
		if ( scope_Handles.length > 1 ) {

			if ( lookBackward && handleNumber > 0 ) {
				to = Math.max(to, reference[handleNumber - 1] + options.margin);
			}

			if ( lookForward && handleNumber < scope_Handles.length - 1 ) {
				to = Math.min(to, reference[handleNumber + 1] - options.margin);
			}
		}

		// The limit option has the opposite effect, limiting handles to a
		// maximum distance from another. Limit must be > 0, as otherwise
		// handles would be unmoveable.
		if ( scope_Handles.length > 1 && options.limit ) {

			if ( lookBackward && handleNumber > 0 ) {
				to = Math.min(to, reference[handleNumber - 1] + options.limit);
			}

			if ( lookForward && handleNumber < scope_Handles.length - 1 ) {
				to = Math.max(to, reference[handleNumber + 1] - options.limit);
			}
		}

		// The padding option keeps the handles a certain distance from the
		// edges of the slider. Padding must be > 0.
		if ( options.padding ) {

			if ( handleNumber === 0 ) {
				to = Math.max(to, options.padding);
			}

			if ( handleNumber === scope_Handles.length - 1 ) {
				to = Math.min(to, 100 - options.padding);
			}
		}

		to = scope_Spectrum.getStep(to);

		// Limit percentage to the 0 - 100 range
		to = limit(to);

		// Return false if handle can't move
		if ( to === reference[handleNumber] ) {
			return false;
		}

		return to;
	}

	function toPct ( pct ) {
		return pct + '%';
	}

	// Updates scope_Locations and scope_Values, updates visual state
	function updateHandlePosition ( handleNumber, to ) {

		// Update locations.
		scope_Locations[handleNumber] = to;

		// Convert the value to the slider stepping/range.
		scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);

		// Called synchronously or on the next animationFrame
		var stateUpdate = function() {
			scope_Handles[handleNumber].style[options.style] = toPct(to);
			updateConnect(handleNumber);
			updateConnect(handleNumber + 1);
		};

		// Set the handle to the new position.
		// Use requestAnimationFrame for efficient painting.
		// No significant effect in Chrome, Edge sees dramatic performace improvements.
		// Option to disable is useful for unit tests, and single-step debugging.
		if ( window.requestAnimationFrame && options.useRequestAnimationFrame ) {
			window.requestAnimationFrame(stateUpdate);
		} else {
			stateUpdate();
		}
	}

	function setZindex ( ) {

		scope_HandleNumbers.forEach(function(handleNumber){
			// Handles before the slider middle are stacked later = higher,
			// Handles after the middle later is lower
			// [[7] [8] .......... | .......... [5] [4]
			var dir = (scope_Locations[handleNumber] > 50 ? -1 : 1);
			var zIndex = 3 + (scope_Handles.length + (dir * handleNumber));
			scope_Handles[handleNumber].childNodes[0].style.zIndex = zIndex;
		});
	}

	// Test suggested values and apply margin, step.
	function setHandle ( handleNumber, to, lookBackward, lookForward ) {

		to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward);

		if ( to === false ) {
			return false;
		}

		updateHandlePosition(handleNumber, to);

		return true;
	}

	// Updates style attribute for connect nodes
	function updateConnect ( index ) {

		// Skip connects set to false
		if ( !scope_Connects[index] ) {
			return;
		}

		var l = 0;
		var h = 100;

		if ( index !== 0 ) {
			l = scope_Locations[index - 1];
		}

		if ( index !== scope_Connects.length - 1 ) {
			h = scope_Locations[index];
		}

		scope_Connects[index].style[options.style] = toPct(l);
		scope_Connects[index].style[options.styleOposite] = toPct(100 - h);
	}

	// ...
	function setValue ( to, handleNumber ) {

		// Setting with null indicates an 'ignore'.
		// Inputting 'false' is invalid.
		if ( to === null || to === false ) {
			return;
		}

		// If a formatted number was passed, attemt to decode it.
		if ( typeof to === 'number' ) {
			to = String(to);
		}

		to = options.format.from(to);

		// Request an update for all links if the value was invalid.
		// Do so too if setting the handle fails.
		if ( to !== false && !isNaN(to) ) {
			setHandle(handleNumber, scope_Spectrum.toStepping(to), false, false);
		}
	}

	// Set the slider value.
	function valueSet ( input, fireSetEvent ) {

		var values = asArray(input);
		var isInit = scope_Locations[0] === undefined;

		// Event fires by default
		fireSetEvent = (fireSetEvent === undefined ? true : !!fireSetEvent);

		values.forEach(setValue);

		// Animation is optional.
		// Make sure the initial values were set before using animated placement.
		if ( options.animate && !isInit ) {
			addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
		}

		// Now that all base values are set, apply constraints
		scope_HandleNumbers.forEach(function(handleNumber){
			setHandle(handleNumber, scope_Locations[handleNumber], true, false);
		});

		setZindex();

		scope_HandleNumbers.forEach(function(handleNumber){

			fireEvent('update', handleNumber);

			// Fire the event only for handles that received a new value, as per #579
			if ( values[handleNumber] !== null && fireSetEvent ) {
				fireEvent('set', handleNumber);
			}
		});
	}

	// Reset slider to initial values
	function valueReset ( fireSetEvent ) {
		valueSet(options.start, fireSetEvent);
	}

	// Get the slider value.
	function valueGet ( ) {

		var values = scope_Values.map(options.format.to);

		// If only one handle is used, return a single value.
		if ( values.length === 1 ){
			return values[0];
		}

		return values;
	}

	// Removes classes from the root and empties it.
	function destroy ( ) {

		for ( var key in options.cssClasses ) {
			if ( !options.cssClasses.hasOwnProperty(key) ) { continue; }
			removeClass(scope_Target, options.cssClasses[key]);
		}

		while (scope_Target.firstChild) {
			scope_Target.removeChild(scope_Target.firstChild);
		}

		delete scope_Target.noUiSlider;
	}

	// Get the current step size for the slider.
	function getCurrentStep ( ) {

		// Check all locations, map them to their stepping point.
		// Get the step point, then find it in the input list.
		return scope_Locations.map(function( location, index ){

			var nearbySteps = scope_Spectrum.getNearbySteps( location );
			var value = scope_Values[index];
			var increment = nearbySteps.thisStep.step;
			var decrement = null;

			// If the next value in this step moves into the next step,
			// the increment is the start of the next step - the current value
			if ( increment !== false ) {
				if ( value + increment > nearbySteps.stepAfter.startValue ) {
					increment = nearbySteps.stepAfter.startValue - value;
				}
			}


			// If the value is beyond the starting point
			if ( value > nearbySteps.thisStep.startValue ) {
				decrement = nearbySteps.thisStep.step;
			}

			else if ( nearbySteps.stepBefore.step === false ) {
				decrement = false;
			}

			// If a handle is at the start of a step, it always steps back into the previous step first
			else {
				decrement = value - nearbySteps.stepBefore.highestStep;
			}


			// Now, if at the slider edges, there is not in/decrement
			if ( location === 100 ) {
				increment = null;
			}

			else if ( location === 0 ) {
				decrement = null;
			}

			// As per #391, the comparison for the decrement step can have some rounding issues.
			var stepDecimals = scope_Spectrum.countStepDecimals();

			// Round per #391
			if ( increment !== null && increment !== false ) {
				increment = Number(increment.toFixed(stepDecimals));
			}

			if ( decrement !== null && decrement !== false ) {
				decrement = Number(decrement.toFixed(stepDecimals));
			}

			return [decrement, increment];
		});
	}

	// Attach an event to this slider, possibly including a namespace
	function bindEvent ( namespacedEvent, callback ) {
		scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];
		scope_Events[namespacedEvent].push(callback);

		// If the event bound is 'update,' fire it immediately for all handles.
		if ( namespacedEvent.split('.')[0] === 'update' ) {
			scope_Handles.forEach(function(a, index){
				fireEvent('update', index);
			});
		}
	}

	// Undo attachment of event
	function removeEvent ( namespacedEvent ) {

		var event = namespacedEvent && namespacedEvent.split('.')[0];
		var namespace = event && namespacedEvent.substring(event.length);

		Object.keys(scope_Events).forEach(function( bind ){

			var tEvent = bind.split('.')[0],
				tNamespace = bind.substring(tEvent.length);

			if ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {
				delete scope_Events[bind];
			}
		});
	}

	// Updateable: margin, limit, padding, step, range, animate, snap
	function updateOptions ( optionsToUpdate, fireSetEvent ) {

		// Spectrum is created using the range, snap, direction and step options.
		// 'snap' and 'step' can be updated, 'direction' cannot, due to event binding.
		// If 'snap' and 'step' are not passed, they should remain unchanged.
		var v = valueGet();

		var updateAble = ['margin', 'limit', 'padding', 'range', 'animate', 'snap', 'step', 'format'];

		// Only change options that we're actually passed to update.
		updateAble.forEach(function(name){
			if ( optionsToUpdate[name] !== undefined ) {
				originalOptions[name] = optionsToUpdate[name];
			}
		});

		var newOptions = testOptions(originalOptions);

		// Load new options into the slider state
		updateAble.forEach(function(name){
			if ( optionsToUpdate[name] !== undefined ) {
				options[name] = newOptions[name];
			}
		});

		// Save current spectrum direction as testOptions in testRange call
		// doesn't rely on current direction
		newOptions.spectrum.direction = scope_Spectrum.direction;
		scope_Spectrum = newOptions.spectrum;

		// Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)
		options.margin = newOptions.margin;
		options.limit = newOptions.limit;
		options.padding = newOptions.padding;

		// Invalidate the current positioning so valueSet forces an update.
		scope_Locations = [];
		valueSet(optionsToUpdate.start || v, fireSetEvent);
	}

	// Throw an error if the slider was already initialized.
	if ( scope_Target.noUiSlider ) {
		throw new Error("noUiSlider (" + VERSION + "): Slider was already initialized.");
	}

	// Create the base element, initialise HTML and set classes.
	// Add handles and connect elements.
	addSlider(scope_Target);
	addElements(options.connect, scope_Base);

	scope_Self = {
		destroy: destroy,
		steps: getCurrentStep,
		on: bindEvent,
		off: removeEvent,
		get: valueGet,
		set: valueSet,
		reset: valueReset,
		// Exposed for unit testing, don't use this in your application.
		__moveHandles: function(a, b, c) { moveHandles(a, b, scope_Locations, c); },
		options: originalOptions, // Issue #600, #678
		updateOptions: updateOptions,
		target: scope_Target, // Issue #597
		pips: pips // Issue #594
	};

	// Attach user events.
	bindSliderEvents(options.events);

	// Use the public value method to set the start values.
	valueSet(options.start);

	if ( options.pips ) {
		pips(options.pips);
	}

	if ( options.tooltips ) {
		tooltips();
	}

	return scope_Self;

}


	// Run the standard initializer
	function initialize ( target, originalOptions ) {

		if ( !target.nodeName ) {
			throw new Error("noUiSlider (" + VERSION + "): create requires a single element.");
		}

		// Test the options and create the slider environment;
		var options = testOptions( originalOptions, target );
		var api = closure( target, options, originalOptions );

		target.noUiSlider = api;

		return api;
	}

	// Use an object instead of a function for future expansibility;
	return {
		version: VERSION,
		create: initialize
	};

}));

/***/ }),
/* 1151 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1152);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(1045)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../css-loader/index.js!../../sass-loader/lib/loader.js!./nouislider.css", function() {
			var newContent = require("!!../../css-loader/index.js!../../sass-loader/lib/loader.js!./nouislider.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 1152 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1044)();
// imports


// module
exports.push([module.i, "/*! nouislider - 9.2.0 - 2017-01-11 10:35:35 */\n/* Functional styling;\n * These styles are required for noUiSlider to function.\n * You don't need to change these rules to apply your design.\n */\n.noUi-target,\n.noUi-target * {\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-user-select: none;\n  -ms-touch-action: none;\n  touch-action: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.noUi-target {\n  position: relative;\n  direction: ltr; }\n\n.noUi-base {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n  /* Fix 401 */ }\n\n.noUi-connect {\n  position: absolute;\n  right: 0;\n  top: 0;\n  left: 0;\n  bottom: 0; }\n\n.noUi-origin {\n  position: absolute;\n  height: 0;\n  width: 0; }\n\n.noUi-handle {\n  position: relative;\n  z-index: 1; }\n\n.noUi-state-tap .noUi-connect,\n.noUi-state-tap .noUi-origin {\n  -webkit-transition: top 0.3s, right 0.3s, bottom 0.3s, left 0.3s;\n  transition: top 0.3s, right 0.3s, bottom 0.3s, left 0.3s; }\n\n.noUi-state-drag * {\n  cursor: inherit !important; }\n\n/* Painting and performance;\n * Browsers can paint handles in their own layer.\n */\n.noUi-base,\n.noUi-handle {\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0); }\n\n/* Slider size and handle placement;\n */\n.noUi-horizontal {\n  height: 18px; }\n\n.noUi-horizontal .noUi-handle {\n  width: 34px;\n  height: 28px;\n  left: -17px;\n  top: -6px; }\n\n.noUi-vertical {\n  width: 18px; }\n\n.noUi-vertical .noUi-handle {\n  width: 28px;\n  height: 34px;\n  left: -6px;\n  top: -17px; }\n\n/* Styling;\n */\n.noUi-target {\n  background: #FAFAFA;\n  border-radius: 4px;\n  border: 1px solid #D3D3D3;\n  box-shadow: inset 0 1px 1px #F0F0F0, 0 3px 6px -5px #BBB; }\n\n.noUi-connect {\n  background: #3FB8AF;\n  box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);\n  -webkit-transition: background 450ms;\n  transition: background 450ms; }\n\n/* Handles and cursors;\n */\n.noUi-draggable {\n  cursor: ew-resize; }\n\n.noUi-vertical .noUi-draggable {\n  cursor: ns-resize; }\n\n.noUi-handle {\n  border: 1px solid #D9D9D9;\n  border-radius: 3px;\n  background: #FFF;\n  cursor: default;\n  box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #EBEBEB, 0 3px 6px -3px #BBB; }\n\n.noUi-active {\n  box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB; }\n\n/* Handle stripes;\n */\n.noUi-handle:before,\n.noUi-handle:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  height: 14px;\n  width: 1px;\n  background: #E8E7E6;\n  left: 14px;\n  top: 6px; }\n\n.noUi-handle:after {\n  left: 17px; }\n\n.noUi-vertical .noUi-handle:before,\n.noUi-vertical .noUi-handle:after {\n  width: 14px;\n  height: 1px;\n  left: 6px;\n  top: 14px; }\n\n.noUi-vertical .noUi-handle:after {\n  top: 17px; }\n\n/* Disabled state;\n */\n[disabled] .noUi-connect {\n  background: #B8B8B8; }\n\n[disabled].noUi-target,\n[disabled].noUi-handle,\n[disabled] .noUi-handle {\n  cursor: not-allowed; }\n\n/* Base;\n *\n */\n.noUi-pips,\n.noUi-pips * {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.noUi-pips {\n  position: absolute;\n  color: #999; }\n\n/* Values;\n *\n */\n.noUi-value {\n  position: absolute;\n  text-align: center; }\n\n.noUi-value-sub {\n  color: #ccc;\n  font-size: 10px; }\n\n/* Markings;\n *\n */\n.noUi-marker {\n  position: absolute;\n  background: #CCC; }\n\n.noUi-marker-sub {\n  background: #AAA; }\n\n.noUi-marker-large {\n  background: #AAA; }\n\n/* Horizontal layout;\n *\n */\n.noUi-pips-horizontal {\n  padding: 10px 0;\n  height: 80px;\n  top: 100%;\n  left: 0;\n  width: 100%; }\n\n.noUi-value-horizontal {\n  -webkit-transform: translate3d(-50%, 50%, 0);\n  transform: translate3d(-50%, 50%, 0); }\n\n.noUi-marker-horizontal.noUi-marker {\n  margin-left: -1px;\n  width: 2px;\n  height: 5px; }\n\n.noUi-marker-horizontal.noUi-marker-sub {\n  height: 10px; }\n\n.noUi-marker-horizontal.noUi-marker-large {\n  height: 15px; }\n\n/* Vertical layout;\n *\n */\n.noUi-pips-vertical {\n  padding: 0 10px;\n  height: 100%;\n  top: 0;\n  left: 100%; }\n\n.noUi-value-vertical {\n  -webkit-transform: translate3d(0, 50%, 0);\n  transform: translate3d(0, 50%, 0);\n  padding-left: 25px; }\n\n.noUi-marker-vertical.noUi-marker {\n  width: 5px;\n  height: 2px;\n  margin-top: -1px; }\n\n.noUi-marker-vertical.noUi-marker-sub {\n  width: 10px; }\n\n.noUi-marker-vertical.noUi-marker-large {\n  width: 15px; }\n\n.noUi-tooltip {\n  display: block;\n  position: absolute;\n  border: 1px solid #D9D9D9;\n  border-radius: 3px;\n  background: #fff;\n  color: #000;\n  padding: 5px;\n  text-align: center; }\n\n.noUi-horizontal .noUi-tooltip {\n  -webkit-transform: translate(-50%, 0);\n  transform: translate(-50%, 0);\n  left: 50%;\n  bottom: 120%; }\n\n.noUi-vertical .noUi-tooltip {\n  -webkit-transform: translate(0, -50%);\n  transform: translate(0, -50%);\n  top: 50%;\n  right: 120%; }\n", ""]);

// exports


/***/ }),
/* 1153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var bathroom = [{ name: '0+', value: '0' }, { name: '1+', value: '1' }, { name: '2+', value: '2' }, { name: '3+', value: '3' }, { name: '4+', value: '4' }, { name: '5+', value: '5' }, { name: '6+', value: '6' }];

var bedroom = [{ name: '0+', value: '0' }, { name: '1+', value: '1' }, { name: '2+', value: '2' }, { name: '3+', value: '3' }, { name: '4+', value: '4' }, { name: '5+', value: '5' }, { name: '6+', value: '6' }];

var defaultPropertyFilters = {
  bedrooms: '0',
  bathrooms: '0',
  price: {
    start: 'No Min',
    to: 'No Max'
  },
  sqft: {
    start: 'No Min',
    to: 'No Max'
  },
  acres: {
    start: 'No Min',
    to: 'No Max'
  }
};
exports.bathroom = bathroom;
exports.bedroom = bedroom;
exports.defaultPropertyFilters = defaultPropertyFilters;

/***/ }),
/* 1154 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(236),
    arrayIncludes = __webpack_require__(401),
    arrayIncludesWith = __webpack_require__(402),
    arrayMap = __webpack_require__(92),
    baseUnary = __webpack_require__(118),
    cacheHas = __webpack_require__(237);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;


/***/ }),
/* 1155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Slider = __webpack_require__(1077);

var _Slider2 = _interopRequireDefault(_Slider);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sliderFormatter = function sliderFormatter(min, max) {
  return function () {
    return {
      to: function to(val) {
        var returnVal = void 0;
        if (val === min) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT;
        } else if (val === max) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT;
        } else {
          returnVal = _Util2.default.formatSQFTValue(val);
        }
        return returnVal;
      },
      from: function from(val) {
        return val;
      }
    };
  };
};

var SQFT = function (_Component) {
  _inherits(SQFT, _Component);

  function SQFT(props) {
    _classCallCheck(this, SQFT);

    var _this = _possibleConstructorReturn(this, (SQFT.__proto__ || Object.getPrototypeOf(SQFT)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(SQFT, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          saleType = _props.saleType,
          start = _props.start,
          to = _props.to;

      var defaults = {
        Buy: {
          start: 1000,
          to: 4000
        },
        Rent: {
          start: 1000,
          to: 4000
        }
      };
      var formatter = void 0;
      var min = void 0;
      var max = void 0;
      var step = void 0;
      if (saleType === 'Buy' || saleType === 'Rent') {
        step = 500;
        min = 500;
        max = 10000;
        formatter = sliderFormatter(min, max);
      } else if (saleType === 'Commercial') {
        step = 1000;
        min = 1000;
        max = 50000;
        formatter = sliderFormatter(min, max);
      }
      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + "noUislider-container" },
        _react2.default.createElement(_Slider2.default, { formatter: formatter, max: max, min: min, start: start || defaults[saleType].start, step: step, to: to || defaults[saleType].to, handleOnClick: this.props.handleOnClick })
      );
    }
  }]);

  return SQFT;
}(_react.Component);

SQFT.propTypes = {
  saleType: _propTypes2.default.string,
  start: _propTypes2.default.any,
  to: _propTypes2.default.any,
  handleOnClick: _propTypes2.default.func
};
;

exports.default = SQFT;

/***/ }),
/* 1156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Slider = __webpack_require__(1077);

var _Slider2 = _interopRequireDefault(_Slider);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sliderFormatter = function sliderFormatter(min, max) {
  return function () {
    return {
      to: function to(val) {
        var returnVal = void 0;
        if (val === min) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT;
        } else if (val === max) {
          returnVal = _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT;
        } else {
          returnVal = _Util2.default.formatAcresValue(val);
        }
        return returnVal;
      },
      from: function from(val) {
        return val;
      }
    };
  };
};

var LotSize = function (_Component) {
  _inherits(LotSize, _Component);

  function LotSize(props) {
    _classCallCheck(this, LotSize);

    var _this = _possibleConstructorReturn(this, (LotSize.__proto__ || Object.getPrototypeOf(LotSize)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(LotSize, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          saleType = _props.saleType,
          start = _props.start,
          to = _props.to;


      var defaults = {
        Commercial: {
          start: 1,
          to: 3
        },
        Buy: {
          start: 1,
          to: 3
        },
        Rent: {
          start: 1,
          to: 3
        },
        Land: {
          start: 1,
          to: 3
        }
      };
      var formatter = void 0;
      var min = void 0;
      var max = void 0;
      var step = void 0;
      if (saleType === 'Buy' || saleType === 'Rent' || saleType === 'Commercial') {
        step = 0.25;
        min = 0.25;
        max = 10;
        formatter = sliderFormatter(min, max);
      } else if (saleType === 'Land') {
        step = 10;
        min = 10;
        max = 400;
        formatter = sliderFormatter(min, max);
      }
      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + "noUislider-container" },
        _react2.default.createElement(_Slider2.default, { allowDecimalPlaces: true, formatter: formatter, max: max, min: min, start: start || defaults[saleType].start, step: step, to: to || defaults[saleType].to, handleOnClick: this.props.handleOnClick })
      );
    }
  }]);

  return LotSize;
}(_react.Component);

LotSize.propTypes = {
  saleType: _propTypes2.default.string,
  start: _propTypes2.default.any,
  to: _propTypes2.default.any,
  handleOnClick: _propTypes2.default.func
};
;

exports.default = LotSize;

/***/ }),
/* 1157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(41);

var _qs = __webpack_require__(380);

var _qs2 = _interopRequireDefault(_qs);

var _urijs = __webpack_require__(230);

var _urijs2 = _interopRequireDefault(_urijs);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _pickBy = __webpack_require__(1158);

var _pickBy2 = _interopRequireDefault(_pickBy);

var _index = __webpack_require__(52);

var _iconResidentialHouse = __webpack_require__(1106);

var _iconResidentialHouse2 = _interopRequireDefault(_iconResidentialHouse);

var _iconResidentialApartment = __webpack_require__(1107);

var _iconResidentialApartment2 = _interopRequireDefault(_iconResidentialApartment);

var _iconCommercialRetail = __webpack_require__(1108);

var _iconCommercialRetail2 = _interopRequireDefault(_iconCommercialRetail);

var _iconLandWooded = __webpack_require__(1109);

var _iconLandWooded2 = _interopRequireDefault(_iconLandWooded);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, ownProps) {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  return {
    changeSearchType: function changeSearchType(searchType) {
      dispatch((0, _index.setSearchType)(searchType));
    }
  };
};

var SaleTypeHeaderSelection = function (_Component) {
  _inherits(SaleTypeHeaderSelection, _Component);

  function SaleTypeHeaderSelection() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SaleTypeHeaderSelection);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SaleTypeHeaderSelection.__proto__ || Object.getPrototypeOf(SaleTypeHeaderSelection)).call.apply(_ref, [this].concat(args))), _this), _this.handleSaleSelectionItemClick = function (currentURL, termFilters, location, searchType, propertyTypeOptions, historyPush) {
      var searchOptions = _Util2.default.getSearchDataFromPropertyTypeOptionsBySearchType(searchType, propertyTypeOptions);
      if (searchOptions.error) {
        // TODO: better handle these types of error
        console.log('%c ' + searchOptions.msg, 'color: #ff0000');
        return;
      }

      var property_type = searchOptions.property_type,
          sale_type = searchOptions.sale_type;


      var params = [];
      var searchTypeArrayParams = _Util2.default.createSearchTypeArrayParams(property_type, sale_type);
      params = params.concat(searchTypeArrayParams);
      if (location) {
        params.push({
          key: location.term_type.replace('location_', ''),
          values: [location.slug]
        });
      } else if (termFilters) {
        params = params.concat(termFilters.map(function (d) {
          return { key: d.term, values: [d.slug] };
        }));
      }
      var searchURL = _Util2.default.createSearchURL('/search', params);
      historyPush(searchURL);
      _this.props.closePanel();

      _this.props.changeSearchType(searchType);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SaleTypeHeaderSelection, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          historyPush = _props.historyPush,
          location = _props.location,
          open = _props.open,
          propertyTypeOptions = _props.propertyTypeOptions,
          termFilters = _props.termFilters;


      var containerClasses = _lib.Lib.THEME_CLASSES_PREFIX + 'sale-type-selection hidden-sm-down';
      if (!open) {
        containerClasses += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'remove';
      }
      return _react2.default.createElement(
        'div',
        { className: containerClasses },
        _react2.default.createElement(
          'div',
          { className: 'container d-flex justify-content-center' },
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'selection-container' },
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(event) {
                  event.preventDefault();
                  _this2.handleSaleSelectionItemClick(_this2.props.currentURL, termFilters, location, 'Buy', propertyTypeOptions, historyPush);
                } },
              _react2.default.createElement(_iconResidentialHouse2.default, null),
              _react2.default.createElement(
                'span',
                null,
                'Buy'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'selection-container' },
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(event) {
                  event.preventDefault();
                  _this2.handleSaleSelectionItemClick(_this2.props.currentURL, termFilters, location, 'Rent', propertyTypeOptions, historyPush);
                } },
              _react2.default.createElement(_iconResidentialApartment2.default, null),
              _react2.default.createElement(
                'span',
                null,
                'Rent'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'selection-container' },
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(event) {
                  event.preventDefault();
                  _this2.handleSaleSelectionItemClick(_this2.props.currentURL, termFilters, location, 'Commercial', propertyTypeOptions, historyPush);
                } },
              _react2.default.createElement(_iconCommercialRetail2.default, null),
              _react2.default.createElement(
                'span',
                null,
                'Commercial'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'selection-container' },
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(event) {
                  event.preventDefault();
                  _this2.handleSaleSelectionItemClick(_this2.props.currentURL, termFilters, location, 'Land', propertyTypeOptions, historyPush);
                } },
              _react2.default.createElement(_iconLandWooded2.default, null),
              _react2.default.createElement(
                'span',
                null,
                'Land'
              )
            )
          )
        )
      );
    }
  }]);

  return SaleTypeHeaderSelection;
}(_react.Component);

SaleTypeHeaderSelection.propTypes = {
  historyPush: _propTypes2.default.func.isRequired,
  open: _propTypes2.default.bool.isRequired,
  closePanel: _propTypes2.default.func.isRequired,
  location: _propTypes2.default.object,
  termFilters: _propTypes2.default.array
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SaleTypeHeaderSelection);

/***/ }),
/* 1158 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(92),
    baseIteratee = __webpack_require__(114),
    basePickBy = __webpack_require__(1159),
    getAllKeysIn = __webpack_require__(1079);

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;


/***/ }),
/* 1159 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(231),
    baseSet = __webpack_require__(1160),
    castPath = __webpack_require__(228);

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),
/* 1160 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(1069),
    castPath = __webpack_require__(228),
    isIndex = __webpack_require__(157),
    isObject = __webpack_require__(60),
    toKey = __webpack_require__(115);

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),
/* 1161 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(60),
    isPrototype = __webpack_require__(229),
    nativeKeysIn = __webpack_require__(1162);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 1162 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 1163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = __webpack_require__(52);

var _capitalize = __webpack_require__(1076);

var _capitalize2 = _interopRequireDefault(_capitalize);

var _difference = __webpack_require__(1110);

var _difference2 = _interopRequireDefault(_difference);

var _FilterTag = __webpack_require__(1105);

var _FilterTag2 = _interopRequireDefault(_FilterTag);

var _lib = __webpack_require__(3);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(63);

var _reactRedux = __webpack_require__(41);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _qs = __webpack_require__(380);

var _qs2 = _interopRequireDefault(_qs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isMobileView = function isMobileView() {
  return window.innerWidth < _lib.Lib.MOBILE_WIDTH;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  return {

    openPropertiesModal: function openPropertiesModal(open) {
      dispatch((0, _index.openPropertiesModal)(open));
    },

    openLocationModal: function openLocationModal(terms) {
      dispatch((0, _index.openLocationModal)(true, terms));
    }
  };
};

var searchFilters = function (_Component) {
  _inherits(searchFilters, _Component);

  function searchFilters(props) {
    _classCallCheck(this, searchFilters);

    var _this = _possibleConstructorReturn(this, (searchFilters.__proto__ || Object.getPrototypeOf(searchFilters)).call(this, props));

    _this.handleBathroomsFilterRemove = function () {
      var filters = Object.assign({}, _this.props.filters);
      delete filters['bathrooms'];
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleBedroomsFilterRemove = function () {
      var filters = Object.assign({}, _this.props.filters);
      delete filters['bedrooms'];
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleDeleteSubPropertyTypeFilter = function (slug) {
      var filters = Object.assign({}, _this.props.filters);
      filters['property_subtype'] = filters['property_subtype'].filter(function (d) {
        return d.slug !== slug;
      });
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleSaleTypeRemove = function (saleType) {
      var filters = Object.assign({}, _this.props.filters);
      filters['sale_type'] = filters['sale_type'].filter(function (d) {
        return d !== saleType;
      });
      if (!filters['sale_type'].length) {
        delete filters['sale_type'];
      }
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleLotSizefilterRemove = function () {
      var filters = Object.assign({}, _this.props.filters);
      delete filters['acres'];
      _this.updateURLWithQueryParam(filters);
    };

    _this.handlePriceFilterRemove = function () {
      var filters = Object.assign({}, _this.props.filters);
      delete filters['price'];
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleSQFTFilterRemove = function () {
      var filters = Object.assign({}, _this.props.filters);
      delete filters['sqft'];
      _this.updateURLWithQueryParam(filters);
    };

    _this.handleTermFilterRemove = function (termFilter) {
      var filters = Object.assign({}, _this.props.filters);
      var currentTermFilter = filters.term;
      var updatedTermFilter = currentTermFilter.filter(function (t) {
        return !(0, _isEqual2.default)(t, termFilter);
      });
      filters['term'] = updatedTermFilter;

      _this.updateURLWithQueryParam(filters);
    };

    _this.updateURLWithQueryParam = function (queryParam) {
      queryParam = Object.assign({}, queryParam);
      delete queryParam['search_type'];
      if (queryParam['sale_type'] && (0, _isEqual2.default)(queryParam['sale_type'].sort(), ['rent', 'sale'].sort())) {
        delete queryParam['sale_type'];
      }
      if (queryParam['property_subtype'] && queryParam['property_subtype'].every(function (d) {
        return d.slug;
      })) {
        queryParam['property_subtype'] = queryParam['property_subtype'].map(function (d) {
          return d.slug;
        });
      }
      queryParam = _Util2.default.customFormatToSearchObject(queryParam);
      var searchCollection = _Util2.default.searchObjectToCollection(queryParam);
      var searchURL = _Util2.default.createSearchURL('/search', searchCollection);
      _this.props.historyPush(searchURL);
    };

    return _this;
  }

  _createClass(searchFilters, [{
    key: 'showStaticFilters',
    value: function showStaticFilters() {
      var filters = this.props.filters;
      var notCountingFilters = ['geobr', 'geotl', 'property_type', 'search_type', 'selected_property', 'term'];
      if (['Commercial', 'Land'].indexOf(filters.search_type) < 0) {
        notCountingFilters.push('sale_type');
      }
      return !(0, _difference2.default)(Object.keys(filters), notCountingFilters).length;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var filters = this.props.filters;

      var staticFilters = {
        'bedrooms': false,
        'acres': false,
        'price': false,
        'sqft': false
      };

      switch (filters.search_type) {
        case 'Buy':
          staticFilters['bedrooms'] = true;
          staticFilters['price'] = true;
          break;
        case 'Rent':
          staticFilters['bedrooms'] = true;
          staticFilters['price'] = true;
          break;
        case 'Commercial':
          staticFilters['sqft'] = true;
          staticFilters['price'] = true;
          break;
        case 'Land':
          staticFilters['acres'] = true;
          staticFilters['price'] = true;
      }

      var bathroomsElement = void 0;
      var bathroomsFilter = filters['bathrooms'];
      var bedroomsFilter = filters['bedrooms'];
      var bedroomsElement = void 0;
      var lotSizeElement = void 0;
      var lotSizeFilter = filters['acres'];
      var priceFilter = filters['price'];
      var priceElement = void 0;
      var saleTypeFilter = filters['sale_type'];
      var saleTypeElement = void 0;
      var sqftFilter = filters['sqft'];
      var sqftElement = void 0;
      var subPropertyTypeFilter = filters['property_subtype'];
      var subPropertyTypeElement = void 0;

      if (bathroomsFilter) {
        bathroomsElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: this.handleBathroomsFilterRemove, display: bathroomsFilter + '+ Baths', value: bathroomsFilter });
      } else if (staticFilters['bathrooms'] && this.showStaticFilters()) {
        bathroomsElement = _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
          _react2.default.createElement(
            'span',
            null,
            '+'
          ),
          ' Bathroom'
        );
      }

      if (bedroomsFilter) {
        bedroomsElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: this.handleBedroomsFilterRemove, display: bedroomsFilter + '+ Beds', value: bedroomsFilter });
      } else if (staticFilters['bedrooms'] && this.showStaticFilters()) {
        bedroomsElement = _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
          _react2.default.createElement(
            'span',
            null,
            '+'
          ),
          ' Bedroom'
        );
      }

      if (priceFilter) {
        priceElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: this.handlePriceFilterRemove, display: _Util2.default.priceFilterSearchTagText(priceFilter), value: priceFilter });
      } else if (staticFilters['price'] && this.showStaticFilters()) {
        priceElement = _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
          _react2.default.createElement(
            'span',
            null,
            '+'
          ),
          ' Price'
        );
      }

      if (lotSizeFilter) {
        lotSizeElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: this.handleLotSizefilterRemove, display: _Util2.default.lotSizeFilterSearchTagText(lotSizeFilter), value: lotSizeFilter });
      } else if (staticFilters['acres'] && this.showStaticFilters()) {
        lotSizeElement = _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
          _react2.default.createElement(
            'span',
            null,
            '+'
          ),
          ' Lot Size'
        );
      }

      if (['Commercial', 'Land'].indexOf(filters.search_type) >= 0 && saleTypeFilter) {
        saleTypeElement = saleTypeFilter.map(function (s, i) {
          var saleType = s === 'sale' ? 'buy' : s;
          return _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(s), handleRemoveFilter: _this2.handleSaleTypeRemove, display: (0, _capitalize2.default)(saleType), value: s });
        });
      }

      if (sqftFilter) {
        sqftElement = _react2.default.createElement(_FilterTag2.default, { handleRemoveFilter: this.handleSQFTFilterRemove, display: _Util2.default.sqftFilterSearchTagText(sqftFilter), value: sqftFilter });
      } else if (staticFilters['sqft'] && this.showStaticFilters()) {
        sqftElement = _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
          _react2.default.createElement(
            'span',
            null,
            '+'
          ),
          ' SQFT'
        );
      }

      if (subPropertyTypeFilter) {
        subPropertyTypeElement = subPropertyTypeFilter.map(function (s, i) {
          return _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(s), handleRemoveFilter: _this2.handleDeleteSubPropertyTypeFilter, display: s.title, value: s.slug });
        });
      }

      var termFilter = filters['term'];
      var termFilterElement = void 0;
      var termFilters = termFilter;
      if (isMobileView()) {
        termFilters = termFilters.slice(0, 1);
      }
      if (termFilters && termFilters.length) {
        if (termFilters.length === 1) {
          termFilterElement = _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(termFilters[0]), handleRemoveFilter: function handleRemoveFilter() {
              return _this2.props.openLocationModal(termFilter);
            }, display: termFilters[0].text || 'loading...', value: termFilters[0].text || 'loading...' });
        } else {
          termFilterElement = termFilters.map(function (t, i) {
            return _react2.default.createElement(_FilterTag2.default, { key: JSON.stringify(t), handleRemoveFilter: function handleRemoveFilter() {
                return _this2.handleTermFilterRemove(t);
              }, display: t.text || 'loading...', value: t.text || 'loading...' });
          });
        }
      }
      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-filters d-flex align-items-center', onClick: function onClick() {
            return _this2.props.openPropertiesModal(true);
          } },
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'bs-tags-box' },
          _react2.default.createElement(
            'div',
            null,
            termFilterElement,
            bathroomsElement,
            bedroomsElement,
            priceElement,
            lotSizeElement,
            sqftElement,
            subPropertyTypeElement,
            saleTypeElement,
            _react2.default.createElement(
              'span',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'tag ' + _lib.Lib.THEME_CLASSES_PREFIX + 'addfilter' },
              _react2.default.createElement(
                'span',
                null,
                '+'
              ),
              'More Filters'
            )
          )
        ),
        _react2.default.createElement(
          'a',
          { href: '#', onClick: function onClick(e) {
              return e.preventDefault();
            }, className: _lib.Lib.THEME_CLASSES_PREFIX + 'navbar-navigation-icon px-2' },
          _react2.default.createElement('span', { className: 'fa fa-search' })
        )
      );
    }
  }]);

  return searchFilters;
}(_react.Component);

searchFilters.propTypes = {
  filters: _propTypes2.default.object.isRequired,
  historyPush: _propTypes2.default.func.isRequired
};
;

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(searchFilters);

/***/ }),
/* 1164 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(232),
    arrayEach = __webpack_require__(412),
    assignValue = __webpack_require__(1069),
    baseAssign = __webpack_require__(1165),
    baseAssignIn = __webpack_require__(1166),
    cloneBuffer = __webpack_require__(1113),
    copyArray = __webpack_require__(1114),
    copySymbols = __webpack_require__(1167),
    copySymbolsIn = __webpack_require__(1168),
    getAllKeys = __webpack_require__(391),
    getAllKeysIn = __webpack_require__(1079),
    getTag = __webpack_require__(239),
    initCloneArray = __webpack_require__(1169),
    initCloneByTag = __webpack_require__(1170),
    initCloneObject = __webpack_require__(1117),
    isArray = __webpack_require__(30),
    isBuffer = __webpack_require__(156),
    isObject = __webpack_require__(60),
    keys = __webpack_require__(113);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 1165 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(1052),
    keys = __webpack_require__(113);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 1166 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(1052),
    keysIn = __webpack_require__(1070);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 1167 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(1052),
    getSymbols = __webpack_require__(381);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 1168 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(1052),
    getSymbolsIn = __webpack_require__(1111);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 1169 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 1170 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(1081),
    cloneDataView = __webpack_require__(1171),
    cloneMap = __webpack_require__(1172),
    cloneRegExp = __webpack_require__(1174),
    cloneSet = __webpack_require__(1175),
    cloneSymbol = __webpack_require__(1177),
    cloneTypedArray = __webpack_require__(1116);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 1171 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(1081);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 1172 */
/***/ (function(module, exports, __webpack_require__) {

var addMapEntry = __webpack_require__(1173),
    arrayReduce = __webpack_require__(1115),
    mapToArray = __webpack_require__(389);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

module.exports = cloneMap;


/***/ }),
/* 1173 */
/***/ (function(module, exports) {

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

module.exports = addMapEntry;


/***/ }),
/* 1174 */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 1175 */
/***/ (function(module, exports, __webpack_require__) {

var addSetEntry = __webpack_require__(1176),
    arrayReduce = __webpack_require__(1115),
    setToArray = __webpack_require__(390);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

module.exports = cloneSet;


/***/ }),
/* 1176 */
/***/ (function(module, exports) {

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

module.exports = addSetEntry;


/***/ }),
/* 1177 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(95);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 1178 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(60);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 1179 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(231),
    baseSlice = __webpack_require__(405);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 1180 */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(1119);

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;


/***/ }),
/* 1181 */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(1182),
    overRest = __webpack_require__(397),
    setToString = __webpack_require__(398);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),
/* 1182 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(382);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),
/* 1183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _UserPanelIcon = __webpack_require__(1120);

var _UserPanelIcon2 = _interopRequireDefault(_UserPanelIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationIcons = function NavigationIcons(_ref) {
  var openUserPanel = _ref.openUserPanel;
  return _react2.default.createElement(
    'ul',
    null,
    _react2.default.createElement(
      'li',
      { className: 'hidden-sm-down px-2' },
      _react2.default.createElement(_UserPanelIcon2.default, { openUserPanel: openUserPanel })
    )
  );
};

exports.default = NavigationIcons;

/***/ }),
/* 1184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = __webpack_require__(41);

var _scrollToElement = __webpack_require__(1185);

var _scrollToElement2 = _interopRequireDefault(_scrollToElement);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _lib = __webpack_require__(3);

var _htmlHelper = __webpack_require__(1083);

var _htmlHelper2 = _interopRequireDefault(_htmlHelper);

var _propertyHelper = __webpack_require__(1050);

var _FormFetcher = __webpack_require__(384);

var _FormFetcher2 = _interopRequireDefault(_FormFetcher);

var _PropertiesModal = __webpack_require__(1104);

var _PropertiesModal2 = _interopRequireDefault(_PropertiesModal);

var _Carousel = __webpack_require__(1192);

var _Carousel2 = _interopRequireDefault(_Carousel);

var _Masthead = __webpack_require__(1236);

var _Masthead2 = _interopRequireDefault(_Masthead);

var _Overview = __webpack_require__(1237);

var _Overview2 = _interopRequireDefault(_Overview);

var _Highlights = __webpack_require__(1238);

var _Highlights2 = _interopRequireDefault(_Highlights);

var _AttributeTabs = __webpack_require__(1239);

var _AttributeTabs2 = _interopRequireDefault(_AttributeTabs);

var _ListingProvider = __webpack_require__(1273);

var _ListingProvider2 = _interopRequireDefault(_ListingProvider);

var _AgentContactForms = __webpack_require__(1274);

var _AgentContactForms2 = _interopRequireDefault(_AgentContactForms);

var _StickyCard = __webpack_require__(1275);

var _StickyCard2 = _interopRequireDefault(_StickyCard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Single = function (_Component) {
  _inherits(Single, _Component);

  function Single(props) {
    _classCallCheck(this, Single);

    var _this = _possibleConstructorReturn(this, (Single.__proto__ || Object.getPrototypeOf(Single)).call(this, props));

    _initialiseProps.call(_this);

    var _this$props = _this.props,
        agents = _this$props.agents,
        curatedPropertyInfo = _this$props.curatedPropertyInfo;


    var contactFormData = (0, _propertyHelper.getContactFormData)(curatedPropertyInfo, agents);

    console.debug('RDC agents:', agents);
    console.debug('[PropertySingle agent picked] constructor', contactFormData.agent);
    console.debug('Sale Types:', curatedPropertyInfo.sale_types);
    console.debug('Listing Office:', curatedPropertyInfo.listing_office);

    _this.state = {
      contactFormTab: null,
      contactFormData: contactFormData
    };
    return _this;
  }

  _createClass(Single, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var previous_mlsId = (0, _get2.default)(this.props, 'curatedPropertyInfo.mlsId');
      var next_mlsId = (0, _get2.default)(nextProps, 'curatedPropertyInfo.mlsId');
      var isNewProperty = previous_mlsId !== next_mlsId;

      // @event: new property is coming in...
      if (isNewProperty) {
        // on map view, scroll to top on panel
        this.scrollToTop();

        // update contact form data (focused to update agent matching)
        this.setContactFormData(nextProps);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          agents = _props.agents,
          elasticSearchSource = _props.elasticSearchSource,
          curatedPropertyInfo = _props.curatedPropertyInfo,
          fromMapView = _props.fromMapView,
          viewport = _props.viewport;
      var _state = this.state,
          contactFormTab = _state.contactFormTab,
          contactFormData = _state.contactFormData;


      var gridWidth = fromMapView ? 'col-12' : 'col-12 col-lg-8';

      var isAgentHiddenOnSticky = fromMapView || viewport.width <= _lib.Lib.SINGLE_PAGE_STICKY_THRESHOLD;
      var isAgentShownOnSticky = !isAgentHiddenOnSticky;
      var isNarrowAttrTabs = fromMapView || viewport.isMobile;

      var scrollingContent = _react2.default.createElement(
        'div',
        { className: gridWidth },
        _react2.default.createElement(_Overview2.default, {
          curatedPropertyInfo: curatedPropertyInfo,
          fromMapView: fromMapView
        }),
        _react2.default.createElement(_Highlights2.default, {
          elasticSearchSource: elasticSearchSource,
          fromMapView: fromMapView
        }),
        _react2.default.createElement(_AttributeTabs2.default, {
          curatedPropertyInfo: curatedPropertyInfo,
          esProperty: elasticSearchSource,
          isOneColumn: isNarrowAttrTabs
        })
      );

      var stickyContent = _react2.default.createElement(_StickyCard2.default, _extends({
        isAgentShown: isAgentShownOnSticky,
        onClickRequestBtn: this.handleRequestBtnClick
      }, contactFormData));

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-container' },
        _react2.default.createElement(_Carousel2.default, {
          images: curatedPropertyInfo.images || [],
          viewport: viewport,
          fromMapView: fromMapView
        }),
        _react2.default.createElement(_Masthead2.default, {
          curatedPropertyInfo: curatedPropertyInfo,
          gridWidth: gridWidth
        }),
        _react2.default.createElement(
          'section',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-scrolling-container' },
          isAgentShownOnSticky && _react2.default.createElement(
            'div',
            { className: 'container py-5' },
            _react2.default.createElement(
              'div',
              { className: 'row' },
              scrollingContent,
              _react2.default.createElement(
                'div',
                { className: 'col-lg-4' },
                stickyContent
              )
            )
          ),
          isAgentHiddenOnSticky && stickyContent,
          isAgentHiddenOnSticky && _react2.default.createElement(
            'div',
            { className: 'container py-5' },
            _react2.default.createElement(
              'div',
              { className: 'row' },
              scrollingContent
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { id: 'agent-contact-form' },
          _react2.default.createElement(_AgentContactForms2.default, _extends({
            tabActive: contactFormTab,
            curatedPropertyInfo: curatedPropertyInfo
          }, contactFormData))
        ),
        _react2.default.createElement(_ListingProvider2.default, {
          curatedPropertyInfo: curatedPropertyInfo,
          fromMapView: fromMapView
        })
      );
    }
  }]);

  return Single;
}(_react.Component);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.setContactFormData = function (props) {
    var contactFormData = (0, _propertyHelper.getContactFormData)(props.curatedPropertyInfo, props.agents);
    _this2.setState({
      contactFormTab: null,
      contactFormData: contactFormData
    });
    console.debug('[PropertySingle agent picked] for new property', contactFormData.agent);
  };

  this.handleRequestBtnClick = function (tab) {
    // scroll-to-element library doesn't work well on map view
    if (_this2.props.fromMapView) {
      _this2.scrollToContactForm();
    } else {
      (0, _scrollToElement2.default)('#agent-contact-form', { duration: 500 });
    }

    _this2.setState({ contactFormTab: tab });
  };

  this.scrollToTop = function () {
    var container = document.querySelector('.' + _lib.Lib.THEME_CLASSES_PREFIX + 'single-container');
    var node = document.querySelector('.' + _lib.Lib.THEME_CLASSES_PREFIX + 'image-mixer');
    _htmlHelper2.default.scrollToElement(container, node, 500);
  };

  this.scrollToContactForm = function () {
    var container = document.querySelector('.' + _lib.Lib.THEME_CLASSES_PREFIX + 'single-container');
    var node = document.getElementById('agent-contact-form');
    _htmlHelper2.default.scrollToElement(container, node, 500);
  };
};

Single.propTypes = {
  agents: _propTypes2.default.array,
  fromMapView: _propTypes2.default.bool,
  viewport: _propTypes2.default.object,
  elasticSearchSource: _propTypes2.default.object,
  curatedPropertyInfo: _propTypes2.default.object
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    viewport: state.viewport
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)(Single);

/***/ }),
/* 1185 */
/***/ (function(module, exports, __webpack_require__) {

var scroll = __webpack_require__(1186);

function calculateScrollOffset(elem, additionalOffset, alignment) {
  var body = document.body,
      html = document.documentElement;

  var elemRect = elem.getBoundingClientRect();
  var clientHeight = html.clientHeight;
  var documentHeight = Math.max( body.scrollHeight, body.offsetHeight, 
                                 html.clientHeight, html.scrollHeight, html.offsetHeight );

  additionalOffset = additionalOffset || 0;

  var scrollPosition;
  if (alignment === 'bottom') {
    scrollPosition = elemRect.bottom - clientHeight;
  } else if (alignment === 'middle') {
    scrollPosition = elemRect.bottom - clientHeight / 2 - elemRect.height / 2;
  } else { // top and default
    scrollPosition = elemRect.top;
  }

  var maxScrollPosition = documentHeight - clientHeight;
  return Math.min(scrollPosition + additionalOffset + window.pageYOffset,
                  maxScrollPosition);
}

module.exports = function (elem, options) {
  options = options || {};
  if (typeof elem === 'string') elem = document.querySelector(elem);
  if (elem) return scroll(0, calculateScrollOffset(elem, options.offset, options.align), options);
};


/***/ }),
/* 1186 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var Tween = __webpack_require__(1187);
var raf = __webpack_require__(1191);

/**
 * Expose `scrollTo`.
 */

module.exports = scrollTo;

/**
 * Scroll to `(x, y)`.
 *
 * @param {Number} x
 * @param {Number} y
 * @api public
 */

function scrollTo(x, y, options) {
  options = options || {};

  // start position
  var start = scroll();

  // setup tween
  var tween = Tween(start)
    .ease(options.ease || 'out-circ')
    .to({ top: y, left: x })
    .duration(options.duration || 1000);

  // scroll
  tween.update(function(o){
    window.scrollTo(o.left | 0, o.top | 0);
  });

  // handle end
  tween.on('end', function(){
    animate = function(){};
  });

  // animate
  function animate() {
    raf(animate);
    tween.update();
  }

  animate();
  
  return tween;
}

/**
 * Return scroll position.
 *
 * @return {Object}
 * @api private
 */

function scroll() {
  var y = window.pageYOffset || document.documentElement.scrollTop;
  var x = window.pageXOffset || document.documentElement.scrollLeft;
  return { top: y, left: x };
}


/***/ }),
/* 1187 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var Emitter = __webpack_require__(1188);
var clone = __webpack_require__(1189);
var type = __webpack_require__(1082);
var ease = __webpack_require__(1190);

/**
 * Expose `Tween`.
 */

module.exports = Tween;

/**
 * Initialize a new `Tween` with `obj`.
 *
 * @param {Object|Array} obj
 * @api public
 */

function Tween(obj) {
  if (!(this instanceof Tween)) return new Tween(obj);
  this._from = obj;
  this.ease('linear');
  this.duration(500);
}

/**
 * Mixin emitter.
 */

Emitter(Tween.prototype);

/**
 * Reset the tween.
 *
 * @api public
 */

Tween.prototype.reset = function(){
  this.isArray = 'array' === type(this._from);
  this._curr = clone(this._from);
  this._done = false;
  this._start = Date.now();
  return this;
};

/**
 * Tween to `obj` and reset internal state.
 *
 *    tween.to({ x: 50, y: 100 })
 *
 * @param {Object|Array} obj
 * @return {Tween} self
 * @api public
 */

Tween.prototype.to = function(obj){
  this.reset();
  this._to = obj;
  return this;
};

/**
 * Set duration to `ms` [500].
 *
 * @param {Number} ms
 * @return {Tween} self
 * @api public
 */

Tween.prototype.duration = function(ms){
  this._duration = ms;
  return this;
};

/**
 * Set easing function to `fn`.
 *
 *    tween.ease('in-out-sine')
 *
 * @param {String|Function} fn
 * @return {Tween}
 * @api public
 */

Tween.prototype.ease = function(fn){
  fn = 'function' == typeof fn ? fn : ease[fn];
  if (!fn) throw new TypeError('invalid easing function');
  this._ease = fn;
  return this;
};

/**
 * Stop the tween and immediately emit "stop" and "end".
 *
 * @return {Tween}
 * @api public
 */

Tween.prototype.stop = function(){
  this.stopped = true;
  this._done = true;
  this.emit('stop');
  this.emit('end');
  return this;
};

/**
 * Perform a step.
 *
 * @return {Tween} self
 * @api private
 */

Tween.prototype.step = function(){
  if (this._done) return;

  // duration
  var duration = this._duration;
  var now = Date.now();
  var delta = now - this._start;
  var done = delta >= duration;

  // complete
  if (done) {
    this._from = this._to;
    this._update(this._to);
    this._done = true;
    this.emit('end');
    return this;
  }

  // tween
  var from = this._from;
  var to = this._to;
  var curr = this._curr;
  var fn = this._ease;
  var p = (now - this._start) / duration;
  var n = fn(p);

  // array
  if (this.isArray) {
    for (var i = 0; i < from.length; ++i) {
      curr[i] = from[i] + (to[i] - from[i]) * n;
    }

    this._update(curr);
    return this;
  }

  // objech
  for (var k in from) {
    curr[k] = from[k] + (to[k] - from[k]) * n;
  }

  this._update(curr);
  return this;
};

/**
 * Set update function to `fn` or
 * when no argument is given this performs
 * a "step".
 *
 * @param {Function} fn
 * @return {Tween} self
 * @api public
 */

Tween.prototype.update = function(fn){
  if (0 == arguments.length) return this.step();
  this._update = fn;
  return this;
};

/***/ }),
/* 1188 */
/***/ (function(module, exports) {


/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 1189 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var type;
try {
  type = __webpack_require__(1082);
} catch (_) {
  type = __webpack_require__(1082);
}

/**
 * Module exports.
 */

module.exports = clone;

/**
 * Clones objects.
 *
 * @param {Mixed} any object
 * @api public
 */

function clone(obj){
  switch (type(obj)) {
    case 'object':
      var copy = {};
      for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
          copy[key] = clone(obj[key]);
        }
      }
      return copy;

    case 'array':
      var copy = new Array(obj.length);
      for (var i = 0, l = obj.length; i < l; i++) {
        copy[i] = clone(obj[i]);
      }
      return copy;

    case 'regexp':
      // from millermedeiros/amd-utils - MIT
      var flags = '';
      flags += obj.multiline ? 'm' : '';
      flags += obj.global ? 'g' : '';
      flags += obj.ignoreCase ? 'i' : '';
      return new RegExp(obj.source, flags);

    case 'date':
      return new Date(obj.getTime());

    default: // string, number, boolean, …
      return obj;
  }
}


/***/ }),
/* 1190 */
/***/ (function(module, exports) {


// easing functions from "Tween.js"

exports.linear = function(n){
  return n;
};

exports.inQuad = function(n){
  return n * n;
};

exports.outQuad = function(n){
  return n * (2 - n);
};

exports.inOutQuad = function(n){
  n *= 2;
  if (n < 1) return 0.5 * n * n;
  return - 0.5 * (--n * (n - 2) - 1);
};

exports.inCube = function(n){
  return n * n * n;
};

exports.outCube = function(n){
  return --n * n * n + 1;
};

exports.inOutCube = function(n){
  n *= 2;
  if (n < 1) return 0.5 * n * n * n;
  return 0.5 * ((n -= 2 ) * n * n + 2);
};

exports.inQuart = function(n){
  return n * n * n * n;
};

exports.outQuart = function(n){
  return 1 - (--n * n * n * n);
};

exports.inOutQuart = function(n){
  n *= 2;
  if (n < 1) return 0.5 * n * n * n * n;
  return -0.5 * ((n -= 2) * n * n * n - 2);
};

exports.inQuint = function(n){
  return n * n * n * n * n;
}

exports.outQuint = function(n){
  return --n * n * n * n * n + 1;
}

exports.inOutQuint = function(n){
  n *= 2;
  if (n < 1) return 0.5 * n * n * n * n * n;
  return 0.5 * ((n -= 2) * n * n * n * n + 2);
};

exports.inSine = function(n){
  return 1 - Math.cos(n * Math.PI / 2 );
};

exports.outSine = function(n){
  return Math.sin(n * Math.PI / 2);
};

exports.inOutSine = function(n){
  return .5 * (1 - Math.cos(Math.PI * n));
};

exports.inExpo = function(n){
  return 0 == n ? 0 : Math.pow(1024, n - 1);
};

exports.outExpo = function(n){
  return 1 == n ? n : 1 - Math.pow(2, -10 * n);
};

exports.inOutExpo = function(n){
  if (0 == n) return 0;
  if (1 == n) return 1;
  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);
  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);
};

exports.inCirc = function(n){
  return 1 - Math.sqrt(1 - n * n);
};

exports.outCirc = function(n){
  return Math.sqrt(1 - (--n * n));
};

exports.inOutCirc = function(n){
  n *= 2
  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);
  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);
};

exports.inBack = function(n){
  var s = 1.70158;
  return n * n * (( s + 1 ) * n - s);
};

exports.outBack = function(n){
  var s = 1.70158;
  return --n * n * ((s + 1) * n + s) + 1;
};

exports.inOutBack = function(n){
  var s = 1.70158 * 1.525;
  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );
  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );
};

exports.inBounce = function(n){
  return 1 - exports.outBounce(1 - n);
};

exports.outBounce = function(n){
  if ( n < ( 1 / 2.75 ) ) {
    return 7.5625 * n * n;
  } else if ( n < ( 2 / 2.75 ) ) {
    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;
  } else if ( n < ( 2.5 / 2.75 ) ) {
    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;
  } else {
    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;
  }
};

exports.inOutBounce = function(n){
  if (n < .5) return exports.inBounce(n * 2) * .5;
  return exports.outBounce(n * 2 - 1) * .5 + .5;
};

// aliases

exports['in-quad'] = exports.inQuad;
exports['out-quad'] = exports.outQuad;
exports['in-out-quad'] = exports.inOutQuad;
exports['in-cube'] = exports.inCube;
exports['out-cube'] = exports.outCube;
exports['in-out-cube'] = exports.inOutCube;
exports['in-quart'] = exports.inQuart;
exports['out-quart'] = exports.outQuart;
exports['in-out-quart'] = exports.inOutQuart;
exports['in-quint'] = exports.inQuint;
exports['out-quint'] = exports.outQuint;
exports['in-out-quint'] = exports.inOutQuint;
exports['in-sine'] = exports.inSine;
exports['out-sine'] = exports.outSine;
exports['in-out-sine'] = exports.inOutSine;
exports['in-expo'] = exports.inExpo;
exports['out-expo'] = exports.outExpo;
exports['in-out-expo'] = exports.inOutExpo;
exports['in-circ'] = exports.inCirc;
exports['out-circ'] = exports.outCirc;
exports['in-out-circ'] = exports.inOutCirc;
exports['in-back'] = exports.inBack;
exports['out-back'] = exports.outBack;
exports['in-out-back'] = exports.inOutBack;
exports['in-bounce'] = exports.inBounce;
exports['out-bounce'] = exports.outBounce;
exports['in-out-bounce'] = exports.inOutBounce;


/***/ }),
/* 1191 */
/***/ (function(module, exports) {

/**
 * Expose `requestAnimationFrame()`.
 */

exports = module.exports = window.requestAnimationFrame
  || window.webkitRequestAnimationFrame
  || window.mozRequestAnimationFrame
  || fallback;

/**
 * Fallback implementation.
 */

var prev = new Date().getTime();
function fallback(fn) {
  var curr = new Date().getTime();
  var ms = Math.max(0, 16 - (curr - prev));
  var req = setTimeout(fn, ms);
  prev = curr;
  return req;
}

/**
 * Cancel.
 */

var cancel = window.cancelAnimationFrame
  || window.webkitCancelAnimationFrame
  || window.mozCancelAnimationFrame
  || window.clearTimeout;

exports.cancel = function(id){
  cancel.call(window, id);
};


/***/ }),
/* 1192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(93);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactImages = __webpack_require__(1193);

var _reactImages2 = _interopRequireDefault(_reactImages);

var _reactIdSwiper = __webpack_require__(153);

var _reactIdSwiper2 = _interopRequireDefault(_reactIdSwiper);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Carousel = function (_Component) {
  _inherits(Carousel, _Component);

  function Carousel(props) {
    _classCallCheck(this, Carousel);

    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));

    _this.closeLightbox = function () {
      _this.setState({ lightboxIsOpen: false });
    };

    _this.onLightboxNext = function () {
      _this.setState({ currentLightboxImage: _this.state.currentLightboxImage + 1 });
    };

    _this.onLightboxPrev = function () {
      _this.setState({ currentLightboxImage: _this.state.currentLightboxImage - 1 });
    };

    _this.state = {
      currentLightboxImage: 0,
      lightboxIsOpen: false
    };
    return _this;
  }

  _createClass(Carousel, [{
    key: 'imageMixerClicked',
    value: function imageMixerClicked(imgIndex) {
      this.setState({
        lightboxIsOpen: true,
        currentLightboxImage: imgIndex
      });
    }
  }, {
    key: 'handleNavigation',
    value: function handleNavigation(direction) {
      if (direction === 'next') {
        this.swiper.slideNext();
      } else if (direction === 'prev') {
        this.swiper.slidePrev();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var images = this.props.images;


      var LightboxImages = images.map(function (i) {
        return {
          src: i
        };
      });

      var smImagesSet = [];
      for (var i = 1; i < images.length; i = i + 2) {
        var subset = [images[i]];
        if (i + 1 < images.length) {
          subset.push(images[i + 1]);
        }
        smImagesSet.push(subset);
      }

      var desktopSwiperParams = {
        freeMode: true,
        slidesPerView: 'auto',
        spaceBetween: 5,
        preloadImages: false,
        lazyLoading: true,
        // Reinit swiper on update images
        rebuildOnUpdate: true,
        onInit: function onInit(swiper) {
          _this2.swiper = swiper;
        }
      };

      var mobileSwiperParams = {
        spaceBetween: 30,
        preloadImages: false,
        lazyLoading: true,
        lazyLoadingInPrevNext: true,
        lazyLoadingInPrevNextAmount: 3,
        // Reinit swiper on update images
        lazyLoadingOnTransitionStart: true,
        rebuildOnUpdate: true,
        onInit: function onInit(swiper) {
          _this2.swiper = swiper;
        }
      };

      var desktopSwiper = null;
      var mobileSwiper = null;

      if (this.props.viewport.isMobile) {
        mobileSwiper = _react2.default.createElement(
          _reactIdSwiper2.default,
          mobileSwiperParams,
          images.length && images.map(function (img, index) {
            return _react2.default.createElement(
              'div',
              { className: 'swiper-slide', key: index, onClick: _this2.imageMixerClicked.bind(_this2, index) },
              _react2.default.createElement(
                'div',
                {
                  className: 'swiper-lazy img-mobile',
                  'data-background': img
                },
                _react2.default.createElement('div', { className: 'swiper-lazy-preloader' })
              )
            );
          })
        );
      } else {
        desktopSwiper = _react2.default.createElement(
          _reactIdSwiper2.default,
          desktopSwiperParams,
          _react2.default.createElement(
            'div',
            { className: 'swiper-slide', key: 0, onClick: this.imageMixerClicked.bind(this, 0) },
            _react2.default.createElement('div', {
              className: 'swiper-lazy img-main',
              style: { backgroundImage: 'url(' + images[0] + ')' }
            })
          ),
          smImagesSet.map(function (subset, index) {
            return _react2.default.createElement(
              'div',
              { className: 'swiper-slide', key: index + 1 },
              _react2.default.createElement('div', {
                className: 'swiper-lazy img-sub',
                style: { backgroundImage: 'url(' + subset[0] + ')' },
                onClick: _this2.imageMixerClicked.bind(_this2, index * 2 + 1)
              }),
              subset[1] ? _react2.default.createElement('div', {
                className: 'swiper-lazy img-sub',
                style: { backgroundImage: 'url(' + subset[1] + ')' },
                onClick: _this2.imageMixerClicked.bind(_this2, (index + 1) * 2)
              }) : null
            );
          })
        );
      }

      var containerClass = (0, _classnames2.default)(_lib.Lib.THEME_CLASSES_PREFIX + 'property-single-carousel', this.props.viewport.isShort || this.props.fromMapView ? _lib.Lib.THEME_CLASSES_PREFIX + 'viewport-short' : '');

      return _react2.default.createElement(
        'div',
        { className: containerClass },
        mobileSwiper,
        desktopSwiper,
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'direction-nav-container' },
          _react2.default.createElement(
            'ul',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'direction-nav nav text-center' },
            _react2.default.createElement(
              'li',
              { className: 'nav-item mr-auto' },
              _react2.default.createElement('span', {
                className: _lib.Lib.THEME_CLASSES_PREFIX + 'nav-prev rounded-circle',
                onClick: function onClick(e) {
                  e.preventDefault();
                  _this2.handleNavigation.bind(_this2)('prev');
                }
              })
            ),
            _react2.default.createElement(
              'li',
              { className: 'nav-item' },
              _react2.default.createElement('span', {
                className: _lib.Lib.THEME_CLASSES_PREFIX + 'nav-next rounded-circle',
                onClick: function onClick(e) {
                  e.preventDefault();
                  _this2.handleNavigation.bind(_this2)('next');
                }
              })
            )
          )
        ),
        _react2.default.createElement(_reactImages2.default, {
          currentImage: this.state.currentLightboxImage,
          images: LightboxImages,
          isOpen: this.state.lightboxIsOpen,
          onClickNext: this.onLightboxNext,
          onClickPrev: this.onLightboxPrev,
          onClose: this.closeLightbox
        })
      );
    }
  }]);

  return Carousel;
}(_react.Component);

Carousel.propTypes = {
  images: _propTypes2.default.array
};


Carousel.propTypes = {
  images: _propTypes2.default.array.isRequired,
  viewport: _propTypes2.default.object.isRequired,
  fromMapView: _propTypes2.default.bool.isRequired
};

exports.default = Carousel;

/***/ }),
/* 1193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _reactScrolllock = __webpack_require__(1213);

var _reactScrolllock2 = _interopRequireDefault(_reactScrolllock);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _componentsArrow = __webpack_require__(1124);

var _componentsArrow2 = _interopRequireDefault(_componentsArrow);

var _componentsContainer = __webpack_require__(1222);

var _componentsContainer2 = _interopRequireDefault(_componentsContainer);

var _componentsFooter = __webpack_require__(1223);

var _componentsFooter2 = _interopRequireDefault(_componentsFooter);

var _componentsHeader = __webpack_require__(1224);

var _componentsHeader2 = _interopRequireDefault(_componentsHeader);

var _componentsPaginatedThumbnails = __webpack_require__(1225);

var _componentsPaginatedThumbnails2 = _interopRequireDefault(_componentsPaginatedThumbnails);

var _componentsPortal = __webpack_require__(1227);

var _componentsPortal2 = _interopRequireDefault(_componentsPortal);

var _utils = __webpack_require__(1059);

var Lightbox = (function (_Component) {
	_inherits(Lightbox, _Component);

	function Lightbox(props) {
		_classCallCheck(this, Lightbox);

		_get(Object.getPrototypeOf(Lightbox.prototype), 'constructor', this).call(this, props);
		this.theme = (0, _utils.deepMerge)(_theme2['default'], props.theme);
		this.classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, this.theme));
		_utils.bindFunctions.call(this, ['gotoNext', 'gotoPrev', 'closeBackdrop', 'handleKeyboardInput']);
	}

	_createClass(Lightbox, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return {
				theme: this.theme
			};
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			if (this.props.isOpen && this.props.enableKeyboardInput) {
				window.addEventListener('keydown', this.handleKeyboardInput);
			}
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (!_utils.canUseDom) return;

			// preload images
			if (nextProps.preloadNextImage) {
				var currentIndex = this.props.currentImage;
				var nextIndex = nextProps.currentImage + 1;
				var prevIndex = nextProps.currentImage - 1;
				var preloadIndex = undefined;

				if (currentIndex && nextProps.currentImage > currentIndex) {
					preloadIndex = nextIndex;
				} else if (currentIndex && nextProps.currentImage < currentIndex) {
					preloadIndex = prevIndex;
				}

				// if we know the user's direction just get one image
				// otherwise, to be safe, we need to grab one in each direction
				if (preloadIndex) {
					this.preloadImage(preloadIndex);
				} else {
					this.preloadImage(prevIndex);
					this.preloadImage(nextIndex);
				}
			}

			// add/remove event listeners
			if (!this.props.isOpen && nextProps.isOpen && nextProps.enableKeyboardInput) {
				window.addEventListener('keydown', this.handleKeyboardInput);
			}
			if (!nextProps.isOpen && nextProps.enableKeyboardInput) {
				window.removeEventListener('keydown', this.handleKeyboardInput);
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			if (this.props.enableKeyboardInput) {
				window.removeEventListener('keydown', this.handleKeyboardInput);
			}
		}

		// ==============================
		// METHODS
		// ==============================

	}, {
		key: 'preloadImage',
		value: function preloadImage(idx) {
			var image = this.props.images[idx];

			if (!image) return;

			var img = new Image();

			img.src = image.src;
			img.srcset = img.srcSet || img.srcset;

			if (image.srcset) {
				img.srcset = image.srcset.join();
			}
		}
	}, {
		key: 'gotoNext',
		value: function gotoNext(event) {
			if (this.props.currentImage === this.props.images.length - 1) return;
			if (event) {
				event.preventDefault();
				event.stopPropagation();
			}
			this.props.onClickNext();
		}
	}, {
		key: 'gotoPrev',
		value: function gotoPrev(event) {
			if (this.props.currentImage === 0) return;
			if (event) {
				event.preventDefault();
				event.stopPropagation();
			}
			this.props.onClickPrev();
		}
	}, {
		key: 'closeBackdrop',
		value: function closeBackdrop(event) {
			// make sure event only happens if they click the backdrop
			// and if the caption is widening the figure element let that respond too
			if (event.target.id === 'lightboxBackdrop' || event.target.tagName === 'FIGURE') {
				this.props.onClose();
			}
		}
	}, {
		key: 'handleKeyboardInput',
		value: function handleKeyboardInput(event) {
			if (event.keyCode === 37) {
				// left
				this.gotoPrev(event);
				return true;
			} else if (event.keyCode === 39) {
				// right
				this.gotoNext(event);
				return true;
			} else if (event.keyCode === 27) {
				// esc
				this.props.onClose();
				return true;
			}
			return false;
		}

		// ==============================
		// RENDERERS
		// ==============================

	}, {
		key: 'renderArrowPrev',
		value: function renderArrowPrev() {
			if (this.props.currentImage === 0) return null;

			return _react2['default'].createElement(_componentsArrow2['default'], {
				direction: 'left',
				icon: 'arrowLeft',
				onClick: this.gotoPrev,
				title: this.props.leftArrowTitle,
				type: 'button'
			});
		}
	}, {
		key: 'renderArrowNext',
		value: function renderArrowNext() {
			if (this.props.currentImage === this.props.images.length - 1) return null;

			return _react2['default'].createElement(_componentsArrow2['default'], {
				direction: 'right',
				icon: 'arrowRight',
				onClick: this.gotoNext,
				title: this.props.rightArrowTitle,
				type: 'button'
			});
		}
	}, {
		key: 'renderDialog',
		value: function renderDialog() {
			var _props = this.props;
			var backdropClosesModal = _props.backdropClosesModal;
			var customControls = _props.customControls;
			var isOpen = _props.isOpen;
			var onClose = _props.onClose;
			var showCloseButton = _props.showCloseButton;
			var showThumbnails = _props.showThumbnails;
			var width = _props.width;

			if (!isOpen) return _react2['default'].createElement('span', { key: 'closed' });

			var offsetThumbnails = 0;
			if (showThumbnails) {
				offsetThumbnails = this.theme.thumbnail.size + this.theme.container.gutter.vertical;
			}

			return _react2['default'].createElement(
				_componentsContainer2['default'],
				{
					key: 'open',
					onClick: !!backdropClosesModal && this.closeBackdrop,
					onTouchEnd: !!backdropClosesModal && this.closeBackdrop
				},
				_react2['default'].createElement(
					'div',
					{ className: (0, _aphroditeNoImportant.css)(this.classes.content), style: { marginBottom: offsetThumbnails, maxWidth: width } },
					_react2['default'].createElement(_componentsHeader2['default'], {
						customControls: customControls,
						onClose: onClose,
						showCloseButton: showCloseButton,
						closeButtonTitle: this.props.closeButtonTitle
					}),
					this.renderImages()
				),
				this.renderThumbnails(),
				this.renderArrowPrev(),
				this.renderArrowNext(),
				_react2['default'].createElement(_reactScrolllock2['default'], null)
			);
		}
	}, {
		key: 'renderImages',
		value: function renderImages() {
			var _props2 = this.props;
			var currentImage = _props2.currentImage;
			var images = _props2.images;
			var imageCountSeparator = _props2.imageCountSeparator;
			var onClickImage = _props2.onClickImage;
			var showImageCount = _props2.showImageCount;
			var showThumbnails = _props2.showThumbnails;

			if (!images || !images.length) return null;

			var image = images[currentImage];
			image.srcset = image.srcSet || image.srcset;

			var srcset = undefined;
			var sizes = undefined;

			if (image.srcset) {
				srcset = image.srcset.join();
				sizes = '100vw';
			}

			var thumbnailsSize = showThumbnails ? this.theme.thumbnail.size : 0;
			var heightOffset = this.theme.header.height + this.theme.footer.height + thumbnailsSize + this.theme.container.gutter.vertical + 'px';

			return _react2['default'].createElement(
				'figure',
				{ className: (0, _aphroditeNoImportant.css)(this.classes.figure) },
				_react2['default'].createElement('img', {
					className: (0, _aphroditeNoImportant.css)(this.classes.image),
					onClick: !!onClickImage && onClickImage,
					sizes: sizes,
					alt: image.alt,
					src: image.src,
					srcSet: srcset,
					style: {
						cursor: this.props.onClickImage ? 'pointer' : 'auto',
						maxHeight: 'calc(100vh - ' + heightOffset + ')'
					}
				}),
				_react2['default'].createElement(_componentsFooter2['default'], {
					caption: images[currentImage].caption,
					countCurrent: currentImage + 1,
					countSeparator: imageCountSeparator,
					countTotal: images.length,
					showCount: showImageCount
				})
			);
		}
	}, {
		key: 'renderThumbnails',
		value: function renderThumbnails() {
			var _props3 = this.props;
			var images = _props3.images;
			var currentImage = _props3.currentImage;
			var onClickThumbnail = _props3.onClickThumbnail;
			var showThumbnails = _props3.showThumbnails;
			var thumbnailOffset = _props3.thumbnailOffset;

			if (!showThumbnails) return;

			return _react2['default'].createElement(_componentsPaginatedThumbnails2['default'], {
				currentImage: currentImage,
				images: images,
				offset: thumbnailOffset,
				onClickThumbnail: onClickThumbnail
			});
		}
	}, {
		key: 'render',
		value: function render() {
			return _react2['default'].createElement(
				_componentsPortal2['default'],
				null,
				this.renderDialog()
			);
		}
	}]);

	return Lightbox;
})(_react.Component);

Lightbox.propTypes = {
	backdropClosesModal: _propTypes2['default'].bool,
	closeButtonTitle: _propTypes2['default'].string,
	currentImage: _propTypes2['default'].number,
	customControls: _propTypes2['default'].arrayOf(_propTypes2['default'].node),
	enableKeyboardInput: _propTypes2['default'].bool,
	imageCountSeparator: _propTypes2['default'].string,
	images: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({
		src: _propTypes2['default'].string.isRequired,
		srcset: _propTypes2['default'].array,
		caption: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),
		thumbnail: _propTypes2['default'].string
	})).isRequired,
	isOpen: _propTypes2['default'].bool,
	leftArrowTitle: _propTypes2['default'].string,
	onClickImage: _propTypes2['default'].func,
	onClickNext: _propTypes2['default'].func,
	onClickPrev: _propTypes2['default'].func,
	onClose: _propTypes2['default'].func.isRequired,
	preloadNextImage: _propTypes2['default'].bool,
	rightArrowTitle: _propTypes2['default'].string,
	showCloseButton: _propTypes2['default'].bool,
	showImageCount: _propTypes2['default'].bool,
	showThumbnails: _propTypes2['default'].bool,
	theme: _propTypes2['default'].object,
	thumbnailOffset: _propTypes2['default'].number,
	width: _propTypes2['default'].number
};
Lightbox.defaultProps = {
	closeButtonTitle: 'Close (Esc)',
	currentImage: 0,
	enableKeyboardInput: true,
	imageCountSeparator: ' of ',
	leftArrowTitle: 'Previous (Left arrow key)',
	onClickShowNextImage: true,
	preloadNextImage: true,
	rightArrowTitle: 'Next (Right arrow key)',
	showCloseButton: true,
	showImageCount: true,
	theme: {},
	thumbnailOffset: 2,
	width: 1024
};
Lightbox.childContextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	content: {
		position: 'relative'
	},
	figure: {
		margin: 0 },
	// remove browser default
	image: {
		display: 'block', // removes browser default gutter
		height: 'auto',
		margin: '0 auto', // maintain center on very short screens OR very narrow image
		maxWidth: '100%',

		// disable user select
		WebkitTouchCallout: 'none',
		userSelect: 'none'
	}
};

exports['default'] = Lightbox;
module.exports = exports['default'];
/*
Re-implement when react warning "unknown props"
https://fb.me/react-unknown-prop is resolved
<Swipeable onSwipedLeft={this.gotoNext} onSwipedRight={this.gotoPrev} />
*/

/***/ }),
/* 1194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Module with the same interface as the core aphrodite module,
// except that styles injected do not automatically have !important
// appended to them.
//


Object.defineProperty(exports, '__esModule', {
    value: true
});

var _inject = __webpack_require__(1121);

var _indexJs = __webpack_require__(1212);

var css = function css() {
    for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
        styleDefinitions[_key] = arguments[_key];
    }

    var useImportant = false; // Don't append !important to style definitions
    return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
};

exports.StyleSheet = _indexJs.StyleSheet;
exports.StyleSheetServer = _indexJs.StyleSheetServer;
exports.StyleSheetTestUtils = _indexJs.StyleSheetTestUtils;
exports.css = css;

/***/ }),
/* 1195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// rawAsap provides everything we need except exception management.
var rawAsap = __webpack_require__(1196);
// RawTasks are recycled to reduce GC churn.
var freeTasks = [];
// We queue errors to ensure they are thrown in right order (FIFO).
// Array-as-queue is good enough here, since we are just dealing with exceptions.
var pendingErrors = [];
var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);

function throwFirstError() {
    if (pendingErrors.length) {
        throw pendingErrors.shift();
    }
}

/**
 * Calls a task as soon as possible after returning, in its own event, with priority
 * over other events like animation, reflow, and repaint. An error thrown from an
 * event will not interrupt, nor even substantially slow down the processing of
 * other events, but will be rather postponed to a lower priority event.
 * @param {{call}} task A callable object, typically a function that takes no
 * arguments.
 */
module.exports = asap;
function asap(task) {
    var rawTask;
    if (freeTasks.length) {
        rawTask = freeTasks.pop();
    } else {
        rawTask = new RawTask();
    }
    rawTask.task = task;
    rawAsap(rawTask);
}

// We wrap tasks with recyclable task objects.  A task object implements
// `call`, just like a function.
function RawTask() {
    this.task = null;
}

// The sole purpose of wrapping the task is to catch the exception and recycle
// the task object after its single use.
RawTask.prototype.call = function () {
    try {
        this.task.call();
    } catch (error) {
        if (asap.onerror) {
            // This hook exists purely for testing purposes.
            // Its name will be periodically randomized to break any code that
            // depends on its existence.
            asap.onerror(error);
        } else {
            // In a web browser, exceptions are not fatal. However, to avoid
            // slowing down the queue of pending tasks, we rethrow the error in a
            // lower priority turn.
            pendingErrors.push(error);
            requestErrorThrow();
        }
    } finally {
        this.task = null;
        freeTasks[freeTasks.length] = this;
    }
};


/***/ }),
/* 1196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// Use the fastest means possible to execute a task in its own turn, with
// priority over other events including IO, animation, reflow, and redraw
// events in browsers.
//
// An exception thrown by a task will permanently interrupt the processing of
// subsequent tasks. The higher level `asap` function ensures that if an
// exception is thrown by a task, that the task queue will continue flushing as
// soon as possible, but if you use `rawAsap` directly, you are responsible to
// either ensure that no exceptions are thrown from your task, or to manually
// call `rawAsap.requestFlush` if an exception is thrown.
module.exports = rawAsap;
function rawAsap(task) {
    if (!queue.length) {
        requestFlush();
        flushing = true;
    }
    // Equivalent to push, but avoids a function call.
    queue[queue.length] = task;
}

var queue = [];
// Once a flush has been requested, no further calls to `requestFlush` are
// necessary until the next `flush` completes.
var flushing = false;
// `requestFlush` is an implementation-specific method that attempts to kick
// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
// the event queue before yielding to the browser's own event loop.
var requestFlush;
// The position of the next task to execute in the task queue. This is
// preserved between calls to `flush` so that it can be resumed if
// a task throws an exception.
var index = 0;
// If a task schedules additional tasks recursively, the task queue can grow
// unbounded. To prevent memory exhaustion, the task queue will periodically
// truncate already-completed tasks.
var capacity = 1024;

// The flush function processes all tasks that have been scheduled with
// `rawAsap` unless and until one of those tasks throws an exception.
// If a task throws an exception, `flush` ensures that its state will remain
// consistent and will resume where it left off when called again.
// However, `flush` does not make any arrangements to be called again if an
// exception is thrown.
function flush() {
    while (index < queue.length) {
        var currentIndex = index;
        // Advance the index before calling the task. This ensures that we will
        // begin flushing on the next task the task throws an error.
        index = index + 1;
        queue[currentIndex].call();
        // Prevent leaking memory for long chains of recursive calls to `asap`.
        // If we call `asap` within tasks scheduled by `asap`, the queue will
        // grow, but to avoid an O(n) walk for every task we execute, we don't
        // shift tasks off the queue after they have been executed.
        // Instead, we periodically shift 1024 tasks off the queue.
        if (index > capacity) {
            // Manually shift all values starting at the index back to the
            // beginning of the queue.
            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                queue[scan] = queue[scan + index];
            }
            queue.length -= index;
            index = 0;
        }
    }
    queue.length = 0;
    index = 0;
    flushing = false;
}

// `requestFlush` is implemented using a strategy based on data collected from
// every available SauceLabs Selenium web driver worker at time of writing.
// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
// have WebKitMutationObserver but not un-prefixed MutationObserver.
// Must use `global` or `self` instead of `window` to work in both frames and web
// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

/* globals self */
var scope = typeof global !== "undefined" ? global : self;
var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

// MutationObservers are desirable because they have high priority and work
// reliably everywhere they are implemented.
// They are implemented in all modern browsers.
//
// - Android 4-4.3
// - Chrome 26-34
// - Firefox 14-29
// - Internet Explorer 11
// - iPad Safari 6-7.1
// - iPhone Safari 7-7.1
// - Safari 6-7
if (typeof BrowserMutationObserver === "function") {
    requestFlush = makeRequestCallFromMutationObserver(flush);

// MessageChannels are desirable because they give direct access to the HTML
// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
// 11-12, and in web workers in many engines.
// Although message channels yield to any queued rendering and IO tasks, they
// would be better than imposing the 4ms delay of timers.
// However, they do not work reliably in Internet Explorer or Safari.

// Internet Explorer 10 is the only browser that has setImmediate but does
// not have MutationObservers.
// Although setImmediate yields to the browser's renderer, it would be
// preferrable to falling back to setTimeout since it does not have
// the minimum 4ms penalty.
// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
// Desktop to a lesser extent) that renders both setImmediate and
// MessageChannel useless for the purposes of ASAP.
// https://github.com/kriskowal/q/issues/396

// Timers are implemented universally.
// We fall back to timers in workers in most engines, and in foreground
// contexts in the following browsers.
// However, note that even this simple case requires nuances to operate in a
// broad spectrum of browsers.
//
// - Firefox 3-13
// - Internet Explorer 6-9
// - iPad Safari 4.3
// - Lynx 2.8.7
} else {
    requestFlush = makeRequestCallFromTimer(flush);
}

// `requestFlush` requests that the high priority event queue be flushed as
// soon as possible.
// This is useful to prevent an error thrown in a task from stalling the event
// queue if the exception handled by Node.js’s
// `process.on("uncaughtException")` or by a domain.
rawAsap.requestFlush = requestFlush;

// To request a high priority event, we induce a mutation observer by toggling
// the text of a text node between "1" and "-1".
function makeRequestCallFromMutationObserver(callback) {
    var toggle = 1;
    var observer = new BrowserMutationObserver(callback);
    var node = document.createTextNode("");
    observer.observe(node, {characterData: true});
    return function requestCall() {
        toggle = -toggle;
        node.data = toggle;
    };
}

// The message channel technique was discovered by Malte Ubl and was the
// original foundation for this library.
// http://www.nonblocking.io/2011/06/windownexttick.html

// Safari 6.0.5 (at least) intermittently fails to create message ports on a
// page's first load. Thankfully, this version of Safari supports
// MutationObservers, so we don't need to fall back in that case.

// function makeRequestCallFromMessageChannel(callback) {
//     var channel = new MessageChannel();
//     channel.port1.onmessage = callback;
//     return function requestCall() {
//         channel.port2.postMessage(0);
//     };
// }

// For reasons explained above, we are also unable to use `setImmediate`
// under any circumstances.
// Even if we were, there is another bug in Internet Explorer 10.
// It is not sufficient to assign `setImmediate` to `requestFlush` because
// `setImmediate` must be called *by name* and therefore must be wrapped in a
// closure.
// Never forget.

// function makeRequestCallFromSetImmediate(callback) {
//     return function requestCall() {
//         setImmediate(callback);
//     };
// }

// Safari 6.0 has a problem where timers will get lost while the user is
// scrolling. This problem does not impact ASAP because Safari 6.0 supports
// mutation observers, so that implementation is used instead.
// However, if we ever elect to use timers in Safari, the prevalent work-around
// is to add a scroll event listener that calls for a flush.

// `setTimeout` does not call the passed callback if the delay is less than
// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
// even then.

function makeRequestCallFromTimer(callback) {
    return function requestCall() {
        // We dispatch a timeout with a specified delay of 0 for engines that
        // can reliably accommodate that request. This will usually be snapped
        // to a 4 milisecond delay, but once we're flushing, there's no delay
        // between events.
        var timeoutHandle = setTimeout(handleTimer, 0);
        // However, since this timer gets frequently dropped in Firefox
        // workers, we enlist an interval handle that will try to fire
        // an event 20 times per second until it succeeds.
        var intervalHandle = setInterval(handleTimer, 50);

        function handleTimer() {
            // Whichever timer succeeds will cancel both timers and
            // execute the callback.
            clearTimeout(timeoutHandle);
            clearInterval(intervalHandle);
            callback();
        }
    };
}

// This is for `asap.js` only.
// Its name will be periodically randomized to break any code that depends on
// its existence.
rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

// ASAP was originally a nextTick shim included in Q. This was factored out
// into this ASAP package. It was later adapted to RSVP which made further
// amendments. These decisions, particularly to marginalize MessageChannel and
// to capture the MutationObserver implementation in a closure, were integrated
// back into ASAP proper.
// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))

/***/ }),
/* 1197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
    value: true
});

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _inlineStylePrefixerStatic = __webpack_require__(1198);

var _inlineStylePrefixerStatic2 = _interopRequireDefault(_inlineStylePrefixerStatic);

var _util = __webpack_require__(1086);

/**
 * Generate CSS for a selector and some styles.
 *
 * This function handles the media queries, pseudo selectors, and descendant
 * styles that can be used in aphrodite styles.
 *
 * @param {string} selector: A base CSS selector for the styles to be generated
 *     with.
 * @param {Object} styleTypes: A list of properties of the return type of
 *     StyleSheet.create, e.g. [styles.red, styles.blue].
 * @param stringHandlers: See `generateCSSRuleset`
 * @param useImportant: See `generateCSSRuleset`
 *
 * To actually generate the CSS special-construct-less styles are passed to
 * `generateCSSRuleset`.
 *
 * For instance, a call to
 *
 *     generateCSSInner(".foo", {
 *       color: "red",
 *       "@media screen": {
 *         height: 20,
 *         ":hover": {
 *           backgroundColor: "black"
 *         }
 *       },
 *       ":active": {
 *         fontWeight: "bold",
 *         ">>bar": {
 *           _names: { "foo_bar": true },
 *           height: 10,
 *         }
 *       }
 *     });
 *
 * will make 5 calls to `generateCSSRuleset`:
 *
 *     generateCSSRuleset(".foo", { color: "red" }, ...)
 *     generateCSSRuleset(".foo:active", { fontWeight: "bold" }, ...)
 *     generateCSSRuleset(".foo:active .foo_bar", { height: 10 }, ...)
 *     // These 2 will be wrapped in @media screen {}
 *     generateCSSRuleset(".foo", { height: 20 }, ...)
 *     generateCSSRuleset(".foo:hover", { backgroundColor: "black" }, ...)
 */
var generateCSS = function generateCSS(selector, styleTypes, stringHandlers, useImportant) {
    var merged = styleTypes.reduce(_util.recursiveMerge);

    var declarations = {};
    var mediaQueries = {};
    var pseudoStyles = {};

    Object.keys(merged).forEach(function (key) {
        if (key[0] === ':') {
            pseudoStyles[key] = merged[key];
        } else if (key[0] === '@') {
            mediaQueries[key] = merged[key];
        } else {
            declarations[key] = merged[key];
        }
    });

    return generateCSSRuleset(selector, declarations, stringHandlers, useImportant) + Object.keys(pseudoStyles).map(function (pseudoSelector) {
        return generateCSSRuleset(selector + pseudoSelector, pseudoStyles[pseudoSelector], stringHandlers, useImportant);
    }).join("") + Object.keys(mediaQueries).map(function (mediaQuery) {
        var ruleset = generateCSS(selector, [mediaQueries[mediaQuery]], stringHandlers, useImportant);
        return mediaQuery + '{' + ruleset + '}';
    }).join("");
};

exports.generateCSS = generateCSS;
/**
 * Helper method of generateCSSRuleset to facilitate custom handling of certain
 * CSS properties. Used for e.g. font families.
 *
 * See generateCSSRuleset for usage and documentation of paramater types.
 */
var runStringHandlers = function runStringHandlers(declarations, stringHandlers) {
    var result = {};

    Object.keys(declarations).forEach(function (key) {
        // If a handler exists for this particular key, let it interpret
        // that value first before continuing
        if (stringHandlers && stringHandlers.hasOwnProperty(key)) {
            result[key] = stringHandlers[key](declarations[key]);
        } else {
            result[key] = declarations[key];
        }
    });

    return result;
};

/**
 * Generate a CSS ruleset with the selector and containing the declarations.
 *
 * This function assumes that the given declarations don't contain any special
 * children (such as media queries, pseudo-selectors, or descendant styles).
 *
 * Note that this method does not deal with nesting used for e.g.
 * psuedo-selectors or media queries. That responsibility is left to  the
 * `generateCSS` function.
 *
 * @param {string} selector: the selector associated with the ruleset
 * @param {Object} declarations: a map from camelCased CSS property name to CSS
 *     property value.
 * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS
 *     property name to a function which will map the given value to the value
 *     that is output.
 * @param {bool} useImportant: A boolean saying whether to append "!important"
 *     to each of the CSS declarations.
 * @returns {string} A string of raw CSS.
 *
 * Examples:
 *
 *    generateCSSRuleset(".blah", { color: "red" })
 *    -> ".blah{color: red !important;}"
 *    generateCSSRuleset(".blah", { color: "red" }, {}, false)
 *    -> ".blah{color: red}"
 *    generateCSSRuleset(".blah", { color: "red" }, {color: c => c.toUpperCase})
 *    -> ".blah{color: RED}"
 *    generateCSSRuleset(".blah:hover", { color: "red" })
 *    -> ".blah:hover{color: red}"
 */
var generateCSSRuleset = function generateCSSRuleset(selector, declarations, stringHandlers, useImportant) {
    var handledDeclarations = runStringHandlers(declarations, stringHandlers);

    var prefixedDeclarations = (0, _inlineStylePrefixerStatic2['default'])(handledDeclarations);

    var prefixedRules = (0, _util.flatten)((0, _util.objectToPairs)(prefixedDeclarations).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2);

        var key = _ref2[0];
        var value = _ref2[1];

        if (Array.isArray(value)) {
            var _ret = (function () {
                // inline-style-prefix-all returns an array when there should be
                // multiple rules, we will flatten to single rules

                var prefixedValues = [];
                var unprefixedValues = [];

                value.forEach(function (v) {
                    if (v.indexOf('-') === 0) {
                        prefixedValues.push(v);
                    } else {
                        unprefixedValues.push(v);
                    }
                });

                prefixedValues.sort();
                unprefixedValues.sort();

                return {
                    v: prefixedValues.concat(unprefixedValues).map(function (v) {
                        return [key, v];
                    })
                };
            })();

            if (typeof _ret === 'object') return _ret.v;
        }
        return [[key, value]];
    }));

    var rules = prefixedRules.map(function (_ref3) {
        var _ref32 = _slicedToArray(_ref3, 2);

        var key = _ref32[0];
        var value = _ref32[1];

        var stringValue = (0, _util.stringifyValue)(key, value);
        var ret = (0, _util.kebabifyStyleName)(key) + ':' + stringValue + ';';
        return useImportant === false ? ret : (0, _util.importantify)(ret);
    }).join("");

    if (rules) {
        return selector + '{' + rules + '}';
    } else {
        return "";
    }
};
exports.generateCSSRuleset = generateCSSRuleset;

/***/ }),
/* 1198 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1199)


/***/ }),
/* 1199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = prefixAll;

var _prefixProps = __webpack_require__(1122);

var _prefixProps2 = _interopRequireDefault(_prefixProps);

var _capitalizeString = __webpack_require__(1123);

var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

var _sortPrefixedStyle = __webpack_require__(1200);

var _sortPrefixedStyle2 = _interopRequireDefault(_sortPrefixedStyle);

var _position = __webpack_require__(1202);

var _position2 = _interopRequireDefault(_position);

var _calc = __webpack_require__(1203);

var _calc2 = _interopRequireDefault(_calc);

var _cursor = __webpack_require__(1204);

var _cursor2 = _interopRequireDefault(_cursor);

var _flex = __webpack_require__(1205);

var _flex2 = _interopRequireDefault(_flex);

var _sizing = __webpack_require__(1206);

var _sizing2 = _interopRequireDefault(_sizing);

var _gradient = __webpack_require__(1207);

var _gradient2 = _interopRequireDefault(_gradient);

var _transition = __webpack_require__(1208);

var _transition2 = _interopRequireDefault(_transition);

var _flexboxIE = __webpack_require__(1210);

var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

var _flexboxOld = __webpack_require__(1211);

var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// special flexbox specifications


var plugins = [_position2.default, _calc2.default, _cursor2.default, _sizing2.default, _gradient2.default, _transition2.default, _flexboxIE2.default, _flexboxOld2.default, _flex2.default];

/**
 * Returns a prefixed version of the style object using all vendor prefixes
 * @param {Object} styles - Style object that gets prefixed properties added
 * @returns {Object} - Style object with prefixed properties and values
 */
function prefixAll(styles) {
  Object.keys(styles).forEach(function (property) {
    var value = styles[property];
    if (value instanceof Object && !Array.isArray(value)) {
      // recurse through nested style objects
      styles[property] = prefixAll(value);
    } else {
      Object.keys(_prefixProps2.default).forEach(function (prefix) {
        var properties = _prefixProps2.default[prefix];
        // add prefixes if needed
        if (properties[property]) {
          styles[prefix + (0, _capitalizeString2.default)(property)] = value;
        }
      });
    }
  });

  Object.keys(styles).forEach(function (property) {
    [].concat(styles[property]).forEach(function (value, index) {
      // resolve every special plugins
      plugins.forEach(function (plugin) {
        return assignStyles(styles, plugin(property, value));
      });
    });
  });

  return (0, _sortPrefixedStyle2.default)(styles);
}

function assignStyles(base) {
  var extend = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  Object.keys(extend).forEach(function (property) {
    var baseValue = base[property];
    if (Array.isArray(baseValue)) {
      [].concat(extend[property]).forEach(function (value) {
        var valueIndex = baseValue.indexOf(value);
        if (valueIndex > -1) {
          base[property].splice(valueIndex, 1);
        }
        base[property].push(value);
      });
    } else {
      base[property] = extend[property];
    }
  });
}
module.exports = exports['default'];

/***/ }),
/* 1200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sortPrefixedStyle;

var _isPrefixedProperty = __webpack_require__(1201);

var _isPrefixedProperty2 = _interopRequireDefault(_isPrefixedProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sortPrefixedStyle(style) {
  return Object.keys(style).sort(function (left, right) {
    if ((0, _isPrefixedProperty2.default)(left) && !(0, _isPrefixedProperty2.default)(right)) {
      return -1;
    } else if (!(0, _isPrefixedProperty2.default)(left) && (0, _isPrefixedProperty2.default)(right)) {
      return 1;
    }
    return 0;
  }).reduce(function (sortedStyle, prop) {
    sortedStyle[prop] = style[prop];
    return sortedStyle;
  }, {});
}
module.exports = exports['default'];

/***/ }),
/* 1201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (property) {
  return property.match(/^(Webkit|Moz|O|ms)/) !== null;
};

module.exports = exports["default"];

/***/ }),
/* 1202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = position;
function position(property, value) {
  if (property === 'position' && value === 'sticky') {
    return { position: ['-webkit-sticky', 'sticky'] };
  }
}
module.exports = exports['default'];

/***/ }),
/* 1203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = calc;

var _joinPrefixedValue = __webpack_require__(1071);

var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

var _isPrefixedValue = __webpack_require__(1085);

var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function calc(property, value) {
  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('calc(') > -1) {
    return (0, _joinPrefixedValue2.default)(property, value, function (prefix, value) {
      return value.replace(/calc\(/g, prefix + 'calc(');
    });
  }
}
module.exports = exports['default'];

/***/ }),
/* 1204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cursor;

var _joinPrefixedValue = __webpack_require__(1071);

var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var values = {
  'zoom-in': true,
  'zoom-out': true,
  grab: true,
  grabbing: true
};

function cursor(property, value) {
  if (property === 'cursor' && values[value]) {
    return (0, _joinPrefixedValue2.default)(property, value);
  }
}
module.exports = exports['default'];

/***/ }),
/* 1205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = flex;
var values = { flex: true, 'inline-flex': true };

function flex(property, value) {
  if (property === 'display' && values[value]) {
    return {
      display: ['-webkit-box', '-moz-box', '-ms-' + value + 'box', '-webkit-' + value, value]
    };
  }
}
module.exports = exports['default'];

/***/ }),
/* 1206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sizing;

var _joinPrefixedValue = __webpack_require__(1071);

var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var properties = {
  maxHeight: true,
  maxWidth: true,
  width: true,
  height: true,
  columnWidth: true,
  minWidth: true,
  minHeight: true
};
var values = {
  'min-content': true,
  'max-content': true,
  'fill-available': true,
  'fit-content': true,
  'contain-floats': true
};

function sizing(property, value) {
  if (properties[property] && values[value]) {
    return (0, _joinPrefixedValue2.default)(property, value);
  }
}
module.exports = exports['default'];

/***/ }),
/* 1207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = gradient;

var _joinPrefixedValue = __webpack_require__(1071);

var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

var _isPrefixedValue = __webpack_require__(1085);

var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

function gradient(property, value) {
  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.match(values) !== null) {
    return (0, _joinPrefixedValue2.default)(property, value);
  }
}
module.exports = exports['default'];

/***/ }),
/* 1208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = transition;

var _hyphenateStyleName = __webpack_require__(1209);

var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

var _capitalizeString = __webpack_require__(1123);

var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

var _isPrefixedValue = __webpack_require__(1085);

var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

var _prefixProps = __webpack_require__(1122);

var _prefixProps2 = _interopRequireDefault(_prefixProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var properties = {
  transition: true,
  transitionProperty: true,
  WebkitTransition: true,
  WebkitTransitionProperty: true
};

function transition(property, value) {
  // also check for already prefixed transitions
  if (typeof value === 'string' && properties[property]) {
    var _ref2;

    var outputValue = prefixValue(value);
    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (value) {
      return value.match(/-moz-|-ms-/) === null;
    }).join(',');

    // if the property is already prefixed
    if (property.indexOf('Webkit') > -1) {
      return _defineProperty({}, property, webkitOutput);
    }

    return _ref2 = {}, _defineProperty(_ref2, 'Webkit' + (0, _capitalizeString2.default)(property), webkitOutput), _defineProperty(_ref2, property, outputValue), _ref2;
  }
}

function prefixValue(value) {
  if ((0, _isPrefixedValue2.default)(value)) {
    return value;
  }

  // only split multi values, not cubic beziers
  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

  // iterate each single value and check for transitioned properties
  // that need to be prefixed as well
  multipleValues.forEach(function (val, index) {
    multipleValues[index] = Object.keys(_prefixProps2.default).reduce(function (out, prefix) {
      var dashCasePrefix = '-' + prefix.toLowerCase() + '-';

      Object.keys(_prefixProps2.default[prefix]).forEach(function (prop) {
        var dashCaseProperty = (0, _hyphenateStyleName2.default)(prop);

        if (val.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
          // join all prefixes and create a new value
          out = val.replace(dashCaseProperty, dashCasePrefix + dashCaseProperty) + ',' + out;
        }
      });
      return out;
    }, val);
  });

  return multipleValues.join(',');
}
module.exports = exports['default'];

/***/ }),
/* 1209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache = {};

function hyphenateStyleName(string) {
    return string in cache
    ? cache[string]
    : cache[string] = string
      .replace(uppercasePattern, '-$&')
      .toLowerCase()
      .replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;


/***/ }),
/* 1210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = flexboxIE;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var alternativeValues = {
  'space-around': 'distribute',
  'space-between': 'justify',
  'flex-start': 'start',
  'flex-end': 'end'
};
var alternativeProps = {
  alignContent: 'msFlexLinePack',
  alignSelf: 'msFlexItemAlign',
  alignItems: 'msFlexAlign',
  justifyContent: 'msFlexPack',
  order: 'msFlexOrder',
  flexGrow: 'msFlexPositive',
  flexShrink: 'msFlexNegative',
  flexBasis: 'msPreferredSize'
};

function flexboxIE(property, value) {
  if (alternativeProps[property]) {
    return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
  }
}
module.exports = exports['default'];

/***/ }),
/* 1211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = flexboxOld;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var alternativeValues = {
  'space-around': 'justify',
  'space-between': 'justify',
  'flex-start': 'start',
  'flex-end': 'end',
  'wrap-reverse': 'multiple',
  wrap: 'multiple'
};

var alternativeProps = {
  alignItems: 'WebkitBoxAlign',
  justifyContent: 'WebkitBoxPack',
  flexWrap: 'WebkitBoxLines'
};

function flexboxOld(property, value) {
  if (property === 'flexDirection' && typeof value === 'string') {
    return {
      WebkitBoxOrient: value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
      WebkitBoxDirection: value.indexOf('reverse') > -1 ? 'reverse' : 'normal'
    };
  }
  if (alternativeProps[property]) {
    return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
  }
}
module.exports = exports['default'];

/***/ }),
/* 1212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
    value: true
});

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var _util = __webpack_require__(1086);

var _inject = __webpack_require__(1121);

var StyleSheet = {
    create: function create(sheetDefinition) {
        return (0, _util.mapObj)(sheetDefinition, function (_ref) {
            var _ref2 = _slicedToArray(_ref, 2);

            var key = _ref2[0];
            var val = _ref2[1];

            return [key, {
                // TODO(emily): Make a 'production' mode which doesn't prepend
                // the class name here, to make the generated CSS smaller.
                _name: key + '_' + (0, _util.hashObject)(val),
                _definition: val
            }];
        });
    },

    rehydrate: function rehydrate() {
        var renderedClassNames = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

        (0, _inject.addRenderedClassNames)(renderedClassNames);
    }
};

/**
 * Utilities for using Aphrodite server-side.
 */
var StyleSheetServer = {
    renderStatic: function renderStatic(renderFunc) {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
        var html = renderFunc();
        var cssContent = (0, _inject.flushToString)();

        return {
            html: html,
            css: {
                content: cssContent,
                renderedClassNames: (0, _inject.getRenderedClassNames)()
            }
        };
    }
};

/**
 * Utilities for using Aphrodite in tests.
 *
 * Not meant to be used in production.
 */
var StyleSheetTestUtils = {
    /**
     * Prevent styles from being injected into the DOM.
     *
     * This is useful in situations where you'd like to test rendering UI
     * components which use Aphrodite without any of the side-effects of
     * Aphrodite happening. Particularly useful for testing the output of
     * components when you have no DOM, e.g. testing in Node without a fake DOM.
     *
     * Should be paired with a subsequent call to
     * clearBufferAndResumeStyleInjection.
     */
    suppressStyleInjection: function suppressStyleInjection() {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
    },

    /**
     * Opposite method of preventStyleInject.
     */
    clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {
        (0, _inject.reset)();
    }
};

var css = function css() {
    for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
        styleDefinitions[_key] = arguments[_key];
    }

    var useImportant = true; // Append !important to all style definitions
    return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
};

exports['default'] = {
    StyleSheet: StyleSheet,
    StyleSheetServer: StyleSheetServer,
    StyleSheetTestUtils: StyleSheetTestUtils,
    css: css
};
module.exports = exports['default'];

/***/ }),
/* 1213 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1214);


/***/ }),
/* 1214 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);
var PropTypes = __webpack_require__(2);
var createClass = __webpack_require__(243);

/*
	NOTES

	1. Stop content jumping around when overflow is hidden on the body.
	2. Mobile Safari ignores { overflow: hidden } declaration on the body.
	3. Allow scroll on provided target.
*/

var listenerOptions = { capture: false, passive: false };
var ScrollLock = createClass({
	propTypes: {
		scrollTarget: PropTypes.object,
		preventContentJumping: PropTypes.bool
	},
	componentDidMount: function () {
		if (!canUseDom()) return;

		var scrollTarget = this.props.scrollTarget;
		var target = document.body;

		if (this.props.preventContentJumping) {
			var scrollbarWidth = window.innerWidth - document.body.clientWidth; // 1.

			target.style.paddingRight = scrollbarWidth + 'px';
		}
		target.style.overflowY = 'hidden';

		target.addEventListener('touchmove', preventTouchMove, listenerOptions); // 2.

		if (scrollTarget) {
			scrollTarget.addEventListener('touchstart', preventInertiaScroll, listenerOptions); // 3.
			scrollTarget.addEventListener('touchmove', allowTouchMove, listenerOptions); // 3.
		}
	},
	componentWillUnmount: function () {
		if (!canUseDom()) return;

		var scrollTarget = this.props.scrollTarget;
		var target = document.body;

		if (this.props.preventContentJumping) {
			target.style.paddingRight = '';
		}
		target.style.overflowY = '';

		target.removeEventListener('touchmove', preventTouchMove, listenerOptions);

		if (scrollTarget) {
			scrollTarget.removeEventListener('touchstart', preventInertiaScroll, listenerOptions);
			scrollTarget.removeEventListener('touchmove', allowTouchMove, listenerOptions);
		}
	},
	render: function () {
		return null;
	}
});

ScrollLock.defaultProps = {
 preventContentJumping: true
}

function preventTouchMove (e) {
	e.preventDefault();
};

function allowTouchMove (e) {
	e.stopPropagation();
};

function preventInertiaScroll () {
	var top = this.scrollTop;
	var totalScroll = this.scrollHeight;
	var currentScroll = top + this.offsetHeight;

	if (top === 0) {
		this.scrollTop = 1;
	} else if (currentScroll === totalScroll) {
		this.scrollTop = top - 1;
	}
}

function canUseDom () {
	return !!(
		typeof window !== 'undefined'
		&& window.document
		&& window.document.createElement
	);
};

module.exports = ScrollLock;


/***/ }),
/* 1215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
	Bind multiple component methods:

	* @param {this} context
	* @param {Array} functions

	constructor() {
		...
		bindFunctions.call(this, ['handleClick', 'handleOther']);
	}
*/



module.exports = function bindFunctions(functions) {
	var _this = this;

	functions.forEach(function (f) {
		return _this[f] = _this[f].bind(_this);
	});
};

/***/ }),
/* 1216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Return true if window + document



module.exports = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ }),
/* 1217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function deepMerge(target) {
	var source = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	var extended = _extends({}, target);

	Object.keys(source).forEach(function (key) {
		if (typeof source[key] !== 'object' || !source[key]) {
			extended[key] = source[key];
		} else {
			if (!target[key]) {
				extended[key] = source[key];
			} else {
				extended[key] = deepMerge(target[key], source[key]);
			}
		}
	});

	return extended;
}

module.exports = deepMerge;

/***/ }),
/* 1218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
	arrowLeft: __webpack_require__(1219),
	arrowRight: __webpack_require__(1220),
	close: __webpack_require__(1221)
};

/***/ }),
/* 1219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

exports["default"] = function (fill) {
	return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n\t\t<path d=\"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"/>\n\t</svg>";
};

module.exports = exports["default"];

/***/ }),
/* 1220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

exports["default"] = function (fill) {
	return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n\t\t<path d=\"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"/>\n\t</svg>";
};

module.exports = exports["default"];

/***/ }),
/* 1221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

exports["default"] = function (fill) {
	return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">\n\t\t<path d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"/>\n\t</svg>";
};

module.exports = exports["default"];

/***/ }),
/* 1222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _utils = __webpack_require__(1059);

function Container(_ref, _ref2) {
	var props = _objectWithoutProperties(_ref, []);

	var theme = _ref2.theme;

	var classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

	return _react2['default'].createElement('div', _extends({ id: 'lightboxBackdrop',
		className: (0, _aphroditeNoImportant.css)(classes.container)
	}, props));
}

Container.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	container: {
		alignItems: 'center',
		backgroundColor: _theme2['default'].container.background,
		boxSizing: 'border-box',
		display: 'flex',
		height: '100%',
		justifyContent: 'center',
		left: 0,
		paddingBottom: _theme2['default'].container.gutter.vertical,
		paddingLeft: _theme2['default'].container.gutter.horizontal,
		paddingRight: _theme2['default'].container.gutter.horizontal,
		paddingTop: _theme2['default'].container.gutter.vertical,
		position: 'fixed',
		top: 0,
		width: '100%',
		zIndex: _theme2['default'].container.zIndex
	}
};

module.exports = Container;

/***/ }),
/* 1223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _utils = __webpack_require__(1059);

function Footer(_ref, _ref2) {
	var caption = _ref.caption;
	var countCurrent = _ref.countCurrent;
	var countSeparator = _ref.countSeparator;
	var countTotal = _ref.countTotal;
	var showCount = _ref.showCount;

	var props = _objectWithoutProperties(_ref, ['caption', 'countCurrent', 'countSeparator', 'countTotal', 'showCount']);

	var theme = _ref2.theme;

	if (!caption && !showCount) return null;

	var classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

	var imageCount = showCount ? _react2['default'].createElement(
		'div',
		{ className: (0, _aphroditeNoImportant.css)(classes.footerCount) },
		countCurrent,
		countSeparator,
		countTotal
	) : _react2['default'].createElement('span', null);

	return _react2['default'].createElement(
		'div',
		_extends({ className: (0, _aphroditeNoImportant.css)(classes.footer) }, props),
		caption ? _react2['default'].createElement(
			'figcaption',
			{ className: (0, _aphroditeNoImportant.css)(classes.footerCaption) },
			caption
		) : _react2['default'].createElement('span', null),
		imageCount
	);
}

Footer.propTypes = {
	caption: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),
	countCurrent: _propTypes2['default'].number,
	countSeparator: _propTypes2['default'].string,
	countTotal: _propTypes2['default'].number,
	showCount: _propTypes2['default'].bool
};
Footer.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	footer: {
		boxSizing: 'border-box',
		color: _theme2['default'].footer.color,
		cursor: 'auto',
		display: 'flex',
		justifyContent: 'space-between',
		left: 0,
		lineHeight: 1.3,
		paddingBottom: _theme2['default'].footer.gutter.vertical,
		paddingLeft: _theme2['default'].footer.gutter.horizontal,
		paddingRight: _theme2['default'].footer.gutter.horizontal,
		paddingTop: _theme2['default'].footer.gutter.vertical
	},
	footerCount: {
		color: _theme2['default'].footer.count.color,
		fontSize: _theme2['default'].footer.count.fontSize,
		paddingLeft: '1em' },
	// add a small gutter for the caption
	footerCaption: {
		flex: '1 1 0'
	}
};

module.exports = Footer;

/***/ }),
/* 1224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _utils = __webpack_require__(1059);

var _Icon = __webpack_require__(1125);

var _Icon2 = _interopRequireDefault(_Icon);

function Header(_ref, _ref2) {
	var customControls = _ref.customControls;
	var onClose = _ref.onClose;
	var showCloseButton = _ref.showCloseButton;
	var closeButtonTitle = _ref.closeButtonTitle;

	var props = _objectWithoutProperties(_ref, ['customControls', 'onClose', 'showCloseButton', 'closeButtonTitle']);

	var theme = _ref2.theme;

	var classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

	return _react2['default'].createElement(
		'div',
		_extends({ className: (0, _aphroditeNoImportant.css)(classes.header) }, props),
		customControls ? customControls : _react2['default'].createElement('span', null),
		!!showCloseButton && _react2['default'].createElement(
			'button',
			{
				title: closeButtonTitle,
				className: (0, _aphroditeNoImportant.css)(classes.close),
				onClick: onClose
			},
			_react2['default'].createElement(_Icon2['default'], { fill: !!theme.close && theme.close.fill || _theme2['default'].close.fill, type: 'close' })
		)
	);
}

Header.propTypes = {
	customControls: _propTypes2['default'].array,
	onClose: _propTypes2['default'].func.isRequired,
	showCloseButton: _propTypes2['default'].bool
};
Header.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	header: {
		display: 'flex',
		justifyContent: 'space-between',
		height: _theme2['default'].header.height
	},
	close: {
		background: 'none',
		border: 'none',
		cursor: 'pointer',
		outline: 'none',
		position: 'relative',
		top: 0,
		verticalAlign: 'bottom',

		// increase hit area
		height: 40,
		marginRight: -10,
		padding: 10,
		width: 40
	}
};

module.exports = Header;

/***/ }),
/* 1225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _Thumbnail = __webpack_require__(1226);

var _Thumbnail2 = _interopRequireDefault(_Thumbnail);

var _Arrow = __webpack_require__(1124);

var _Arrow2 = _interopRequireDefault(_Arrow);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var classes = _aphroditeNoImportant.StyleSheet.create({
	paginatedThumbnails: {
		bottom: _theme2['default'].container.gutter.vertical,
		height: _theme2['default'].thumbnail.size,
		padding: '0 50px',
		position: 'absolute',
		textAlign: 'center',
		whiteSpace: 'nowrap',
		left: '50%',
		transform: 'translateX(-50%)'
	}
});

var arrowStyles = {
	height: _theme2['default'].thumbnail.size + _theme2['default'].thumbnail.gutter * 2,
	width: 40
};

var PaginatedThumbnails = (function (_Component) {
	_inherits(PaginatedThumbnails, _Component);

	function PaginatedThumbnails(props) {
		_classCallCheck(this, PaginatedThumbnails);

		_get(Object.getPrototypeOf(PaginatedThumbnails.prototype), 'constructor', this).call(this, props);

		this.state = {
			hasCustomPage: false
		};

		this.gotoPrev = this.gotoPrev.bind(this);
		this.gotoNext = this.gotoNext.bind(this);
	}

	_createClass(PaginatedThumbnails, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			// Component should be controlled, flush state when currentImage changes
			if (nextProps.currentImage !== this.props.currentImage) {
				this.setState({
					hasCustomPage: false
				});
			}
		}

		// ==============================
		// METHODS
		// ==============================

	}, {
		key: 'getFirst',
		value: function getFirst() {
			var _props = this.props;
			var currentImage = _props.currentImage;
			var offset = _props.offset;

			if (this.state.hasCustomPage) {
				return this.clampFirst(this.state.first);
			}
			return this.clampFirst(currentImage - offset);
		}
	}, {
		key: 'setFirst',
		value: function setFirst(event, newFirst) {
			var first = this.state.first;

			if (event) {
				event.preventDefault();
				event.stopPropagation();
			}

			if (first === newFirst) return;

			this.setState({
				hasCustomPage: true,
				first: newFirst
			});
		}
	}, {
		key: 'gotoPrev',
		value: function gotoPrev(event) {
			this.setFirst(event, this.getFirst() - this.props.offset);
		}
	}, {
		key: 'gotoNext',
		value: function gotoNext(event) {
			this.setFirst(event, this.getFirst() + this.props.offset);
		}
	}, {
		key: 'clampFirst',
		value: function clampFirst(value) {
			var _props2 = this.props;
			var images = _props2.images;
			var offset = _props2.offset;

			var totalCount = 2 * offset + 1; // show $offset extra thumbnails on each side

			if (value < 0) {
				return 0;
			} else if (value + totalCount > images.length) {
				// Too far
				return images.length - totalCount;
			} else {
				return value;
			}
		}

		// ==============================
		// RENDERERS
		// ==============================

	}, {
		key: 'renderArrowPrev',
		value: function renderArrowPrev() {
			if (this.getFirst() <= 0) return null;

			return _react2['default'].createElement(_Arrow2['default'], {
				direction: 'left',
				size: 'small',
				icon: 'arrowLeft',
				onClick: this.gotoPrev,
				style: arrowStyles,
				title: 'Previous (Left arrow key)',
				type: 'button'
			});
		}
	}, {
		key: 'renderArrowNext',
		value: function renderArrowNext() {
			var _props3 = this.props;
			var offset = _props3.offset;
			var images = _props3.images;

			var totalCount = 2 * offset + 1;
			if (this.getFirst() + totalCount >= images.length) return null;

			return _react2['default'].createElement(_Arrow2['default'], {
				direction: 'right',
				size: 'small',
				icon: 'arrowRight',
				onClick: this.gotoNext,
				style: arrowStyles,
				title: 'Next (Right arrow key)',
				type: 'button'
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _props4 = this.props;
			var images = _props4.images;
			var currentImage = _props4.currentImage;
			var onClickThumbnail = _props4.onClickThumbnail;
			var offset = _props4.offset;

			var totalCount = 2 * offset + 1; // show $offset extra thumbnails on each side
			var thumbnails = [];
			var baseOffset = 0;
			if (images.length <= totalCount) {
				thumbnails = images;
			} else {
				// Try to center current image in list
				baseOffset = this.getFirst();
				thumbnails = images.slice(baseOffset, baseOffset + totalCount);
			}

			return _react2['default'].createElement(
				'div',
				{ className: (0, _aphroditeNoImportant.css)(classes.paginatedThumbnails) },
				this.renderArrowPrev(),
				thumbnails.map(function (img, idx) {
					return _react2['default'].createElement(_Thumbnail2['default'], _extends({ key: baseOffset + idx
					}, img, {
						index: baseOffset + idx,
						onClick: onClickThumbnail,
						active: baseOffset + idx === currentImage }));
				}),
				this.renderArrowNext()
			);
		}
	}]);

	return PaginatedThumbnails;
})(_react.Component);

exports['default'] = PaginatedThumbnails;

PaginatedThumbnails.propTypes = {
	currentImage: _propTypes2['default'].number,
	images: _propTypes2['default'].array,
	offset: _propTypes2['default'].number,
	onClickThumbnail: _propTypes2['default'].func.isRequired
};
module.exports = exports['default'];

/***/ }),
/* 1226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _aphroditeNoImportant = __webpack_require__(1053);

var _theme = __webpack_require__(1054);

var _theme2 = _interopRequireDefault(_theme);

var _utils = __webpack_require__(1059);

function Thumbnail(_ref, _ref2) {
	var index = _ref.index;
	var src = _ref.src;
	var thumbnail = _ref.thumbnail;
	var active = _ref.active;
	var onClick = _ref.onClick;
	var theme = _ref2.theme;

	var url = thumbnail ? thumbnail : src;
	var classes = _aphroditeNoImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

	return _react2['default'].createElement('div', {
		className: (0, _aphroditeNoImportant.css)(classes.thumbnail, active && classes.thumbnail__active),
		onClick: function (e) {
			e.preventDefault();
			e.stopPropagation();
			onClick(index);
		},
		style: { backgroundImage: 'url("' + url + '")' }
	});
}

Thumbnail.propTypes = {
	active: _propTypes2['default'].bool,
	index: _propTypes2['default'].number,
	onClick: _propTypes2['default'].func.isRequired,
	src: _propTypes2['default'].string,
	thumbnail: _propTypes2['default'].string
};

Thumbnail.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};

var defaultStyles = {
	thumbnail: {
		backgroundPosition: 'center',
		backgroundSize: 'cover',
		borderRadius: 2,
		boxShadow: 'inset 0 0 0 1px hsla(0,0%,100%,.2)',
		cursor: 'pointer',
		display: 'inline-block',
		height: _theme2['default'].thumbnail.size,
		margin: _theme2['default'].thumbnail.gutter,
		overflow: 'hidden',
		width: _theme2['default'].thumbnail.size
	},
	thumbnail__active: {
		boxShadow: 'inset 0 0 0 2px ' + _theme2['default'].thumbnail.activeBorderColor
	}
};

exports['default'] = Thumbnail;
module.exports = exports['default'];

/***/ }),
/* 1227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactTransitionGroupCSSTransitionGroup = __webpack_require__(1228);

var _reactTransitionGroupCSSTransitionGroup2 = _interopRequireDefault(_reactTransitionGroupCSSTransitionGroup);

var _reactDom = __webpack_require__(61);

var _PassContext = __webpack_require__(1235);

var _PassContext2 = _interopRequireDefault(_PassContext);

var Portal = (function (_Component) {
	_inherits(Portal, _Component);

	function Portal() {
		_classCallCheck(this, Portal);

		_get(Object.getPrototypeOf(Portal.prototype), 'constructor', this).call(this);
		this.portalElement = null;
	}

	_createClass(Portal, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var p = document.createElement('div');
			document.body.appendChild(p);
			this.portalElement = p;
			this.componentDidUpdate();
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate() {
			// Animate fade on mount/unmount
			var duration = 200;
			var styles = '\n\t\t\t\t.fade-enter { opacity: 0.01; }\n\t\t\t\t.fade-enter.fade-enter-active { opacity: 1; transition: opacity ' + duration + 'ms; }\n\t\t\t\t.fade-leave { opacity: 1; }\n\t\t\t\t.fade-leave.fade-leave-active { opacity: 0.01; transition: opacity ' + duration + 'ms; }\n\t\t';

			(0, _reactDom.render)(_react2['default'].createElement(
				_PassContext2['default'],
				{ context: this.context },
				_react2['default'].createElement(
					'div',
					null,
					_react2['default'].createElement(
						'style',
						null,
						styles
					),
					_react2['default'].createElement(_reactTransitionGroupCSSTransitionGroup2['default'], _extends({
						component: 'div',
						transitionName: 'fade',
						transitionEnterTimeout: duration,
						transitionLeaveTimeout: duration
					}, this.props))
				)
			), this.portalElement);
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			document.body.removeChild(this.portalElement);
		}
	}, {
		key: 'render',
		value: function render() {
			return null;
		}
	}]);

	return Portal;
})(_react.Component);

exports['default'] = Portal;

Portal.contextTypes = {
	theme: _propTypes2['default'].object.isRequired
};
module.exports = exports['default'];

/***/ }),
/* 1228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TransitionGroup = __webpack_require__(1229);

var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

var _CSSTransitionGroupChild = __webpack_require__(1232);

var _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);

var _PropTypes = __webpack_require__(1127);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  transitionName: _PropTypes.nameShape.isRequired,

  transitionAppear: _propTypes2.default.bool,
  transitionEnter: _propTypes2.default.bool,
  transitionLeave: _propTypes2.default.bool,
  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),
  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),
  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')
};

var defaultProps = {
  transitionAppear: false,
  transitionEnter: true,
  transitionLeave: true
};

var CSSTransitionGroup = function (_React$Component) {
  _inherits(CSSTransitionGroup, _React$Component);

  function CSSTransitionGroup() {
    var _temp, _this, _ret;

    _classCallCheck(this, CSSTransitionGroup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {
      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {
        name: _this.props.transitionName,
        appear: _this.props.transitionAppear,
        enter: _this.props.transitionEnter,
        leave: _this.props.transitionLeave,
        appearTimeout: _this.props.transitionAppearTimeout,
        enterTimeout: _this.props.transitionEnterTimeout,
        leaveTimeout: _this.props.transitionLeaveTimeout
      }, child);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  // We need to provide this childFactory so that
  // ReactCSSTransitionGroupChild can receive updates to name, enter, and
  // leave while it is leaving.


  CSSTransitionGroup.prototype.render = function render() {
    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));
  };

  return CSSTransitionGroup;
}(_react2.default.Component);

CSSTransitionGroup.displayName = 'CSSTransitionGroup';


CSSTransitionGroup.propTypes =  true ? propTypes : {};
CSSTransitionGroup.defaultProps = defaultProps;

exports.default = CSSTransitionGroup;
module.exports = exports['default'];

/***/ }),
/* 1229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _chainFunction = __webpack_require__(1230);

var _chainFunction2 = _interopRequireDefault(_chainFunction);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _warning = __webpack_require__(22);

var _warning2 = _interopRequireDefault(_warning);

var _ChildMapping = __webpack_require__(1231);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  component: _propTypes2.default.any,
  childFactory: _propTypes2.default.func,
  children: _propTypes2.default.node
};

var defaultProps = {
  component: 'span',
  childFactory: function childFactory(child) {
    return child;
  }
};

var TransitionGroup = function (_React$Component) {
  _inherits(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    _classCallCheck(this, TransitionGroup);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    _this.performAppear = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillAppear) {
        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));
      } else {
        _this._handleDoneAppearing(key, component);
      }
    };

    _this._handleDoneAppearing = function (key, component) {
      if (component.componentDidAppear) {
        component.componentDidAppear();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        // This was removed before it had fully appeared. Remove it.
        _this.performLeave(key, component);
      }
    };

    _this.performEnter = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillEnter) {
        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));
      } else {
        _this._handleDoneEntering(key, component);
      }
    };

    _this._handleDoneEntering = function (key, component) {
      if (component.componentDidEnter) {
        component.componentDidEnter();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        // This was removed before it had fully entered. Remove it.
        _this.performLeave(key, component);
      }
    };

    _this.performLeave = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillLeave) {
        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));
      } else {
        // Note that this is somewhat dangerous b/c it calls setState()
        // again, effectively mutating the component before all the work
        // is done.
        _this._handleDoneLeaving(key, component);
      }
    };

    _this._handleDoneLeaving = function (key, component) {
      if (component.componentDidLeave) {
        component.componentDidLeave();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
        // This entered again before it fully left. Add it again.
        _this.keysToEnter.push(key);
      } else {
        _this.setState(function (state) {
          var newChildren = _extends({}, state.children);
          delete newChildren[key];
          return { children: newChildren };
        });
      }
    };

    _this.childRefs = Object.create(null);

    _this.state = {
      children: (0, _ChildMapping.getChildMapping)(props.children)
    };
    return _this;
  }

  TransitionGroup.prototype.componentWillMount = function componentWillMount() {
    this.currentlyTransitioningKeys = {};
    this.keysToEnter = [];
    this.keysToLeave = [];
  };

  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
    var initialChildMapping = this.state.children;
    for (var key in initialChildMapping) {
      if (initialChildMapping[key]) {
        this.performAppear(key, this.childRefs[key]);
      }
    }
  };

  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
    var prevChildMapping = this.state.children;

    this.setState({
      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)
    });

    for (var key in nextChildMapping) {
      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
        this.keysToEnter.push(key);
      }
    }

    for (var _key in prevChildMapping) {
      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);
      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {
        this.keysToLeave.push(_key);
      }
    }

    // If we want to someday check for reordering, we could do it here.
  };

  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
    var _this2 = this;

    var keysToEnter = this.keysToEnter;
    this.keysToEnter = [];
    keysToEnter.forEach(function (key) {
      return _this2.performEnter(key, _this2.childRefs[key]);
    });

    var keysToLeave = this.keysToLeave;
    this.keysToLeave = [];
    keysToLeave.forEach(function (key) {
      return _this2.performLeave(key, _this2.childRefs[key]);
    });
  };

  TransitionGroup.prototype.render = function render() {
    var _this3 = this;

    // TODO: we could get rid of the need for the wrapper node
    // by cloning a single child
    var childrenToRender = [];

    var _loop = function _loop(key) {
      var child = _this3.state.children[key];
      if (child) {
        var isCallbackRef = typeof child.ref !== 'string';
        var factoryChild = _this3.props.childFactory(child);
        var ref = function ref(r) {
          _this3.childRefs[key] = r;
        };

         true ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;

        // Always chaining the refs leads to problems when the childFactory
        // wraps the child. The child ref callback gets called twice with the
        // wrapper and the child. So we only need to chain the ref if the
        // factoryChild is not different from child.
        if (factoryChild === child && isCallbackRef) {
          ref = (0, _chainFunction2.default)(child.ref, ref);
        }

        // You may need to apply reactive updates to a child as it is leaving.
        // The normal React way to do it won't work since the child will have
        // already been removed. In case you need this behavior you can provide
        // a childFactory function to wrap every child, even the ones that are
        // leaving.
        childrenToRender.push(_react2.default.cloneElement(factoryChild, {
          key: key,
          ref: ref
        }));
      }
    };

    for (var key in this.state.children) {
      _loop(key);
    }

    // Do not forward TransitionGroup props to primitive DOM nodes
    var props = _extends({}, this.props);
    delete props.transitionLeave;
    delete props.transitionName;
    delete props.transitionAppear;
    delete props.transitionEnter;
    delete props.childFactory;
    delete props.transitionLeaveTimeout;
    delete props.transitionEnterTimeout;
    delete props.transitionAppearTimeout;
    delete props.component;

    return _react2.default.createElement(this.props.component, props, childrenToRender);
  };

  return TransitionGroup;
}(_react2.default.Component);

TransitionGroup.displayName = 'TransitionGroup';


TransitionGroup.propTypes =  true ? propTypes : {};
TransitionGroup.defaultProps = defaultProps;

exports.default = TransitionGroup;
module.exports = exports['default'];

/***/ }),
/* 1230 */
/***/ (function(module, exports) {


module.exports = function chain(){
  var len = arguments.length
  var args = [];

  for (var i = 0; i < len; i++)
    args[i] = arguments[i]

  args = args.filter(function(fn){ return fn != null })

  if (args.length === 0) return undefined
  if (args.length === 1) return args[0]

  return args.reduce(function(current, next){
    return function chainedFunction() {
      current.apply(this, arguments);
      next.apply(this, arguments);
    };
  })
}


/***/ }),
/* 1231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;

var _react = __webpack_require__(0);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children) {
  if (!children) {
    return children;
  }
  var result = {};
  _react.Children.map(children, function (child) {
    return child;
  }).forEach(function (child) {
    result[child.key] = child;
  });
  return result;
}

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    if (next.hasOwnProperty(key)) {
      return next[key];
    }

    return prev[key];
  }

  // For each key of `next`, the list of keys to insert before that key in
  // the combined list
  var nextKeysPending = {};

  var pendingKeys = [];
  for (var prevKey in prev) {
    if (next.hasOwnProperty(prevKey)) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i = void 0;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending.hasOwnProperty(nextKey)) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }

  // Finally, add the keys which didn't appear before any key in `next`
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

/***/ }),
/* 1232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _addClass = __webpack_require__(408);

var _addClass2 = _interopRequireDefault(_addClass);

var _removeClass = __webpack_require__(409);

var _removeClass2 = _interopRequireDefault(_removeClass);

var _requestAnimationFrame = __webpack_require__(1233);

var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);

var _properties = __webpack_require__(1234);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(61);

var _PropTypes = __webpack_require__(1127);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var events = [];
if (_properties.transitionEnd) events.push(_properties.transitionEnd);
if (_properties.animationEnd) events.push(_properties.animationEnd);

function addEndListener(node, listener) {
  if (events.length) {
    events.forEach(function (e) {
      return node.addEventListener(e, listener, false);
    });
  } else {
    setTimeout(listener, 0);
  }

  return function () {
    if (!events.length) return;
    events.forEach(function (e) {
      return node.removeEventListener(e, listener, false);
    });
  };
}

var propTypes = {
  children: _propTypes2.default.node,
  name: _PropTypes.nameShape.isRequired,

  // Once we require timeouts to be specified, we can remove the
  // boolean flags (appear etc.) and just accept a number
  // or a bool for the timeout flags (appearTimeout etc.)
  appear: _propTypes2.default.bool,
  enter: _propTypes2.default.bool,
  leave: _propTypes2.default.bool,
  appearTimeout: _propTypes2.default.number,
  enterTimeout: _propTypes2.default.number,
  leaveTimeout: _propTypes2.default.number
};

var CSSTransitionGroupChild = function (_React$Component) {
  _inherits(CSSTransitionGroupChild, _React$Component);

  function CSSTransitionGroupChild() {
    var _temp, _this, _ret;

    _classCallCheck(this, CSSTransitionGroupChild);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {
      if (_this.props.appear) {
        _this.transition('appear', done, _this.props.appearTimeout);
      } else {
        done();
      }
    }, _this.componentWillEnter = function (done) {
      if (_this.props.enter) {
        _this.transition('enter', done, _this.props.enterTimeout);
      } else {
        done();
      }
    }, _this.componentWillLeave = function (done) {
      if (_this.props.leave) {
        _this.transition('leave', done, _this.props.leaveTimeout);
      } else {
        done();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {
    this.classNameAndNodeQueue = [];
    this.transitionTimeouts = [];
  };

  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unmounted = true;

    if (this.timeout) {
      clearTimeout(this.timeout);
    }
    this.transitionTimeouts.forEach(function (timeout) {
      clearTimeout(timeout);
    });

    this.classNameAndNodeQueue.length = 0;
  };

  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {
    var node = (0, _reactDom.findDOMNode)(this);

    if (!node) {
      if (finishCallback) {
        finishCallback();
      }
      return;
    }

    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
    var timer = null;
    var removeListeners = void 0;

    (0, _addClass2.default)(node, className);

    // Need to do this to actually trigger a transition.
    this.queueClassAndNode(activeClassName, node);

    // Clean-up the animation after the specified delay
    var finish = function finish(e) {
      if (e && e.target !== node) {
        return;
      }

      clearTimeout(timer);
      if (removeListeners) removeListeners();

      (0, _removeClass2.default)(node, className);
      (0, _removeClass2.default)(node, activeClassName);

      if (removeListeners) removeListeners();

      // Usually this optional callback is used for informing an owner of
      // a leave animation and telling it to remove the child.
      if (finishCallback) {
        finishCallback();
      }
    };

    if (timeout) {
      timer = setTimeout(finish, timeout);
      this.transitionTimeouts.push(timer);
    } else if (_properties.transitionEnd) {
      removeListeners = addEndListener(node, finish);
    }
  };

  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {
    var _this2 = this;

    this.classNameAndNodeQueue.push({
      className: className,
      node: node
    });

    if (!this.rafHandle) {
      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {
        return _this2.flushClassNameAndNodeQueue();
      });
    }
  };

  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {
    if (!this.unmounted) {
      this.classNameAndNodeQueue.forEach(function (obj) {
        // This is for to force a repaint,
        // which is necessary in order to transition styles when adding a class name.
        /* eslint-disable no-unused-expressions */
        obj.node.scrollTop;
        /* eslint-enable no-unused-expressions */
        (0, _addClass2.default)(obj.node, obj.className);
      });
    }
    this.classNameAndNodeQueue.length = 0;
    this.rafHandle = null;
  };

  CSSTransitionGroupChild.prototype.render = function render() {
    var props = _extends({}, this.props);
    delete props.name;
    delete props.appear;
    delete props.enter;
    delete props.leave;
    delete props.appearTimeout;
    delete props.enterTimeout;
    delete props.leaveTimeout;
    delete props.children;
    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);
  };

  return CSSTransitionGroupChild;
}(_react2.default.Component);

CSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';


CSSTransitionGroupChild.propTypes =  true ? propTypes : {};

exports.default = CSSTransitionGroupChild;
module.exports = exports['default'];

/***/ }),
/* 1233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inDOM = __webpack_require__(1126);

var _inDOM2 = _interopRequireDefault(_inDOM);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var vendors = ['', 'webkit', 'moz', 'o', 'ms'];
var cancel = 'clearTimeout';
var raf = fallback;
var compatRaf = void 0;

var getKey = function getKey(vendor, k) {
  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';
};

if (_inDOM2.default) {
  vendors.some(function (vendor) {
    var rafKey = getKey(vendor, 'request');

    if (rafKey in window) {
      cancel = getKey(vendor, 'cancel');
      return raf = function raf(cb) {
        return window[rafKey](cb);
      };
    }
  });
}

/* https://github.com/component/raf */
var prev = new Date().getTime();
function fallback(fn) {
  var curr = new Date().getTime(),
      ms = Math.max(0, 16 - (curr - prev)),
      req = setTimeout(fn, ms);

  prev = curr;
  return req;
}

compatRaf = function compatRaf(cb) {
  return raf(cb);
};
compatRaf.cancel = function (id) {
  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);
};
exports.default = compatRaf;
module.exports = exports['default'];

/***/ }),
/* 1234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;

var _inDOM = __webpack_require__(1126);

var _inDOM2 = _interopRequireDefault(_inDOM);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transform = 'transform';
var prefix = void 0,
    transitionEnd = void 0,
    animationEnd = void 0;
var transitionProperty = void 0,
    transitionDuration = void 0,
    transitionTiming = void 0,
    transitionDelay = void 0;
var animationName = void 0,
    animationDuration = void 0,
    animationTiming = void 0,
    animationDelay = void 0;

if (_inDOM2.default) {
  var _getTransitionPropert = getTransitionProperties();

  prefix = _getTransitionPropert.prefix;
  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;


  exports.transform = transform = prefix + '-' + transform;
  exports.transitionProperty = transitionProperty = prefix + '-transition-property';
  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';
  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';
  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';

  exports.animationName = animationName = prefix + '-animation-name';
  exports.animationDuration = animationDuration = prefix + '-animation-duration';
  exports.animationTiming = animationTiming = prefix + '-animation-delay';
  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';
}

exports.transform = transform;
exports.transitionProperty = transitionProperty;
exports.transitionTiming = transitionTiming;
exports.transitionDelay = transitionDelay;
exports.transitionDuration = transitionDuration;
exports.transitionEnd = transitionEnd;
exports.animationName = animationName;
exports.animationDuration = animationDuration;
exports.animationTiming = animationTiming;
exports.animationDelay = animationDelay;
exports.animationEnd = animationEnd;
exports.default = {
  transform: transform,
  end: transitionEnd,
  property: transitionProperty,
  timing: transitionTiming,
  delay: transitionDelay,
  duration: transitionDuration
};


function getTransitionProperties() {
  var style = document.createElement('div').style;

  var vendorMap = {
    O: function O(e) {
      return 'o' + e.toLowerCase();
    },
    Moz: function Moz(e) {
      return e.toLowerCase();
    },
    Webkit: function Webkit(e) {
      return 'webkit' + e;
    },
    ms: function ms(e) {
      return 'MS' + e;
    }
  };

  var vendors = Object.keys(vendorMap);

  var transitionEnd = void 0,
      animationEnd = void 0;
  var prefix = '';

  for (var i = 0; i < vendors.length; i++) {
    var vendor = vendors[i];

    if (vendor + 'TransitionProperty' in style) {
      prefix = '-' + vendor.toLowerCase();
      transitionEnd = vendorMap[vendor]('TransitionEnd');
      animationEnd = vendorMap[vendor]('AnimationEnd');
      break;
    }
  }

  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';

  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';

  style = null;

  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };
}

/***/ }),
/* 1235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

// Pass the Lightbox context through to the Portal's descendents
// StackOverflow discussion http://goo.gl/oclrJ9

var PassContext = (function (_Component) {
	_inherits(PassContext, _Component);

	function PassContext() {
		_classCallCheck(this, PassContext);

		_get(Object.getPrototypeOf(PassContext.prototype), 'constructor', this).apply(this, arguments);
	}

	_createClass(PassContext, [{
		key: 'getChildContext',
		value: function getChildContext() {
			return this.props.context;
		}
	}, {
		key: 'render',
		value: function render() {
			return _react.Children.only(this.props.children);
		}
	}]);

	return PassContext;
})(_react.Component);

PassContext.propTypes = {
	context: _propTypes2['default'].object.isRequired
};
PassContext.childContextTypes = {
	theme: _propTypes2['default'].object
};

exports['default'] = PassContext;
module.exports = exports['default'];

/***/ }),
/* 1236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lib = __webpack_require__(3);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Masthead = function (_Component) {
  _inherits(Masthead, _Component);

  function Masthead() {
    _classCallCheck(this, Masthead);

    return _possibleConstructorReturn(this, (Masthead.__proto__ || Object.getPrototypeOf(Masthead)).apply(this, arguments));
  }

  _createClass(Masthead, [{
    key: 'render',
    value: function render() {
      var _props$curatedPropert = this.props.curatedPropertyInfo,
          address = _props$curatedPropert.address,
          address_unit = _props$curatedPropert.address_unit,
          city = _props$curatedPropert.city,
          state = _props$curatedPropert.state,
          rets_postal_code = _props$curatedPropert.rets_postal_code,
          listing_sub_types = _props$curatedPropert.listing_sub_types,
          listing_type = _props$curatedPropert.listing_type,
          rets_list_price = _props$curatedPropert.rets_list_price,
          beds = _props$curatedPropert.beds,
          baths = _props$curatedPropert.baths,
          sqft = _props$curatedPropert.sqft,
          rets_lot_size_area = _props$curatedPropert.rets_lot_size_area;


      listing_sub_types = listing_sub_types || [];
      var attributes = [];

      attributes.push('' + listing_sub_types.join(', '));

      if (rets_list_price) {
        attributes.push(rets_list_price ? _Util2.default.formatPriceValue(rets_list_price) : 'N/A');
      }

      switch (listing_type) {
        case 'land':
          if (rets_lot_size_area) {
            attributes.push(_Util2.default.formatAcresValue(rets_lot_size_area) + ' Acres');
          }
          break;
        case 'commercial':
          if (!!+sqft) {
            attributes.push(_Util2.default.formatSQFTValue(sqft) + ' SQFT');
          }
          break;
        default:
          if (beds) {
            attributes.push(beds + ' Bedrooms');
          }

          if (baths) {
            attributes.push(baths + ' Bathrooms');
          }

          if (!!+sqft) {
            attributes.push(_Util2.default.formatSQFTValue(sqft) + ' SQFT');
          }

          if (rets_lot_size_area) {
            attributes.push(_Util2.default.formatAcresValue(rets_lot_size_area) + ' Acres');
          }
      }

      return _react2.default.createElement(
        'section',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-masthead py-5' },
        _react2.default.createElement(
          'div',
          { className: 'container' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: this.props.gridWidth },
              _react2.default.createElement(
                'h4',
                null,
                address[0],
                ' ',
                address_unit
              ),
              _react2.default.createElement(
                'h6',
                { className: 'text-muted mb-3' },
                city,
                ', ',
                state,
                ' ',
                rets_postal_code
              ),
              _react2.default.createElement(
                'ul',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'listing-info-box flex-wrap m-0' },
                attributes.map(function (attr, index) {
                  return _react2.default.createElement(
                    'li',
                    { key: index },
                    attr
                  );
                })
              )
            )
          )
        )
      );
    }
  }]);

  return Masthead;
}(_react.Component);

Masthead.propTypes = {
  curatedPropertyInfo: _propTypes2.default.object,
  gridWidth: _propTypes2.default.string
};

exports.default = Masthead;

/***/ }),
/* 1237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRenderHtml = __webpack_require__(96);

var _reactRenderHtml2 = _interopRequireDefault(_reactRenderHtml);

var _moment = __webpack_require__(1084);

var _moment2 = _interopRequireDefault(_moment);

var _lib = __webpack_require__(3);

var _propertyHelper = __webpack_require__(1050);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Overview = function (_Component) {
  _inherits(Overview, _Component);

  function Overview() {
    _classCallCheck(this, Overview);

    return _possibleConstructorReturn(this, (Overview.__proto__ || Object.getPrototypeOf(Overview)).apply(this, arguments));
  }

  _createClass(Overview, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          fromMapView = _props.fromMapView,
          _props$curatedPropert = _props.curatedPropertyInfo,
          post_content = _props$curatedPropert.post_content,
          listing_type = _props$curatedPropert.listing_type,
          rets_date_available = _props$curatedPropert.rets_date_available,
          saleType = _props$curatedPropert.sale_type;


      var availableDate = _moment2.default.utc(rets_date_available, 'YYYY-MM-DD');
      var daysOnWebsite = (0, _propertyHelper.daysPassedSincePostedDate)(this.props.curatedPropertyInfo);
      var lastUpdatedMoment = (0, _propertyHelper.getLastUpdatedMoment)(this.props.curatedPropertyInfo);
      // let lastCheckedMoment = getLastCheckedMoment(this.props.curatedPropertyInfo);
      var lastCheckedMoment = '1 minute ago';

      var availabilityOpening = null;
      if (saleType === 'rent' && listing_type === 'residential' && availableDate.isValid()) {
        availabilityOpening = "Available " + availableDate.format('MMMM D, YYYY') + '. ';
      }

      var boxClass = _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box';
      var gridClass = fromMapView ? 'col-12 col-xl-4' : 'col-12 col-sm-4';

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-overview' },
        _react2.default.createElement(
          'p',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'info-description text-muted mb-5' },
          availabilityOpening,
          (0, _reactRenderHtml2.default)(post_content)
        ),
        _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box-overlay' }),
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box-container row' },
          _react2.default.createElement(
            'div',
            { className: gridClass },
            _react2.default.createElement(
              'div',
              { className: boxClass },
              _react2.default.createElement(
                'p',
                null,
                'Last Checked'
              ),
              _react2.default.createElement(
                'p',
                null,

                // lastCheckedMoment.fromNow()
                lastCheckedMoment
              )
            )
          ),
          lastUpdatedMoment && _react2.default.createElement(
            'div',
            { className: gridClass },
            _react2.default.createElement(
              'div',
              { className: boxClass },
              _react2.default.createElement(
                'p',
                null,
                'Last Updated'
              ),
              _react2.default.createElement(
                'p',
                null,
                lastUpdatedMoment.format('MMM DD, YYYY')
              )
            )
          ),
          daysOnWebsite && _react2.default.createElement(
            'div',
            { className: gridClass },
            _react2.default.createElement(
              'div',
              { className: boxClass },
              _react2.default.createElement(
                'p',
                null,
                'Days on Website'
              ),
              _react2.default.createElement(
                'p',
                null,
                daysOnWebsite
              )
            )
          )
        )
      );
    }
  }]);

  return Overview;
}(_react.Component);

Overview.propTypes = {
  curatedPropertyInfo: _propTypes2.default.object,
  fromMapView: _propTypes2.default.bool
};

exports.default = Overview;

/***/ }),
/* 1238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lib = __webpack_require__(3);

var _propertyAttributeHelper = __webpack_require__(1064);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LISTING_TYPES_TO_HIDE = ['commercial', 'land'];

var Highlights = function Highlights(_ref) {
  var elasticSearchSource = _ref.elasticSearchSource,
      fromMapView = _ref.fromMapView;


  var listingType = (0, _propertyAttributeHelper.getListingType)(elasticSearchSource);
  if (LISTING_TYPES_TO_HIDE.indexOf(listingType.toLowerCase()) >= 0) {
    return null;
  }

  var boxClass = _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box';
  var gridClass = fromMapView ? 'col-12 col-xl-6' : 'col-12 col-sm-6 col-md-4';

  var subTypes = (0, _propertyAttributeHelper.getSubTypes)(elasticSearchSource) || 'N/A';
  var design = (0, _propertyAttributeHelper.getDesign)(elasticSearchSource) || 'N/A';
  var style = (0, _propertyAttributeHelper.getStyle)(elasticSearchSource) || 'N/A';
  var yearBuilt = (0, _propertyAttributeHelper.getYearBuilt)(elasticSearchSource) || 'N/A';
  var isNewConstruction = (0, _propertyAttributeHelper.getNewConstruction)(elasticSearchSource);
  var neighborhood = (0, _propertyAttributeHelper.getNeighborhood)(elasticSearchSource) || 'N/A';
  var insideCity = (0, _propertyAttributeHelper.getInsideCity)(elasticSearchSource);
  var county = (0, _propertyAttributeHelper.getCounty)(elasticSearchSource) || 'N/A';
  var elementarySchool = (0, _propertyAttributeHelper.getElementarySchool)(elasticSearchSource) || 'N/A';
  var middleSchool = (0, _propertyAttributeHelper.getMiddleSchool)(elasticSearchSource) || 'N/A';
  var highSchool = (0, _propertyAttributeHelper.getMiddleSchool)(elasticSearchSource) || 'N/A';

  var designAndStyle = [design, style].join(', ');
  var yearAndNewFlag = isNewConstruction === 'Yes' ? yearBuilt + ', New Construction' : yearBuilt;

  return _react2.default.createElement(
    'div',
    { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-highlights pt-5' },
    _react2.default.createElement(
      'div',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'info-section-header' },
      'Property Highlights'
    ),
    _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box-overlay' }),
    _react2.default.createElement(
      'div',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-box-container row' },
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Type '
          ),
          _react2.default.createElement(
            'p',
            null,
            subTypes
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Style '
          ),
          _react2.default.createElement(
            'p',
            null,
            designAndStyle
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Year Built '
          ),
          _react2.default.createElement(
            'p',
            null,
            yearAndNewFlag
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Neighborhood'
          ),
          _react2.default.createElement(
            'p',
            null,
            neighborhood
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Inside City'
          ),
          _react2.default.createElement(
            'p',
            null,
            insideCity
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'County'
          ),
          _react2.default.createElement(
            'p',
            null,
            county
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Elementary School'
          ),
          _react2.default.createElement(
            'p',
            null,
            elementarySchool
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'Middle School'
          ),
          _react2.default.createElement(
            'p',
            null,
            middleSchool
          )
        )
      ),
      _react2.default.createElement(
        'div',
        { className: gridClass },
        _react2.default.createElement(
          'div',
          { className: boxClass },
          _react2.default.createElement(
            'p',
            null,
            'High School'
          ),
          _react2.default.createElement(
            'p',
            null,
            highSchool
          )
        )
      )
    )
  );
};

Highlights.propTypes = {
  elasticSearchSource: _propTypes2.default.object,
  fromMapView: _propTypes2.default.bool
};

exports.default = Highlights;

/***/ }),
/* 1239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactIdSwiper = __webpack_require__(153);

var _reactIdSwiper2 = _interopRequireDefault(_reactIdSwiper);

var _merge = __webpack_require__(1240);

var _merge2 = _interopRequireDefault(_merge);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _remove = __webpack_require__(1244);

var _remove2 = _interopRequireDefault(_remove);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

var _lib = __webpack_require__(3);

var _propertyHelper = __webpack_require__(1050);

var _AttributeTabSingle = __webpack_require__(1246);

var _AttributeTabSingle2 = _interopRequireDefault(_AttributeTabSingle);

var _index = __webpack_require__(1268);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var getAllTabData = function getAllTabData(propertyDataStructure) {
  var AllTab = {
    "name": "All",
    "children": []
  };
  var combinedChildren = propertyDataStructure.map(function (d) {
    return d.children;
  }).reduce(function (a, b) {
    return a.concat(b);
  });
  combinedChildren = combinedChildren.map(function (d, i) {
    d.order = i + 1;
    return d;
  });
  AllTab['children'] = combinedChildren;
  return AllTab;
};

var getTabClass = function getTabClass(tab, selectedTab) {
  if (tab === selectedTab) {
    return _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tab ' + _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tab-active';
  } else {
    return _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tab';
  }
};

var AttributeTabs = function (_Component) {
  _inherits(AttributeTabs, _Component);

  function AttributeTabs(props) {
    _classCallCheck(this, AttributeTabs);

    var _this = _possibleConstructorReturn(this, (AttributeTabs.__proto__ || Object.getPrototypeOf(AttributeTabs)).call(this, props));

    _this.selectTab = function (tab) {
      if (_this.state.selectedTab !== tab) {
        _this.setState({
          selectedTab: tab
        });
      }
    };

    _this.calculateAttrData = function () {
      var listingTypeJSONFileName = (0, _propertyHelper.getListingTypeJSONFileName)(_this.props.curatedPropertyInfo);
      var propertyDataStructure = null;
      var tabs = [];

      if (listingTypeJSONFileName) {
        propertyDataStructure = _index2.default[listingTypeJSONFileName].slice(0);
        tabs = propertyDataStructure.map(function (t) {
          return t.name;
        });

        propertyDataStructure.push(getAllTabData(propertyDataStructure));
      }

      _this.setState({
        attributesData: propertyDataStructure,
        tabs: tabs
      });
    };

    console.log('[AttributeTabs] constructor');
    _this.state = {
      selectedTab: 'All',
      attributesData: null,
      tabs: []
    };
    return _this;
  }

  _createClass(AttributeTabs, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.calculateAttrData();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var previous_mlsId = (0, _get2.default)(this.props, 'curatedPropertyInfo.mlsId');
      var next_mlsId = (0, _get2.default)(nextProps, 'curatedPropertyInfo.mlsId');

      if (previous_mlsId !== next_mlsId) {
        this.calculateAttrData();
      }
    }
  }, {
    key: 'generateDescription',
    value: function generateDescription(property) {
      var description = void 0;

      var listing_type = (0, _get2.default)(property, 'tax_input.wpp_listing_type.listing_type[0].slug');
      var listing_subtype = (0, _get2.default)(property, 'tax_input.wpp_listing_subtype.listing_sub_type[0].slug');

      var sale_types = (0, _get2.default)(property, 'tax_input.wpp_sale_status.listing_status_sale', []).map(function (item) {
        return (0, _get2.default)(item, 'slug', '').replace('for-', '');
      });

      if (sale_types.length === 2) {
        sale_types = sale_types.join('and');
      }

      switch (listing_type) {
        case 'residential':

          var sale_type = (0, _get2.default)(property, 'tax_input.wpp_sale_status.listing_status_sale[0].slug');

          // Street information
          description = [(0, _get2.default)(property, 'post_meta.rets_street_number'), (0, _get2.default)(property, 'post_meta.rets_street_name'), (0, _get2.default)(property, 'post_meta.address_unit')].join(' ');

          // Subtype and sale type
          description += [' is a', listing_subtype, sale_type.toLowerCase().replace('-', ' ')].join(' ');

          // Location
          description += ' in ' + (0, _get2.default)(property, 'tax_input.location_city.location_city[0].name') + ', ' + [(0, _get2.default)(property, 'tax_input.location_state.location_state[0].slug').toUpperCase(), (0, _get2.default)(property, 'tax_input.location_zip.location_zip[0].name')].join(' ') + '.';

          // Attributes
          description += [' This', _Util2.default.formatSQFTValue((0, _get2.default)(property, 'post_meta.sqft[0]', 0)), 'SQFT', listing_subtype, 'sits', 'on a', _Util2.default.formatAcresValue((0, _get2.default)(property, 'post_meta.rets_lot_size_area[0]', 0)), 'acre lot and features', (0, _get2.default)(property, 'post_meta.rets_beds[0]', 0), 'bedrooms and', (0, _get2.default)(property, 'post_meta.rets_total_baths[0]', 0), 'bathrooms.'].join(' ');

          // Additional info
          description += [' Built in', (0, _get2.default)(property, 'post_meta.rets_year_built[0]', 0) + ',', 'this ', listing_subtype, 'has been on the market for a total of', (0, _propertyHelper.daysPassedSincePostedDate)({ rets_list_date: (0, _get2.default)(property, 'post_meta.rets_list_date[0]') }), 'days and is currently priced at', _Util2.default.formatPriceValue((0, _get2.default)(property, 'post_meta.rets_list_price[0]', 0))].join(' ');

          if (sale_type.indexOf('rent') !== -1) {
            description += ' a month.';
          } else {
            description += '.';
          }
          break;

        case 'commercial':

          // Street information
          description = [(0, _get2.default)(property, 'post_meta.rets_street_number'), (0, _get2.default)(property, 'post_meta.rets_street_name'), (0, _get2.default)(property, 'post_meta.address_unit')].join(' ');

          // Subtype and sale type
          description += [' is a', listing_subtype, 'commercial space for', sale_types].join(' ');

          // Location
          description += ' in ' + (0, _get2.default)(property, 'tax_input.location_city.location_city[0].name') + ', ' + [(0, _get2.default)(property, 'tax_input.location_state.location_state[0].slug').toUpperCase(), (0, _get2.default)(property, 'tax_input.location_zip.location_zip[0].name')].join(' ') + '.';

          break;

        case 'land':

          // Street information
          description = [(0, _get2.default)(property, 'post_meta.rets_street_number'), (0, _get2.default)(property, 'post_meta.rets_street_name'), (0, _get2.default)(property, 'post_meta.address_unit')].join(' ');

          // Subtype and sale type
          description += [' is a', (0, _get2.default)(property, 'post_meta.rets_lot_size_area'), 'acre lot for', sale_types].join(' ');

          // Location
          description += ' in ' + (0, _get2.default)(property, 'tax_input.location_city.location_city[0].name') + ', ' + [(0, _get2.default)(property, 'tax_input.location_state.location_state[0].slug').toUpperCase(), (0, _get2.default)(property, 'tax_input.location_zip.location_zip[0].name')].join(' ') + '.';

          break;
      }

      return description;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          selectedTab = _state.selectedTab,
          attributesData = _state.attributesData,
          tabs = _state.tabs;
      var _props = this.props,
          esProperty = _props.esProperty,
          curatedPropertyInfo = _props.curatedPropertyInfo,
          isOneColumn = _props.isOneColumn;
      var listing_type = curatedPropertyInfo.listing_type,
          address = curatedPropertyInfo.address,
          address_unit = curatedPropertyInfo.address_unit;


      if (!listing_type || !attributesData) {
        return null;
      }
      var content = attributesData.find(function (t) {
        return t.name === selectedTab;
      });

      var swiperParams = {
        containerClass: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tabs-scroll',
        freeMode: true,
        slidesPerView: 'auto',
        nextButton: '.swiper-button-next-custom',
        prevButton: '.swiper-button-prev-custom',
        nextButtonCustomizedClass: 'fa fa-angle-right',
        prevButtonCustomizedClass: 'fa fa-angle-left'
      };

      var scrollingTabs = null;
      if (tabs.length) {
        scrollingTabs = _react2.default.createElement(
          _reactIdSwiper2.default,
          swiperParams,
          tabs.map(function (tab) {
            return _react2.default.createElement(
              'div',
              { className: getTabClass(tab, selectedTab), key: tab, onClick: _this2.selectTab.bind(_this2, tab) },
              tab
            );
          })
        );
      }

      var description = this.generateDescription(this.props.esProperty);

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-attrs-section pt-5' },
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'info-section-header mb-4' },
          'Property Details for ',
          address[0],
          ' ',
          address_unit
        ),
        _react2.default.createElement(
          'p',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'info-description text-muted py-3' },
          description
        ),
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tabs-header d-flex' },
          _react2.default.createElement(
            'div',
            { className: getTabClass('All', selectedTab), onClick: this.selectTab.bind(this, 'All') },
            'All'
          ),
          scrollingTabs
        ),
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-tabs-content' },
          _react2.default.createElement(_AttributeTabSingle2.default, {
            content: content,
            esProperty: esProperty,
            isOneColumn: isOneColumn
          })
        )
      );
    }
  }]);

  return AttributeTabs;
}(_react.Component);

;

AttributeTabs.propTypes = {
  esProperty: _propTypes2.default.object.isRequired,
  curatedPropertyInfo: _propTypes2.default.object.isRequired,
  isOneColumn: _propTypes2.default.bool.isRequired
};

exports.default = AttributeTabs;

/***/ }),
/* 1240 */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(1241),
    createAssigner = __webpack_require__(1129);

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),
/* 1241 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(232),
    assignMergeValue = __webpack_require__(1128),
    baseFor = __webpack_require__(396),
    baseMergeDeep = __webpack_require__(1242),
    isObject = __webpack_require__(60),
    keysIn = __webpack_require__(1070);

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    if (isObject(srcValue)) {
      stack || (stack = new Stack);
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),
/* 1242 */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(1128),
    cloneBuffer = __webpack_require__(1113),
    cloneTypedArray = __webpack_require__(1116),
    copyArray = __webpack_require__(1114),
    initCloneObject = __webpack_require__(1117),
    isArguments = __webpack_require__(117),
    isArray = __webpack_require__(30),
    isArrayLikeObject = __webpack_require__(383),
    isBuffer = __webpack_require__(156),
    isFunction = __webpack_require__(235),
    isObject = __webpack_require__(60),
    isPlainObject = __webpack_require__(1119),
    isTypedArray = __webpack_require__(158),
    toPlainObject = __webpack_require__(1243);

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = object[key],
      srcValue = source[key],
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),
/* 1243 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(1052),
    keysIn = __webpack_require__(1070);

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),
/* 1244 */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(114),
    basePullAt = __webpack_require__(1245);

/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];
  if (!(array && array.length)) {
    return result;
  }
  var index = -1,
      indexes = [],
      length = array.length;

  predicate = baseIteratee(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }
  basePullAt(array, indexes);
  return result;
}

module.exports = remove;


/***/ }),
/* 1245 */
/***/ (function(module, exports, __webpack_require__) {

var baseUnset = __webpack_require__(1118),
    isIndex = __webpack_require__(157);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex(index)) {
        splice.call(array, index, 1);
      } else {
        baseUnset(array, index);
      }
    }
  }
  return array;
}

module.exports = basePullAt;


/***/ }),
/* 1246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactMasonryComponent = __webpack_require__(1247);

var _reactMasonryComponent2 = _interopRequireDefault(_reactMasonryComponent);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function showContentValue(data, dataReference) {
  if (typeof dataReference !== 'function') {
    // console.log(dataReference + ' is not a function');
    // TODO: TEMP solution until everything is changed to function
    return "old style value";
  } else {
    var value = dataReference(data);
    if (value === null) {
      // console.log(dataReference + ' is null');
      return null;
    } else if (value === false) {
      return "No";
    } else {
      return value;
    }
  }
}

function getContent(items, data) {
  var contentElements = items.sort(function (a, b) {
    return a.order - b.order;
  }).map(function (c, i) {
    var contentValue = showContentValue(data, c.value);
    // contentValue could be an object which will result in react rendering error
    // stringify it
    return contentValue !== null ? _react2.default.createElement(
      'div',
      { key: c.name + '-' + i },
      _react2.default.createElement(
        'span',
        null,
        c.name,
        ': '
      ),
      _react2.default.createElement(
        'span',
        null,
        JSON.stringify(contentValue).slice(1, -1)
      )
    ) : null;
  });
  return contentElements;
}

var AttributeTabSingle = function (_Component) {
  _inherits(AttributeTabSingle, _Component);

  function AttributeTabSingle() {
    _classCallCheck(this, AttributeTabSingle);

    return _possibleConstructorReturn(this, (AttributeTabSingle.__proto__ || Object.getPrototypeOf(AttributeTabSingle)).apply(this, arguments));
  }

  _createClass(AttributeTabSingle, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          content = _props.content,
          esProperty = _props.esProperty,
          isOneColumn = _props.isOneColumn;

      var elements = [];
      var visibleTabs = {};
      var masonryOptions = {
        horizontalOrder: true,
        itemSelector: '.' + _lib.Lib.THEME_CLASSES_PREFIX + 'attr-group',
        percentPosition: true,
        gutter: 48,
        transitionDuration: 0
      };

      var items = [];
      content.children.sort(function (a, b) {
        return a.order - b.order;
      }).forEach(function (d) {
        var item = {};
        item['category'] = d.name;
        var insideContent = getContent(d.items, esProperty);
        item['insideContent'] = insideContent;
        // check to see at least some of the items are not null
        if (insideContent.some(function (d) {
          return d !== null;
        })) {
          items.push(item);
        }
      });

      var itemClasses = [_lib.Lib.THEME_CLASSES_PREFIX + 'attr-group'];
      if (!isOneColumn) {
        itemClasses.push(_lib.Lib.THEME_CLASSES_PREFIX + 'attr-group-50');
      }

      return _react2.default.createElement(
        _reactMasonryComponent2.default,
        {
          className: 'my-masonry-div',
          elementType: 'div',
          options: masonryOptions,
          disableImagesLoaded: false,
          updateOnEachImageLoad: false
        },
        items.map(function (c) {
          return _react2.default.createElement(
            'div',
            { className: itemClasses.join(' '), key: 'key-' + c.category },
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-group-title' },
              c.category
            ),
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-group-content' },
              c.insideContent
            )
          );
        })
      );
    }
  }]);

  return AttributeTabSingle;
}(_react.Component);

AttributeTabSingle.propTypes = {
  content: _propTypes2.default.object.isRequired,
  esProperty: _propTypes2.default.object,
  isOneColumn: _propTypes2.default.bool.isRequired
};

exports.default = AttributeTabSingle;

/***/ }),
/* 1247 */
/***/ (function(module, exports, __webpack_require__) {

var isBrowser = typeof window !== 'undefined';
var Masonry = isBrowser ? window.Masonry || __webpack_require__(1248) : null;
var imagesloaded = isBrowser ? __webpack_require__(1253) : null;
var assign = __webpack_require__(1254);
var elementResizeDetectorMaker = __webpack_require__(1255);
var debounce = __webpack_require__(386);
var omit = __webpack_require__(1112);
var PropTypes = __webpack_require__(2);
var React = __webpack_require__(0);
var createReactClass = __webpack_require__(1266);

var propTypes = {
  enableResizableChildren: PropTypes.bool,
  disableImagesLoaded: PropTypes.bool,
  onImagesLoaded: PropTypes.func,
  updateOnEachImageLoad: PropTypes.bool,
  options: PropTypes.object,
  elementType: PropTypes.string,
  onLayoutComplete: PropTypes.func,
  onRemoveComplete: PropTypes.func
};

var MasonryComponent = createReactClass({
  masonry: false,
  erd: undefined,
  latestKnownDomChildren: [],
  displayName: 'MasonryComponent',
  propTypes: propTypes,

  getDefaultProps: function() {
    return {
      enableResizableChildren: false,
      disableImagesLoaded: false,
      updateOnEachImageLoad: false,
      options: {},
      className: '',
      elementType: 'div',
      onLayoutComplete: function() {
      },
      onRemoveComplete: function() {
      }
    };
  },

  initializeMasonry: function(force) {
    if (!this.masonry || force) {
      this.masonry = new Masonry(
        this.masonryContainer,
        this.props.options
      );

      if (this.props.onLayoutComplete) {
        this.masonry.on('layoutComplete', this.props.onLayoutComplete);
      }

      if (this.props.onRemoveComplete) {
        this.masonry.on('removeComplete', this.props.onRemoveComplete);
      }

      this.latestKnownDomChildren = this.getCurrentDomChildren();
    }
  },

  getCurrentDomChildren: function() {
    var node = this.masonryContainer;
    var children = this.props.options.itemSelector ? node.querySelectorAll(this.props.options.itemSelector) : node.children;
    return Array.prototype.slice.call(children);
  },

  diffDomChildren: function() {
    var forceItemReload = false;

    var knownChildrenStillAttached = this.latestKnownDomChildren.filter(function(element) {
      /*
       * take only elements attached to DOM
       * (aka the parent is the masonry container, not null)
       * otherwise masonry would try to "remove it" again from the DOM
       */
      return !!element.parentNode;
    });

    /*
     * If not all known children are attached to the dom - we have no other way of notifying
     * masonry to remove the ones not still attached besides invoking a complete item reload.
     * basically all the rest of the code below does not matter in that case.
     */
    if (knownChildrenStillAttached.length !== this.latestKnownDomChildren.length) {
      forceItemReload = true;
    }

    var currentDomChildren = this.getCurrentDomChildren();

    /*
     * Since we are looking for a known child which is also attached to the dom AND
     * not attached to the dom at the same time - this would *always* produce an empty array.
     */
    var removed = knownChildrenStillAttached.filter(function(attachedKnownChild) {
      return !~currentDomChildren.indexOf(attachedKnownChild);
    });

    /*
     * This would get any children which are attached to the dom but are *unkown* to us
     * from previous renders
     */
    var newDomChildren = currentDomChildren.filter(function(currentChild) {
      return !~knownChildrenStillAttached.indexOf(currentChild);
    });

    var beginningIndex = 0;

    // get everything added to the beginning of the DOMNode list
    var prepended = newDomChildren.filter(function(newChild) {
      var prepend = (beginningIndex === currentDomChildren.indexOf(newChild));

      if (prepend) {
        // increase the index
        beginningIndex++;
      }

      return prepend;
    });

    // we assume that everything else is appended
    var appended = newDomChildren.filter(function(el) {
      return prepended.indexOf(el) === -1;
    });

    /*
     * otherwise we reverse it because so we're going through the list picking off the items that
     * have been added at the end of the list. this complex logic is preserved in case it needs to be
     * invoked
     *
     * var endingIndex = currentDomChildren.length - 1;
     *
     * newDomChildren.reverse().filter(function(newChild, i){
     *     var append = endingIndex == currentDomChildren.indexOf(newChild);
     *
     *     if (append) {
     *         endingIndex--;
     *     }
     *
     *     return append;
     * });
     */

    // get everything added to the end of the DOMNode list
    var moved = [];

    /*
     * This would always be true (see above about the lofic for "removed")
     */
    if (removed.length === 0) {
      /*
       * 'moved' will contain some random elements (if any) since the "knownChildrenStillAttached" is a filter
       * of the "known" children which are still attached - All indexes could basically change. (for example
       * if the first element is not attached)
       * Don't trust this array.
       */
      moved = knownChildrenStillAttached.filter(function(child, index) {
        return index !== currentDomChildren.indexOf(child);
      });
    }

    this.latestKnownDomChildren = currentDomChildren;

    return {
      old: knownChildrenStillAttached, // Not used
      new: currentDomChildren, // Not used
      removed: removed,
      appended: appended,
      prepended: prepended,
      moved: moved,
      forceItemReload: forceItemReload
    };
  },

  performLayout: function() {
    var diff = this.diffDomChildren();

    // Would never be true. (see comments of 'diffDomChildren' about 'removed')
    if (diff.removed.length > 0) {
      if (this.props.enableResizableChildren) {
        diff.removed.forEach(this.erd.removeAllListeners, this.erd);
      }
      this.masonry.remove(diff.removed);
      this.masonry.reloadItems();
    }

    if (diff.appended.length > 0) {
      this.masonry.appended(diff.appended);

      if (diff.prepended.length === 0) {
        this.masonry.reloadItems();
      }

      if (this.props.enableResizableChildren) {
        diff.appended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.prepended.length > 0) {
      this.masonry.prepended(diff.prepended);

      if (this.props.enableResizableChildren) {
        diff.prepended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.forceItemReload || diff.moved.length > 0) {
      this.masonry.reloadItems();
    }

    this.masonry.layout();
  },

  imagesLoaded: function() {
    if (this.props.disableImagesLoaded) {
      return;
    }

    imagesloaded(this.masonryContainer)
      .on(
        this.props.updateOnEachImageLoad ? 'progress' : 'always',
        debounce(
          function(instance) {
            if (this.props.onImagesLoaded) {
              this.props.onImagesLoaded(instance);
            }
            this.masonry.layout();
          }.bind(this), 100)
      );
  },

  initializeResizableChildren: function() {
    if (!this.props.enableResizableChildren) {
      return;
    }

    this.erd = elementResizeDetectorMaker({
      strategy: 'scroll'
    });

    this.latestKnownDomChildren.forEach(this.listenToElementResize, this);
  },

  listenToElementResize: function(el) {
    this.erd.listenTo(el, function() {
      this.masonry.layout()
    }.bind(this))
  },

  destroyErd: function() {
    if (this.erd) {
      this.latestKnownDomChildren.forEach(this.erd.uninstall, this.erd);
    }
  },

  componentDidMount: function() {
    this.initializeMasonry();
    this.initializeResizableChildren();
    this.imagesLoaded();
  },

  componentDidUpdate: function() {
    this.performLayout();
    this.imagesLoaded();
  },

  componentWillUnmount: function() {
    this.destroyErd();

    // unregister events
    if (this.props.onLayoutComplete) {
      this.masonry.off('layoutComplete', this.props.onLayoutComplete);
    }

    if (this.props.onRemoveComplete) {
      this.masonry.off('removeComplete', this.props.onRemoveComplete);
    }

    this.masonry.destroy();
  },
  
  setRef: function(n) {
    this.masonryContainer = n;
  },

  render: function() {
    var props = omit(this.props, Object.keys(propTypes));
    return React.createElement(this.props.elementType, assign({}, props, {ref: this.setRef}), this.props.children);
  }
});

module.exports = MasonryComponent;
module.exports.default = MasonryComponent;


/***/ }),
/* 1248 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Masonry v4.2.0
 * Cascading grid layout library
 * http://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1249),
        __webpack_require__(1088)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('outlayer'),
      require('get-size')
    );
  } else {
    // browser global
    window.Masonry = factory(
      window.Outlayer,
      window.getSize
    );
  }

}( window, function factory( Outlayer, getSize ) {

'use strict';

// -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class
  var Masonry = Outlayer.create('masonry');
  // isFitWidth -> fitWidth
  Masonry.compatOptions.fitWidth = 'isFitWidth';

  var proto = Masonry.prototype;

  proto._resetLayout = function() {
    this.getSize();
    this._getMeasurement( 'columnWidth', 'outerWidth' );
    this._getMeasurement( 'gutter', 'outerWidth' );
    this.measureColumns();

    // reset column Y
    this.colYs = [];
    for ( var i=0; i < this.cols; i++ ) {
      this.colYs.push( 0 );
    }

    this.maxY = 0;
    this.horizontalColIndex = 0;
  };

  proto.measureColumns = function() {
    this.getContainerWidth();
    // if columnWidth is 0, default to outerWidth of first item
    if ( !this.columnWidth ) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element;
      // columnWidth fall back to item of first element
      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||
        // if first elem has no width, default to size of container
        this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter;

    // calculate columns
    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth;
    // fix rounding errors, typically with gutters
    var excess = columnWidth - containerWidth % columnWidth;
    // if overshoot is less than a pixel, round up, otherwise floor it
    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[ mathMethod ]( cols );
    this.cols = Math.max( cols, 1 );
  };

  proto.getContainerWidth = function() {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');
    var container = isFitWidth ? this.element.parentNode : this.element;
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var size = getSize( container );
    this.containerWidth = size && size.innerWidth;
  };

  proto._getItemLayoutPosition = function( item ) {
    item.getSize();
    // how many columns does this brick span
    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
    // round if off by 1 pixel, otherwise use ceil
    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );
    colSpan = Math.min( colSpan, this.cols );
    // use horizontal or top column position
    var colPosMethod = this.options.horizontalOrder ?
      '_getHorizontalColPosition' : '_getTopColPosition';
    var colPosition = this[ colPosMethod ]( colSpan, item );
    // position the brick
    var position = {
      x: this.columnWidth * colPosition.col,
      y: colPosition.y
    };
    // apply setHeight to necessary columns
    var setHeight = colPosition.y + item.size.outerHeight;
    var setMax = colSpan + colPosition.col;
    for ( var i = colPosition.col; i < setMax; i++ ) {
      this.colYs[i] = setHeight;
    }

    return position;
  };

  proto._getTopColPosition = function( colSpan ) {
    var colGroup = this._getTopColGroup( colSpan );
    // get the minimum Y value from the columns
    var minimumY = Math.min.apply( Math, colGroup );

    return {
      col: colGroup.indexOf( minimumY ),
      y: minimumY,
    };
  };

  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */
  proto._getTopColGroup = function( colSpan ) {
    if ( colSpan < 2 ) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = [];
    // how many different places could this brick fit horizontally
    var groupCount = this.cols + 1 - colSpan;
    // for each group potential horizontal position
    for ( var i = 0; i < groupCount; i++ ) {
      colGroup[i] = this._getColGroupY( i, colSpan );
    }
    return colGroup;
  };

  proto._getColGroupY = function( col, colSpan ) {
    if ( colSpan < 2 ) {
      return this.colYs[ col ];
    }
    // make an array of colY values for that one group
    var groupColYs = this.colYs.slice( col, col + colSpan );
    // and get the max value of the array
    return Math.max.apply( Math, groupColYs );
  };

  // get column position based on horizontal index. #873
  proto._getHorizontalColPosition = function( colSpan, item ) {
    var col = this.horizontalColIndex % this.cols;
    var isOver = colSpan > 1 && col + colSpan > this.cols;
    // shift to next row if item can't fit on current row
    col = isOver ? 0 : col;
    // don't let zero-size items take up space
    var hasSize = item.size.outerWidth && item.size.outerHeight;
    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;

    return {
      col: col,
      y: this._getColGroupY( col, colSpan ),
    };
  };

  proto._manageStamp = function( stamp ) {
    var stampSize = getSize( stamp );
    var offset = this._getElementOffset( stamp );
    // get the columns that this stamp affects
    var isOriginLeft = this._getOption('originLeft');
    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor( firstX / this.columnWidth );
    firstCol = Math.max( 0, firstCol );
    var lastCol = Math.floor( lastX / this.columnWidth );
    // lastCol should not go over if multiple of columnWidth #425
    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min( this.cols - 1, lastCol );
    // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');
    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +
      stampSize.outerHeight;
    for ( var i = firstCol; i <= lastCol; i++ ) {
      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );
    }
  };

  proto._getContainerSize = function() {
    this.maxY = Math.max.apply( Math, this.colYs );
    var size = {
      height: this.maxY
    };

    if ( this._getOption('fitWidth') ) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  proto._getContainerFitWidth = function() {
    var unusedCols = 0;
    // count unused columns
    var i = this.cols;
    while ( --i ) {
      if ( this.colYs[i] !== 0 ) {
        break;
      }
      unusedCols++;
    }
    // fit container to columns that have been used
    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;
  };

  proto.needsResizeLayout = function() {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;

}));


/***/ }),
/* 1249 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Outlayer v2.1.1
 * the brains and guts of a layout library
 * MIT license
 */

( function( window, factory ) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1087),
        __webpack_require__(1088),
        __webpack_require__(1250),
        __webpack_require__(1252)
      ], __WEBPACK_AMD_DEFINE_RESULT__ = function( EvEmitter, getSize, utils, Item ) {
        return factory( window, EvEmitter, getSize, utils, Item);
      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      window,
      require('ev-emitter'),
      require('get-size'),
      require('fizzy-ui-utils'),
      require('./item')
    );
  } else {
    // browser global
    window.Outlayer = factory(
      window,
      window.EvEmitter,
      window.getSize,
      window.fizzyUIUtils,
      window.Outlayer.Item
    );
  }

}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
'use strict';

// ----- vars ----- //

var console = window.console;
var jQuery = window.jQuery;
var noop = function() {};

// -------------------------- Outlayer -------------------------- //

// globally unique identifiers
var GUID = 0;
// internal store of all Outlayer intances
var instances = {};


/**
 * @param {Element, String} element
 * @param {Object} options
 * @constructor
 */
function Outlayer( element, options ) {
  var queryElement = utils.getQueryElement( element );
  if ( !queryElement ) {
    if ( console ) {
      console.error( 'Bad element for ' + this.constructor.namespace +
        ': ' + ( queryElement || element ) );
    }
    return;
  }
  this.element = queryElement;
  // add jQuery
  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = utils.extend( {}, this.constructor.defaults );
  this.option( options );

  // add id for Outlayer.getFromElement
  var id = ++GUID;
  this.element.outlayerGUID = id; // expando
  instances[ id ] = this; // associate via id

  // kick it off
  this._create();

  var isInitLayout = this._getOption('initLayout');
  if ( isInitLayout ) {
    this.layout();
  }
}

// settings are for internal use only
Outlayer.namespace = 'outlayer';
Outlayer.Item = Item;

// default options
Outlayer.defaults = {
  containerStyle: {
    position: 'relative'
  },
  initLayout: true,
  originLeft: true,
  originTop: true,
  resize: true,
  resizeContainer: true,
  // item options
  transitionDuration: '0.4s',
  hiddenStyle: {
    opacity: 0,
    transform: 'scale(0.001)'
  },
  visibleStyle: {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var proto = Outlayer.prototype;
// inherit EvEmitter
utils.extend( proto, EvEmitter.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  utils.extend( this.options, opts );
};

/**
 * get backwards compatible option value, check old name
 */
proto._getOption = function( option ) {
  var oldOption = this.constructor.compatOptions[ option ];
  return oldOption && this.options[ oldOption ] !== undefined ?
    this.options[ oldOption ] : this.options[ option ];
};

Outlayer.compatOptions = {
  // currentName: oldName
  initLayout: 'isInitLayout',
  horizontal: 'isHorizontal',
  layoutInstant: 'isLayoutInstant',
  originLeft: 'isOriginLeft',
  originTop: 'isOriginTop',
  resize: 'isResizeBound',
  resizeContainer: 'isResizingContainer'
};

proto._create = function() {
  // get items from children
  this.reloadItems();
  // elements that affect layout, but are not laid out
  this.stamps = [];
  this.stamp( this.options.stamp );
  // set container style
  utils.extend( this.element.style, this.options.containerStyle );

  // bind resize method
  var canBindResize = this._getOption('resize');
  if ( canBindResize ) {
    this.bindResize();
  }
};

// goes through all children again and gets bricks in proper order
proto.reloadItems = function() {
  // collection of item elements
  this.items = this._itemize( this.element.children );
};


/**
 * turn elements into Outlayer.Items to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - collection of new Outlayer Items
 */
proto._itemize = function( elems ) {

  var itemElems = this._filterFindItemElements( elems );
  var Item = this.constructor.Item;

  // create new Outlayer Items for collection
  var items = [];
  for ( var i=0; i < itemElems.length; i++ ) {
    var elem = itemElems[i];
    var item = new Item( elem, this );
    items.push( item );
  }

  return items;
};

/**
 * get item elements to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - item elements
 */
proto._filterFindItemElements = function( elems ) {
  return utils.filterFindElements( elems, this.options.itemSelector );
};

/**
 * getter method for getting item elements
 * @returns {Array} elems - collection of item elements
 */
proto.getItemElements = function() {
  return this.items.map( function( item ) {
    return item.element;
  });
};

// ----- init & layout ----- //

/**
 * lays out all items
 */
proto.layout = function() {
  this._resetLayout();
  this._manageStamps();

  // don't animate first layout
  var layoutInstant = this._getOption('layoutInstant');
  var isInstant = layoutInstant !== undefined ?
    layoutInstant : !this._isLayoutInited;
  this.layoutItems( this.items, isInstant );

  // flag for initalized
  this._isLayoutInited = true;
};

// _init is alias for layout
proto._init = proto.layout;

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();
};


proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * get measurement from option, for columnWidth, rowHeight, gutter
 * if option is String -> get element from selector string, & get size of element
 * if option is Element -> get size of element
 * else use option as a number
 *
 * @param {String} measurement
 * @param {String} size - width or height
 * @private
 */
proto._getMeasurement = function( measurement, size ) {
  var option = this.options[ measurement ];
  var elem;
  if ( !option ) {
    // default to 0
    this[ measurement ] = 0;
  } else {
    // use option as an element
    if ( typeof option == 'string' ) {
      elem = this.element.querySelector( option );
    } else if ( option instanceof HTMLElement ) {
      elem = option;
    }
    // use size of element, if element
    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
  }
};

/**
 * layout a collection of item elements
 * @api public
 */
proto.layoutItems = function( items, isInstant ) {
  items = this._getItemsForLayout( items );

  this._layoutItems( items, isInstant );

  this._postLayout();
};

/**
 * get the items to be laid out
 * you may want to skip over some items
 * @param {Array} items
 * @returns {Array} items
 */
proto._getItemsForLayout = function( items ) {
  return items.filter( function( item ) {
    return !item.isIgnored;
  });
};

/**
 * layout items
 * @param {Array} items
 * @param {Boolean} isInstant
 */
proto._layoutItems = function( items, isInstant ) {
  this._emitCompleteOnItems( 'layout', items );

  if ( !items || !items.length ) {
    // no items, emit event with empty array
    return;
  }

  var queue = [];

  items.forEach( function( item ) {
    // get x/y object from method
    var position = this._getItemLayoutPosition( item );
    // enqueue
    position.item = item;
    position.isInstant = isInstant || item.isLayoutInstant;
    queue.push( position );
  }, this );

  this._processLayoutQueue( queue );
};

/**
 * get item layout position
 * @param {Outlayer.Item} item
 * @returns {Object} x and y position
 */
proto._getItemLayoutPosition = function( /* item */ ) {
  return {
    x: 0,
    y: 0
  };
};

/**
 * iterate over array and position each item
 * Reason being - separating this logic prevents 'layout invalidation'
 * thx @paul_irish
 * @param {Array} queue
 */
proto._processLayoutQueue = function( queue ) {
  this.updateStagger();
  queue.forEach( function( obj, i ) {
    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
  }, this );
};

// set stagger from option in milliseconds number
proto.updateStagger = function() {
  var stagger = this.options.stagger;
  if ( stagger === null || stagger === undefined ) {
    this.stagger = 0;
    return;
  }
  this.stagger = getMilliseconds( stagger );
  return this.stagger;
};

/**
 * Sets position of item in DOM
 * @param {Outlayer.Item} item
 * @param {Number} x - horizontal position
 * @param {Number} y - vertical position
 * @param {Boolean} isInstant - disables transitions
 */
proto._positionItem = function( item, x, y, isInstant, i ) {
  if ( isInstant ) {
    // if not transition, just set CSS
    item.goTo( x, y );
  } else {
    item.stagger( i * this.stagger );
    item.moveTo( x, y );
  }
};

/**
 * Any logic you want to do after each layout,
 * i.e. size the container
 */
proto._postLayout = function() {
  this.resizeContainer();
};

proto.resizeContainer = function() {
  var isResizingContainer = this._getOption('resizeContainer');
  if ( !isResizingContainer ) {
    return;
  }
  var size = this._getContainerSize();
  if ( size ) {
    this._setContainerMeasure( size.width, true );
    this._setContainerMeasure( size.height, false );
  }
};

/**
 * Sets width or height of container if returned
 * @returns {Object} size
 *   @param {Number} width
 *   @param {Number} height
 */
proto._getContainerSize = noop;

/**
 * @param {Number} measure - size of width or height
 * @param {Boolean} isWidth
 */
proto._setContainerMeasure = function( measure, isWidth ) {
  if ( measure === undefined ) {
    return;
  }

  var elemSize = this.size;
  // add padding and border width if border box
  if ( elemSize.isBorderBox ) {
    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
      elemSize.borderLeftWidth + elemSize.borderRightWidth :
      elemSize.paddingBottom + elemSize.paddingTop +
      elemSize.borderTopWidth + elemSize.borderBottomWidth;
  }

  measure = Math.max( measure, 0 );
  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
};

/**
 * emit eventComplete on a collection of items events
 * @param {String} eventName
 * @param {Array} items - Outlayer.Items
 */
proto._emitCompleteOnItems = function( eventName, items ) {
  var _this = this;
  function onComplete() {
    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
  }

  var count = items.length;
  if ( !items || !count ) {
    onComplete();
    return;
  }

  var doneCount = 0;
  function tick() {
    doneCount++;
    if ( doneCount == count ) {
      onComplete();
    }
  }

  // bind callback
  items.forEach( function( item ) {
    item.once( eventName, tick );
  });
};

/**
 * emits events via EvEmitter and jQuery events
 * @param {String} type - name of event
 * @param {Event} event - original event
 * @param {Array} args - extra arguments
 */
proto.dispatchEvent = function( type, event, args ) {
  // add original event to arguments
  var emitArgs = event ? [ event ].concat( args ) : args;
  this.emitEvent( type, emitArgs );

  if ( jQuery ) {
    // set this.$element
    this.$element = this.$element || jQuery( this.element );
    if ( event ) {
      // create jQuery event
      var $event = jQuery.Event( event );
      $event.type = type;
      this.$element.trigger( $event, args );
    } else {
      // just trigger with type if no event available
      this.$element.trigger( type, args );
    }
  }
};

// -------------------------- ignore & stamps -------------------------- //


/**
 * keep item in collection, but do not lay it out
 * ignored items do not get skipped in layout
 * @param {Element} elem
 */
proto.ignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    item.isIgnored = true;
  }
};

/**
 * return item to layout collection
 * @param {Element} elem
 */
proto.unignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    delete item.isIgnored;
  }
};

/**
 * adds elements to stamps
 * @param {NodeList, Array, Element, or String} elems
 */
proto.stamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ) {
    return;
  }

  this.stamps = this.stamps.concat( elems );
  // ignore
  elems.forEach( this.ignore, this );
};

/**
 * removes elements to stamps
 * @param {NodeList, Array, or Element} elems
 */
proto.unstamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ){
    return;
  }

  elems.forEach( function( elem ) {
    // filter out removed stamp elements
    utils.removeFrom( this.stamps, elem );
    this.unignore( elem );
  }, this );
};

/**
 * finds child elements
 * @param {NodeList, Array, Element, or String} elems
 * @returns {Array} elems
 */
proto._find = function( elems ) {
  if ( !elems ) {
    return;
  }
  // if string, use argument as selector string
  if ( typeof elems == 'string' ) {
    elems = this.element.querySelectorAll( elems );
  }
  elems = utils.makeArray( elems );
  return elems;
};

proto._manageStamps = function() {
  if ( !this.stamps || !this.stamps.length ) {
    return;
  }

  this._getBoundingRect();

  this.stamps.forEach( this._manageStamp, this );
};

// update boundingLeft / Top
proto._getBoundingRect = function() {
  // get bounding rect for container element
  var boundingRect = this.element.getBoundingClientRect();
  var size = this.size;
  this._boundingRect = {
    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
  };
};

/**
 * @param {Element} stamp
**/
proto._manageStamp = noop;

/**
 * get x/y position of element relative to container element
 * @param {Element} elem
 * @returns {Object} offset - has left, top, right, bottom
 */
proto._getElementOffset = function( elem ) {
  var boundingRect = elem.getBoundingClientRect();
  var thisRect = this._boundingRect;
  var size = getSize( elem );
  var offset = {
    left: boundingRect.left - thisRect.left - size.marginLeft,
    top: boundingRect.top - thisRect.top - size.marginTop,
    right: thisRect.right - boundingRect.right - size.marginRight,
    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
  };
  return offset;
};

// -------------------------- resize -------------------------- //

// enable event handlers for listeners
// i.e. resize -> onresize
proto.handleEvent = utils.handleEvent;

/**
 * Bind layout to window resizing
 */
proto.bindResize = function() {
  window.addEventListener( 'resize', this );
  this.isResizeBound = true;
};

/**
 * Unbind layout to window resizing
 */
proto.unbindResize = function() {
  window.removeEventListener( 'resize', this );
  this.isResizeBound = false;
};

proto.onresize = function() {
  this.resize();
};

utils.debounceMethod( Outlayer, 'onresize', 100 );

proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  this.layout();
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  // check that this.size and size are there
  // IE8 triggers resize on body size change, so they might not be
  var hasSizes = this.size && size;
  return hasSizes && size.innerWidth !== this.size.innerWidth;
};

// -------------------------- methods -------------------------- //

/**
 * add items to Outlayer instance
 * @param {Array or NodeList or Element} elems
 * @returns {Array} items - Outlayer.Items
**/
proto.addItems = function( elems ) {
  var items = this._itemize( elems );
  // add items to collection
  if ( items.length ) {
    this.items = this.items.concat( items );
  }
  return items;
};

/**
 * Layout newly-appended item elements
 * @param {Array or NodeList or Element} elems
 */
proto.appended = function( elems ) {
  var items = this.addItems( elems );
  if ( !items.length ) {
    return;
  }
  // layout and reveal just the new items
  this.layoutItems( items, true );
  this.reveal( items );
};

/**
 * Layout prepended elements
 * @param {Array or NodeList or Element} elems
 */
proto.prepended = function( elems ) {
  var items = this._itemize( elems );
  if ( !items.length ) {
    return;
  }
  // add items to beginning of collection
  var previousItems = this.items.slice(0);
  this.items = items.concat( previousItems );
  // start new layout
  this._resetLayout();
  this._manageStamps();
  // layout new stuff without transition
  this.layoutItems( items, true );
  this.reveal( items );
  // layout previous items
  this.layoutItems( previousItems );
};

/**
 * reveal a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.reveal = function( items ) {
  this._emitCompleteOnItems( 'reveal', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.reveal();
  });
};

/**
 * hide a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.hide = function( items ) {
  this._emitCompleteOnItems( 'hide', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.hide();
  });
};

/**
 * reveal item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.revealItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.reveal( items );
};

/**
 * hide item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.hideItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.hide( items );
};

/**
 * get Outlayer.Item, given an Element
 * @param {Element} elem
 * @param {Function} callback
 * @returns {Outlayer.Item} item
 */
proto.getItem = function( elem ) {
  // loop through items to get the one that matches
  for ( var i=0; i < this.items.length; i++ ) {
    var item = this.items[i];
    if ( item.element == elem ) {
      // return item
      return item;
    }
  }
};

/**
 * get collection of Outlayer.Items, given Elements
 * @param {Array} elems
 * @returns {Array} items - Outlayer.Items
 */
proto.getItems = function( elems ) {
  elems = utils.makeArray( elems );
  var items = [];
  elems.forEach( function( elem ) {
    var item = this.getItem( elem );
    if ( item ) {
      items.push( item );
    }
  }, this );

  return items;
};

/**
 * remove element(s) from instance and DOM
 * @param {Array or NodeList or Element} elems
 */
proto.remove = function( elems ) {
  var removeItems = this.getItems( elems );

  this._emitCompleteOnItems( 'remove', removeItems );

  // bail if no items to remove
  if ( !removeItems || !removeItems.length ) {
    return;
  }

  removeItems.forEach( function( item ) {
    item.remove();
    // remove item from collection
    utils.removeFrom( this.items, item );
  }, this );
};

// ----- destroy ----- //

// remove and disable Outlayer instance
proto.destroy = function() {
  // clean up dynamic styles
  var style = this.element.style;
  style.height = '';
  style.position = '';
  style.width = '';
  // destroy items
  this.items.forEach( function( item ) {
    item.destroy();
  });

  this.unbindResize();

  var id = this.element.outlayerGUID;
  delete instances[ id ]; // remove reference to instance by id
  delete this.element.outlayerGUID;
  // remove data for jQuery
  if ( jQuery ) {
    jQuery.removeData( this.element, this.constructor.namespace );
  }

};

// -------------------------- data -------------------------- //

/**
 * get Outlayer instance from element
 * @param {Element} elem
 * @returns {Outlayer}
 */
Outlayer.data = function( elem ) {
  elem = utils.getQueryElement( elem );
  var id = elem && elem.outlayerGUID;
  return id && instances[ id ];
};


// -------------------------- create Outlayer class -------------------------- //

/**
 * create a layout class
 * @param {String} namespace
 */
Outlayer.create = function( namespace, options ) {
  // sub-class Outlayer
  var Layout = subclass( Outlayer );
  // apply new options and compatOptions
  Layout.defaults = utils.extend( {}, Outlayer.defaults );
  utils.extend( Layout.defaults, options );
  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

  Layout.namespace = namespace;

  Layout.data = Outlayer.data;

  // sub-class Item
  Layout.Item = subclass( Item );

  // -------------------------- declarative -------------------------- //

  utils.htmlInit( Layout, namespace );

  // -------------------------- jQuery bridge -------------------------- //

  // make into jQuery plugin
  if ( jQuery && jQuery.bridget ) {
    jQuery.bridget( namespace, Layout );
  }

  return Layout;
};

function subclass( Parent ) {
  function SubClass() {
    Parent.apply( this, arguments );
  }

  SubClass.prototype = Object.create( Parent.prototype );
  SubClass.prototype.constructor = SubClass;

  return SubClass;
}

// ----- helpers ----- //

// how many milliseconds are in each unit
var msUnits = {
  ms: 1,
  s: 1000
};

// munge time-like parameter into millisecond number
// '0.4s' -> 40
function getMilliseconds( time ) {
  if ( typeof time == 'number' ) {
    return time;
  }
  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
  var num = matches && matches[1];
  var unit = matches && matches[2];
  if ( !num.length ) {
    return 0;
  }
  num = parseFloat( num );
  var mult = msUnits[ unit ] || 1;
  return num * mult;
}

// ----- fin ----- //

// back in global
Outlayer.Item = Item;

return Outlayer;

}));


/***/ }),
/* 1250 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Fizzy UI utils v2.0.5
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(1251)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = function( matchesSelector ) {
      return factory( window, matchesSelector );
    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('desandro-matches-selector')
    );
  } else {
    // browser global
    window.fizzyUIUtils = factory(
      window,
      window.matchesSelector
    );
  }

}( window, function factory( window, matchesSelector ) {

'use strict';

var utils = {};

// ----- extend ----- //

// extends objects
utils.extend = function( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
};

// ----- modulo ----- //

utils.modulo = function( num, div ) {
  return ( ( num % div ) + div ) % div;
};

// ----- makeArray ----- //

// turn element or nodeList into an array
utils.makeArray = function( obj ) {
  var ary = [];
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    ary = obj;
  } else if ( obj && typeof obj == 'object' &&
    typeof obj.length == 'number' ) {
    // convert nodeList to array
    for ( var i=0; i < obj.length; i++ ) {
      ary.push( obj[i] );
    }
  } else {
    // array of single index
    ary.push( obj );
  }
  return ary;
};

// ----- removeFrom ----- //

utils.removeFrom = function( ary, obj ) {
  var index = ary.indexOf( obj );
  if ( index != -1 ) {
    ary.splice( index, 1 );
  }
};

// ----- getParent ----- //

utils.getParent = function( elem, selector ) {
  while ( elem.parentNode && elem != document.body ) {
    elem = elem.parentNode;
    if ( matchesSelector( elem, selector ) ) {
      return elem;
    }
  }
};

// ----- getQueryElement ----- //

// use element as selector string
utils.getQueryElement = function( elem ) {
  if ( typeof elem == 'string' ) {
    return document.querySelector( elem );
  }
  return elem;
};

// ----- handleEvent ----- //

// enable .ontype to trigger from .addEventListener( elem, 'type' )
utils.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

// ----- filterFindElements ----- //

utils.filterFindElements = function( elems, selector ) {
  // make array of elems
  elems = utils.makeArray( elems );
  var ffElems = [];

  elems.forEach( function( elem ) {
    // check that elem is an actual element
    if ( !( elem instanceof HTMLElement ) ) {
      return;
    }
    // add elem if no selector
    if ( !selector ) {
      ffElems.push( elem );
      return;
    }
    // filter & find items if we have a selector
    // filter
    if ( matchesSelector( elem, selector ) ) {
      ffElems.push( elem );
    }
    // find children
    var childElems = elem.querySelectorAll( selector );
    // concat childElems to filterFound array
    for ( var i=0; i < childElems.length; i++ ) {
      ffElems.push( childElems[i] );
    }
  });

  return ffElems;
};

// ----- debounceMethod ----- //

utils.debounceMethod = function( _class, methodName, threshold ) {
  // original method
  var method = _class.prototype[ methodName ];
  var timeoutName = methodName + 'Timeout';

  _class.prototype[ methodName ] = function() {
    var timeout = this[ timeoutName ];
    if ( timeout ) {
      clearTimeout( timeout );
    }
    var args = arguments;

    var _this = this;
    this[ timeoutName ] = setTimeout( function() {
      method.apply( _this, args );
      delete _this[ timeoutName ];
    }, threshold || 100 );
  };
};

// ----- docReady ----- //

utils.docReady = function( callback ) {
  var readyState = document.readyState;
  if ( readyState == 'complete' || readyState == 'interactive' ) {
    // do async to allow for other scripts to run. metafizzy/flickity#441
    setTimeout( callback );
  } else {
    document.addEventListener( 'DOMContentLoaded', callback );
  }
};

// ----- htmlInit ----- //

// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
utils.toDashed = function( str ) {
  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
    return $1 + '-' + $2;
  }).toLowerCase();
};

var console = window.console;
/**
 * allow user to initialize classes via [data-namespace] or .js-namespace class
 * htmlInit( Widget, 'widgetName' )
 * options are parsed from data-namespace-options
 */
utils.htmlInit = function( WidgetClass, namespace ) {
  utils.docReady( function() {
    var dashedNamespace = utils.toDashed( namespace );
    var dataAttr = 'data-' + dashedNamespace;
    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
    var elems = utils.makeArray( dataAttrElems )
      .concat( utils.makeArray( jsDashElems ) );
    var dataOptionsAttr = dataAttr + '-options';
    var jQuery = window.jQuery;

    elems.forEach( function( elem ) {
      var attr = elem.getAttribute( dataAttr ) ||
        elem.getAttribute( dataOptionsAttr );
      var options;
      try {
        options = attr && JSON.parse( attr );
      } catch ( error ) {
        // log error, do not initialize
        if ( console ) {
          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
          ': ' + error );
        }
        return;
      }
      // initialize
      var instance = new WidgetClass( elem, options );
      // make available via $().data('namespace')
      if ( jQuery ) {
        jQuery.data( elem, namespace, instance );
      }
    });

  });
};

// -----  ----- //

return utils;

}));


/***/ }),
/* 1251 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * matchesSelector v2.0.2
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }

}( window, function factory() {
  'use strict';

  var matchesMethod = ( function() {
    var ElemProto = window.Element.prototype;
    // check for the standard method name first
    if ( ElemProto.matches ) {
      return 'matches';
    }
    // check un-prefixed
    if ( ElemProto.matchesSelector ) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

    for ( var i=0; i < prefixes.length; i++ ) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if ( ElemProto[ method ] ) {
        return method;
      }
    }
  })();

  return function matchesSelector( elem, selector ) {
    return elem[ matchesMethod ]( selector );
  };

}));


/***/ }),
/* 1252 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Outlayer Item
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1087),
        __webpack_require__(1088)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      require('ev-emitter'),
      require('get-size')
    );
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(
      window.EvEmitter,
      window.getSize
    );
  }

}( window, function factory( EvEmitter, getSize ) {
'use strict';

// ----- helpers ----- //

function isEmptyObj( obj ) {
  for ( var prop in obj ) {
    return false;
  }
  prop = null;
  return true;
}

// -------------------------- CSS3 support -------------------------- //


var docElemStyle = document.documentElement.style;

var transitionProperty = typeof docElemStyle.transition == 'string' ?
  'transition' : 'WebkitTransition';
var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

var transitionEndEvent = {
  WebkitTransition: 'webkitTransitionEnd',
  transition: 'transitionend'
}[ transitionProperty ];

// cache all vendor properties that could have vendor prefix
var vendorProperties = {
  transform: transformProperty,
  transition: transitionProperty,
  transitionDuration: transitionProperty + 'Duration',
  transitionProperty: transitionProperty + 'Property',
  transitionDelay: transitionProperty + 'Delay'
};

// -------------------------- Item -------------------------- //

function Item( element, layout ) {
  if ( !element ) {
    return;
  }

  this.element = element;
  // parent layout class, i.e. Masonry, Isotope, or Packery
  this.layout = layout;
  this.position = {
    x: 0,
    y: 0
  };

  this._create();
}

// inherit EvEmitter
var proto = Item.prototype = Object.create( EvEmitter.prototype );
proto.constructor = Item;

proto._create = function() {
  // transition objects
  this._transn = {
    ingProperties: {},
    clean: {},
    onEnd: {}
  };

  this.css({
    position: 'absolute'
  });
};

// trigger specified handler for event type
proto.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * apply CSS styles to element
 * @param {Object} style
 */
proto.css = function( style ) {
  var elemStyle = this.element.style;

  for ( var prop in style ) {
    // use vendor property if available
    var supportedProp = vendorProperties[ prop ] || prop;
    elemStyle[ supportedProp ] = style[ prop ];
  }
};

 // measure position, and sets it
proto.getPosition = function() {
  var style = getComputedStyle( this.element );
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
  var x = parseFloat( xValue );
  var y = parseFloat( yValue );
  // convert percent to pixels
  var layoutSize = this.layout.size;
  if ( xValue.indexOf('%') != -1 ) {
    x = ( x / 100 ) * layoutSize.width;
  }
  if ( yValue.indexOf('%') != -1 ) {
    y = ( y / 100 ) * layoutSize.height;
  }
  // clean up 'auto' or other non-integer values
  x = isNaN( x ) ? 0 : x;
  y = isNaN( y ) ? 0 : y;
  // remove padding from measurement
  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

  this.position.x = x;
  this.position.y = y;
};

// set settled position, apply padding
proto.layoutPosition = function() {
  var layoutSize = this.layout.size;
  var style = {};
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');

  // x
  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
  var xProperty = isOriginLeft ? 'left' : 'right';
  var xResetProperty = isOriginLeft ? 'right' : 'left';

  var x = this.position.x + layoutSize[ xPadding ];
  // set in percentage or pixels
  style[ xProperty ] = this.getXValue( x );
  // reset other property
  style[ xResetProperty ] = '';

  // y
  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
  var yProperty = isOriginTop ? 'top' : 'bottom';
  var yResetProperty = isOriginTop ? 'bottom' : 'top';

  var y = this.position.y + layoutSize[ yPadding ];
  // set in percentage or pixels
  style[ yProperty ] = this.getYValue( y );
  // reset other property
  style[ yResetProperty ] = '';

  this.css( style );
  this.emitEvent( 'layout', [ this ] );
};

proto.getXValue = function( x ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && !isHorizontal ?
    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
};

proto.getYValue = function( y ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && isHorizontal ?
    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
};

proto._transitionTo = function( x, y ) {
  this.getPosition();
  // get current x & y from top/left
  var curX = this.position.x;
  var curY = this.position.y;

  var didNotMove = x == this.position.x && y == this.position.y;

  // save end position
  this.setPosition( x, y );

  // if did not move and not transitioning, just go to layout
  if ( didNotMove && !this.isTransitioning ) {
    this.layoutPosition();
    return;
  }

  var transX = x - curX;
  var transY = y - curY;
  var transitionStyle = {};
  transitionStyle.transform = this.getTranslate( transX, transY );

  this.transition({
    to: transitionStyle,
    onTransitionEnd: {
      transform: this.layoutPosition
    },
    isCleaning: true
  });
};

proto.getTranslate = function( x, y ) {
  // flip cooridinates if origin on right or bottom
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  x = isOriginLeft ? x : -x;
  y = isOriginTop ? y : -y;
  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
};

// non transition + transform support
proto.goTo = function( x, y ) {
  this.setPosition( x, y );
  this.layoutPosition();
};

proto.moveTo = proto._transitionTo;

proto.setPosition = function( x, y ) {
  this.position.x = parseFloat( x );
  this.position.y = parseFloat( y );
};

// ----- transition ----- //

/**
 * @param {Object} style - CSS
 * @param {Function} onTransitionEnd
 */

// non transition, just trigger callback
proto._nonTransition = function( args ) {
  this.css( args.to );
  if ( args.isCleaning ) {
    this._removeStyles( args.to );
  }
  for ( var prop in args.onTransitionEnd ) {
    args.onTransitionEnd[ prop ].call( this );
  }
};

/**
 * proper transition
 * @param {Object} args - arguments
 *   @param {Object} to - style to transition to
 *   @param {Object} from - style to start transition from
 *   @param {Boolean} isCleaning - removes transition styles after transition
 *   @param {Function} onTransitionEnd - callback
 */
proto.transition = function( args ) {
  // redirect to nonTransition if no transition duration
  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
    this._nonTransition( args );
    return;
  }

  var _transition = this._transn;
  // keep track of onTransitionEnd callback by css property
  for ( var prop in args.onTransitionEnd ) {
    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
  }
  // keep track of properties that are transitioning
  for ( prop in args.to ) {
    _transition.ingProperties[ prop ] = true;
    // keep track of properties to clean up when transition is done
    if ( args.isCleaning ) {
      _transition.clean[ prop ] = true;
    }
  }

  // set from styles
  if ( args.from ) {
    this.css( args.from );
    // force redraw. http://blog.alexmaccaw.com/css-transitions
    var h = this.element.offsetHeight;
    // hack for JSHint to hush about unused var
    h = null;
  }
  // enable transition
  this.enableTransition( args.to );
  // set styles that are transitioning
  this.css( args.to );

  this.isTransitioning = true;

};

// dash before all cap letters, including first for
// WebkitTransform => -webkit-transform
function toDashedAll( str ) {
  return str.replace( /([A-Z])/g, function( $1 ) {
    return '-' + $1.toLowerCase();
  });
}

var transitionProps = 'opacity,' + toDashedAll( transformProperty );

proto.enableTransition = function(/* style */) {
  // HACK changing transitionProperty during a transition
  // will cause transition to jump
  if ( this.isTransitioning ) {
    return;
  }

  // make `transition: foo, bar, baz` from style object
  // HACK un-comment this when enableTransition can work
  // while a transition is happening
  // var transitionValues = [];
  // for ( var prop in style ) {
  //   // dash-ify camelCased properties like WebkitTransition
  //   prop = vendorProperties[ prop ] || prop;
  //   transitionValues.push( toDashedAll( prop ) );
  // }
  // munge number to millisecond, to match stagger
  var duration = this.layout.options.transitionDuration;
  duration = typeof duration == 'number' ? duration + 'ms' : duration;
  // enable transition styles
  this.css({
    transitionProperty: transitionProps,
    transitionDuration: duration,
    transitionDelay: this.staggerDelay || 0
  });
  // listen for transition end event
  this.element.addEventListener( transitionEndEvent, this, false );
};

// ----- events ----- //

proto.onwebkitTransitionEnd = function( event ) {
  this.ontransitionend( event );
};

proto.onotransitionend = function( event ) {
  this.ontransitionend( event );
};

// properties that I munge to make my life easier
var dashedVendorProperties = {
  '-webkit-transform': 'transform'
};

proto.ontransitionend = function( event ) {
  // disregard bubbled events from children
  if ( event.target !== this.element ) {
    return;
  }
  var _transition = this._transn;
  // get property name of transitioned property, convert to prefix-free
  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

  // remove property that has completed transitioning
  delete _transition.ingProperties[ propertyName ];
  // check if any properties are still transitioning
  if ( isEmptyObj( _transition.ingProperties ) ) {
    // all properties have completed transitioning
    this.disableTransition();
  }
  // clean style
  if ( propertyName in _transition.clean ) {
    // clean up style
    this.element.style[ event.propertyName ] = '';
    delete _transition.clean[ propertyName ];
  }
  // trigger onTransitionEnd callback
  if ( propertyName in _transition.onEnd ) {
    var onTransitionEnd = _transition.onEnd[ propertyName ];
    onTransitionEnd.call( this );
    delete _transition.onEnd[ propertyName ];
  }

  this.emitEvent( 'transitionEnd', [ this ] );
};

proto.disableTransition = function() {
  this.removeTransitionStyles();
  this.element.removeEventListener( transitionEndEvent, this, false );
  this.isTransitioning = false;
};

/**
 * removes style property from element
 * @param {Object} style
**/
proto._removeStyles = function( style ) {
  // clean up transition styles
  var cleanStyle = {};
  for ( var prop in style ) {
    cleanStyle[ prop ] = '';
  }
  this.css( cleanStyle );
};

var cleanTransitionStyle = {
  transitionProperty: '',
  transitionDuration: '',
  transitionDelay: ''
};

proto.removeTransitionStyles = function() {
  // remove transition
  this.css( cleanTransitionStyle );
};

// ----- stagger ----- //

proto.stagger = function( delay ) {
  delay = isNaN( delay ) ? 0 : delay;
  this.staggerDelay = delay + 'ms';
};

// ----- show/hide/remove ----- //

// remove element from DOM
proto.removeElem = function() {
  this.element.parentNode.removeChild( this.element );
  // remove display: none
  this.css({ display: '' });
  this.emitEvent( 'remove', [ this ] );
};

proto.remove = function() {
  // just remove element if no transition support or no transition
  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
    this.removeElem();
    return;
  }

  // start transition
  this.once( 'transitionEnd', function() {
    this.removeElem();
  });
  this.hide();
};

proto.reveal = function() {
  delete this.isHidden;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

  this.transition({
    from: options.hiddenStyle,
    to: options.visibleStyle,
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onRevealTransitionEnd = function() {
  // check if still visible
  // during transition, item may have been hidden
  if ( !this.isHidden ) {
    this.emitEvent('reveal');
  }
};

/**
 * get style property use for hide/reveal transition end
 * @param {String} styleProperty - hiddenStyle/visibleStyle
 * @returns {String}
 */
proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
  var optionStyle = this.layout.options[ styleProperty ];
  // use opacity
  if ( optionStyle.opacity ) {
    return 'opacity';
  }
  // get first property
  for ( var prop in optionStyle ) {
    return prop;
  }
};

proto.hide = function() {
  // set flag
  this.isHidden = true;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

  this.transition({
    from: options.visibleStyle,
    to: options.hiddenStyle,
    // keep hidden stuff hidden
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onHideTransitionEnd = function() {
  // check if still hidden
  // during transition, item may have been un-hidden
  if ( this.isHidden ) {
    this.css({ display: 'none' });
    this.emitEvent('hide');
  }
};

proto.destroy = function() {
  this.css({
    position: '',
    left: '',
    right: '',
    top: '',
    bottom: '',
    transition: '',
    transform: ''
  });
};

return Item;

}));


/***/ }),
/* 1253 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * imagesLoaded v4.1.3
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

( function( window, factory ) { 'use strict';
  // universal module definition

  /*global define: false, module: false, require: false */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(1087)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = function( EvEmitter ) {
      return factory( window, EvEmitter );
    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('ev-emitter')
    );
  } else {
    // browser global
    window.imagesLoaded = factory(
      window,
      window.EvEmitter
    );
  }

})( typeof window !== 'undefined' ? window : this,

// --------------------------  factory -------------------------- //

function factory( window, EvEmitter ) {

'use strict';

var $ = window.jQuery;
var console = window.console;

// -------------------------- helpers -------------------------- //

// extend objects
function extend( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
}

// turn element or nodeList into an array
function makeArray( obj ) {
  var ary = [];
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    ary = obj;
  } else if ( typeof obj.length == 'number' ) {
    // convert nodeList to array
    for ( var i=0; i < obj.length; i++ ) {
      ary.push( obj[i] );
    }
  } else {
    // array of single index
    ary.push( obj );
  }
  return ary;
}

// -------------------------- imagesLoaded -------------------------- //

/**
 * @param {Array, Element, NodeList, String} elem
 * @param {Object or Function} options - if function, use as callback
 * @param {Function} onAlways - callback function
 */
function ImagesLoaded( elem, options, onAlways ) {
  // coerce ImagesLoaded() without new, to be new ImagesLoaded()
  if ( !( this instanceof ImagesLoaded ) ) {
    return new ImagesLoaded( elem, options, onAlways );
  }
  // use elem as selector string
  if ( typeof elem == 'string' ) {
    elem = document.querySelectorAll( elem );
  }

  this.elements = makeArray( elem );
  this.options = extend( {}, this.options );

  if ( typeof options == 'function' ) {
    onAlways = options;
  } else {
    extend( this.options, options );
  }

  if ( onAlways ) {
    this.on( 'always', onAlways );
  }

  this.getImages();

  if ( $ ) {
    // add jQuery Deferred object
    this.jqDeferred = new $.Deferred();
  }

  // HACK check async to allow time to bind listeners
  setTimeout( function() {
    this.check();
  }.bind( this ));
}

ImagesLoaded.prototype = Object.create( EvEmitter.prototype );

ImagesLoaded.prototype.options = {};

ImagesLoaded.prototype.getImages = function() {
  this.images = [];

  // filter & find items if we have an item selector
  this.elements.forEach( this.addElementImages, this );
};

/**
 * @param {Node} element
 */
ImagesLoaded.prototype.addElementImages = function( elem ) {
  // filter siblings
  if ( elem.nodeName == 'IMG' ) {
    this.addImage( elem );
  }
  // get background image on element
  if ( this.options.background === true ) {
    this.addElementBackgroundImages( elem );
  }

  // find children
  // no non-element nodes, #143
  var nodeType = elem.nodeType;
  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {
    return;
  }
  var childImgs = elem.querySelectorAll('img');
  // concat childElems to filterFound array
  for ( var i=0; i < childImgs.length; i++ ) {
    var img = childImgs[i];
    this.addImage( img );
  }

  // get child background images
  if ( typeof this.options.background == 'string' ) {
    var children = elem.querySelectorAll( this.options.background );
    for ( i=0; i < children.length; i++ ) {
      var child = children[i];
      this.addElementBackgroundImages( child );
    }
  }
};

var elementNodeTypes = {
  1: true,
  9: true,
  11: true
};

ImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    // Firefox returns null if in a hidden iframe https://bugzil.la/548397
    return;
  }
  // get url inside url("...")
  var reURL = /url\((['"])?(.*?)\1\)/gi;
  var matches = reURL.exec( style.backgroundImage );
  while ( matches !== null ) {
    var url = matches && matches[2];
    if ( url ) {
      this.addBackground( url, elem );
    }
    matches = reURL.exec( style.backgroundImage );
  }
};

/**
 * @param {Image} img
 */
ImagesLoaded.prototype.addImage = function( img ) {
  var loadingImage = new LoadingImage( img );
  this.images.push( loadingImage );
};

ImagesLoaded.prototype.addBackground = function( url, elem ) {
  var background = new Background( url, elem );
  this.images.push( background );
};

ImagesLoaded.prototype.check = function() {
  var _this = this;
  this.progressedCount = 0;
  this.hasAnyBroken = false;
  // complete if no images
  if ( !this.images.length ) {
    this.complete();
    return;
  }

  function onProgress( image, elem, message ) {
    // HACK - Chrome triggers event before object properties have changed. #83
    setTimeout( function() {
      _this.progress( image, elem, message );
    });
  }

  this.images.forEach( function( loadingImage ) {
    loadingImage.once( 'progress', onProgress );
    loadingImage.check();
  });
};

ImagesLoaded.prototype.progress = function( image, elem, message ) {
  this.progressedCount++;
  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
  // progress event
  this.emitEvent( 'progress', [ this, image, elem ] );
  if ( this.jqDeferred && this.jqDeferred.notify ) {
    this.jqDeferred.notify( this, image );
  }
  // check if completed
  if ( this.progressedCount == this.images.length ) {
    this.complete();
  }

  if ( this.options.debug && console ) {
    console.log( 'progress: ' + message, image, elem );
  }
};

ImagesLoaded.prototype.complete = function() {
  var eventName = this.hasAnyBroken ? 'fail' : 'done';
  this.isComplete = true;
  this.emitEvent( eventName, [ this ] );
  this.emitEvent( 'always', [ this ] );
  if ( this.jqDeferred ) {
    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
    this.jqDeferred[ jqMethod ]( this );
  }
};

// --------------------------  -------------------------- //

function LoadingImage( img ) {
  this.img = img;
}

LoadingImage.prototype = Object.create( EvEmitter.prototype );

LoadingImage.prototype.check = function() {
  // If complete is true and browser supports natural sizes,
  // try to check for image status manually.
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    // report based on naturalWidth
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    return;
  }

  // If none of the checks above matched, simulate loading on detached element.
  this.proxyImage = new Image();
  this.proxyImage.addEventListener( 'load', this );
  this.proxyImage.addEventListener( 'error', this );
  // bind to image as well for Firefox. #191
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.proxyImage.src = this.img.src;
};

LoadingImage.prototype.getIsImageComplete = function() {
  return this.img.complete && this.img.naturalWidth !== undefined;
};

LoadingImage.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.img, message ] );
};

// ----- events ----- //

// trigger specified handler for event type
LoadingImage.prototype.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

LoadingImage.prototype.onload = function() {
  this.confirm( true, 'onload' );
  this.unbindEvents();
};

LoadingImage.prototype.onerror = function() {
  this.confirm( false, 'onerror' );
  this.unbindEvents();
};

LoadingImage.prototype.unbindEvents = function() {
  this.proxyImage.removeEventListener( 'load', this );
  this.proxyImage.removeEventListener( 'error', this );
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

// -------------------------- Background -------------------------- //

function Background( url, element ) {
  this.url = url;
  this.element = element;
  this.img = new Image();
}

// inherit LoadingImage prototype
Background.prototype = Object.create( LoadingImage.prototype );

Background.prototype.check = function() {
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.img.src = this.url;
  // check if image is already complete
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    this.unbindEvents();
  }
};

Background.prototype.unbindEvents = function() {
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

Background.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.element, message ] );
};

// -------------------------- jQuery -------------------------- //

ImagesLoaded.makeJQueryPlugin = function( jQuery ) {
  jQuery = jQuery || window.jQuery;
  if ( !jQuery ) {
    return;
  }
  // set local variable
  $ = jQuery;
  // $().imagesLoaded()
  $.fn.imagesLoaded = function( options, callback ) {
    var instance = new ImagesLoaded( this, options, callback );
    return instance.jqDeferred.promise( $(this) );
  };
};
// try making plugin
ImagesLoaded.makeJQueryPlugin();

// --------------------------  -------------------------- //

return ImagesLoaded;

});


/***/ }),
/* 1254 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(1069),
    copyObject = __webpack_require__(1052),
    createAssigner = __webpack_require__(1129),
    isArrayLike = __webpack_require__(62),
    isPrototype = __webpack_require__(229),
    keys = __webpack_require__(113);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;


/***/ }),
/* 1255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach                 = __webpack_require__(1130).forEach;
var elementUtilsMaker       = __webpack_require__(1256);
var listenerHandlerMaker    = __webpack_require__(1257);
var idGeneratorMaker        = __webpack_require__(1258);
var idHandlerMaker          = __webpack_require__(1259);
var reporterMaker           = __webpack_require__(1260);
var browserDetector         = __webpack_require__(1131);
var batchProcessorMaker     = __webpack_require__(1261);
var stateHandler            = __webpack_require__(1263);

//Detection strategies.
var objectStrategyMaker     = __webpack_require__(1264);
var scrollStrategyMaker     = __webpack_require__(1265);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function(options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function (element) { return options.idHandler.get(element, true); },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if(!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd     = !!getOption(options, "callOnAdd", true);
    globalOptions.debug         = !!getOption(options, "debug", false);

    var eventListenerHandler    = listenerHandlerMaker(idHandler);
    var elementUtils            = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler
    };

    if(desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if(desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if(desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if(callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if(!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if(!elements) {
            throw new Error("At least one element required.");
        }

        if(!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if(!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if(elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if(elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if(onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function(callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if(elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if(elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if(!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 1256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};


/***/ }),
/* 1257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if(!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
              listeners.splice(i, 1);
              break;
            }
        }
    }

    function removeAllListeners(element) {
      var listeners = getListeners(element);
      if (!listeners) { return; }
      listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};


/***/ }),
/* 1258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function() {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};


/***/ }),
/* 1259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var idGenerator     = options.idGenerator;
    var getState        = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};


/***/ }),
/* 1260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */
module.exports = function(quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if(!quiet && window.console) {
        var attachFunction = function(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) { //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),
/* 1261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(1262);

module.exports = function batchProcessorMaker(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var asyncProcess    = utils.getOption(options, "async", true);
    var autoProcess     = utils.getOption(options, "auto", true);

    if(autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if(localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if(asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if(localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch           = {};
        batchSize       = 0;
        topLevel        = 0;
        bottomLevel     = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function(fn) { return setTimeout(fn, 0); };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch       = {};
    var size        = 0;
    var topLevel    = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if(!fn) {
            fn = level;
            level = 0;
        }

        if(level > topLevel) {
            topLevel = level;
        } else if(level < bottomLevel) {
            bottomLevel = level;
        }

        if(!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for(var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for(var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}


/***/ }),
/* 1262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 1263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};


/***/ }),
/* 1264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(1131);

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;

    if(!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        if(!getObject(element)) {
            throw new Error("Element is not detectable by this strategy.");
        }

        function listenerProxy() {
            listener(element);
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);
            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;";

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if(style.position === "static") {
                        element.style.position = "relative";

                        var removeRelativeStyles = function(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if(value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style[property] = 0;
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if(!element.contentDocument) {
                            setTimeout(function checkForObjectDocument() {
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if(!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if(browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if(batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if(browserDetector.isIE(8)) {
            element.detachEvent("onresize", getState(element).object.proxy);
        } else {
            element.removeChild(getObject(element));
        }
        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 1265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(1130).forEach;

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;
    var hasState        = options.stateHandler.hasState;
    var idHandler       = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";
    injectScrollStyle(styleId, detectionContainerClass);

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = "position: absolute; width: " + width*2 + "px; height: " + height*2 + "px; visibility: hidden; margin: 0; padding: 0;";

        var container = document.createElement("div");
        container.style.cssText = "position: absolute; width: " + width + "px; height: " + height + "px; overflow: scroll; visibility: none; top: " + -width*3 + "px; left: " + -height*3 + "px; visibility: hidden; margin: 0; padding: 0;";

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                document.head.appendChild(element);
            };

            var styleElement = document.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!document.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { display: none; }\n\n";
            style += "." + containerAnimationActiveClass + " { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: " + containerAnimationClass + "; animation-name: " + containerAnimationClass + "; }\n";
            style += "@-webkit-keyframes " + containerAnimationClass +  " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass +          " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if(el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if(el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle            = getComputedStyle(element);
            var style                   = {};
            style.position              = elementStyle.position;
            style.width                 = element.offsetWidth;
            style.height                = element.offsetHeight;
            style.top                   = elementStyle.top;
            style.right                 = elementStyle.right;
            style.bottom                = elementStyle.bottom;
            style.left                  = elementStyle.left;
            style.widthCSS              = elementStyle.width;
            style.heightCSS             = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight  = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand          = getExpandElement(element);
            var shrink          = getShrinkElement(element);
            var expandWidth     = getExpandWidth(width);
            var expandHeight    = getExpandHeight(height);
            var shrinkWidth     = getShrinkWidth(width);
            var shrinkHeight    = getShrinkHeight(height);
            expand.scrollLeft   = expandWidth;
            expand.scrollTop    = expandHeight;
            shrink.scrollLeft   = shrinkWidth;
            shrink.scrollTop    = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container                   = document.createElement("div");
                container.className         = detectionContainerClass;
                container.style.cssText     = "visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;";
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function () {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if(style.position === "static") {
                    element.style.position = "relative";

                    var removeRelativeStyles = function(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if(value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = (!left ? "0" : (left + "px"));
                top = (!top ? "0" : (top + "px"));
                bottom = (!bottom ? "0" : (bottom + "px"));
                right = (!right ? "0" : (right + "px"));

                return "left: " + left + "; top: " + top + "; right: " + right + "; bottom: " + bottom + ";";
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth          = scrollbarSizes.width;
            var scrollbarHeight         = scrollbarSizes.height;
            var containerContainerStyle = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;";
            var containerStyle          = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; " + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);
            var expandStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var shrinkStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var expandChildStyle        = "position: absolute; left: 0; top: 0;";
            var shrinkChildStyle        = "position: absolute; width: 200%; height: 200%;";

            var containerContainer      = document.createElement("div");
            var container               = document.createElement("div");
            var expand                  = document.createElement("div");
            var expandChild             = document.createElement("div");
            var shrink                  = document.createElement("div");
            var shrinkChild             = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir              = "ltr";

            containerContainer.style.cssText    = containerContainerStyle;
            containerContainer.className        = detectionContainerClass;
            container.className                 = detectionContainerClass;
            container.style.cssText             = containerStyle;
            expand.style.cssText                = expandStyle;
            expandChild.style.cssText           = expandChildStyle;
            shrink.style.cssText                = shrinkStyle;
            shrinkChild.style.cssText           = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                getState(element).onExpand && getState(element).onExpand();
            }

            function onShrinkScroll() {
                getState(element).onShrink && getState(element).onShrink();
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild             = getExpandChildElement(element);
                var expandWidth             = getExpandWidth(width);
                var expandHeight            = getExpandHeight(height);
                expandChild.style.width     = expandWidth + "px";
                expandChild.style.height    = expandHeight + "px";
            }

            function updateDetectorElements(done) {
                var width           = element.offsetWidth;
                var height          = element.offsetHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                          debug("Aborting because element container has not been initialized");
                          return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify the if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }


                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                var width = element.offsetWidth;
                var height = element.offsetHeight;

                if (width !== element.lastWidth || height !== element.lastHeight) {
                    debug("Element size changed.");
                    updateDetectorElements(notifyListenersIfNeeded);
                } else {
                    debug("Element size has not changed (" + width + "x" + height + ").");
                }
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 1266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var React = __webpack_require__(0);
var factory = __webpack_require__(1267);

if (typeof React === 'undefined') {
  throw Error(
    'create-react-class could not find the React object. If you are using script tags, ' +
      'make sure that React is being loaded before create-react-class.'
  );
}

// Hack to grab NoopUpdateQueue from isomorphic React
var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(
  React.Component,
  React.isValidElement,
  ReactNoopUpdateQueue
);


/***/ }),
/* 1267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(10);

var emptyObject = __webpack_require__(116);
var _invariant = __webpack_require__(4);

if (true) {
  var warning = __webpack_require__(6);
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (true) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (true) {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (true) {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (true) {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (true) {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (true) {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (true) {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (true) {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isInherited = name in Constructor;
      _invariant(
        !isInherited,
        'ReactClass: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be ' +
          'due to a mixin.',
        name
      );
      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (true) {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (true) {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (true) {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (true) {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (true) {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (true) {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (true) {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (true) {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;


/***/ }),
/* 1268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _commercial_CI_ = __webpack_require__(1269);

var _commercial_CI_2 = _interopRequireDefault(_commercial_CI_);

var _land_CU_5_and_LN_ = __webpack_require__(1270);

var _land_CU_5_and_LN_2 = _interopRequireDefault(_land_CU_5_and_LN_);

var _residential_rent_RT_ = __webpack_require__(1271);

var _residential_rent_RT_2 = _interopRequireDefault(_residential_rent_RT_);

var _residential_sale_RE_ = __webpack_require__(1272);

var _residential_sale_RE_2 = _interopRequireDefault(_residential_sale_RE_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  commercial_CI_4: _commercial_CI_2.default,
  land_CU_5_and_LN_3: _land_CU_5_and_LN_2.default,
  residential_rent_RT_6: _residential_rent_RT_2.default,
  residential_sale_RE_1: _residential_sale_RE_2.default
};

/***/ }),
/* 1269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _propertyHelper = __webpack_require__(1050);

var _propertyAttributeHelper = __webpack_require__(1064);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{
  "name": "Features", "children": [{ "name": "Interior", "items": [{ "name": "Unit Count", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_units[0]', null);
      }, "order": 1 }, { "name": "Ceiling Height", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_ceiling_height[0]', null);
      }, "order": 2 }, { "name": "Sprinklers", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_sprinklers.rets_sprinklers', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 3 }], "order": 1 }, { "name": "Exterior", "items": [{ "name": "Roof", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRoof)(data);
      }, "order": 1 }, { "name": "Foundation", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFoundation)(data);
      }, "order": 2 }], "order": 2 }, { "name": "Commercial", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getType)(data);
      }, "order": 1 }, { "name": "Rentals", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_rentals[0]', null);
      }, "order": 2 }, { "name": "Docks", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_docks[0]', null);
      }, "order": 3 }, { "name": "Drive-in Doors", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_drive_in_doors[0]', null);
      }, "order": 4 }], "order": 3 }, { "name": "Financials", "items": [{ "name": "Operating Expense", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_operating_expense[0]', null);
      }, "order": 1 }, { "name": "Annual Net Operating Income", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_annual_net_oper_income[0]', null);
      }, "order": 2 }, { "name": "Gross Operating Income", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_gross_operating_income[0]', null);
      }, "order": 3 }, { "name": "Gross Scheduled Income", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_gross_scheduled_income[0]', null);
      }, "order": 4 }, { "name": "Effect Income", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_effect_income[0]', null);
      }, "order": 5 }, { "name": "Other Income", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_other_income[0]', null);
      }, "order": 6 }], "order": 5 }]
}, { "name": "Property", "children": [{ "name": "Building", "items": [{ "name": "New Construction", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNewConstruction)(data);
      }, "order": 1 }, { "name": "Construction Completion", "value": function value(data) {
        return (0, _propertyAttributeHelper.getConstructionCompletion)(data);
      }, "order": 2 }, { "name": "Year Built", "value": function value(data) {
        return (0, _propertyAttributeHelper.getEstFinYear)(data) !== null ? (0, _propertyAttributeHelper.getYearBuilt)(data) : null;
      }, "order": 3 }, { "name": "Building", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_building_name[0]', null);
      }, "order": 4 }, { "name": "Building SQFT", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_building_sq_ft[0]', null);
      }, "order": 5 }, { "name": "Building Height", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_stories[0]', null);
      }, "order": 6 }, { "name": "Building Count", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_buildings[0]', null);
      }, "order": 7 }], "order": 1 }, { "name": "Lot", "items": [{ "name": "Number", "value": function value(data) {
        return (0, _get2.default)(data, 'post_metea.rets_lot_number[0]', null);
      }, "order": 1 }, { "name": "Acres", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeArea)(data);
      }, 'order': 2 }, { "name": "SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getSQFT)(data);
      }, 'order': 3 }, { "name": "Dimensions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeDim)(data);
      }, 'order': 4 }, { "name": "Zoning", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZoning)(data);
      }, "order": 5 }, { "name": "Flood Plain", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_flood_plain.rets_flood_plain', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 6 }, { "name": "Road Frontage", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRoadFrontage)(data);
      }, "order": 7 }, { "name": "Traffic Count", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_traffic_count[0]', null);
      }, "order": 8 }], "order": 2 }] }, {
  "name": "Location", "children": [{ "name": "Community", "items": [{ "name": "Inside City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInsideCity)(data);
      }, "order": 1 }, { "name": "County", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCounty)(data);
      }, "order": 2 }, { "name": "Area", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAreaAndSubArea)(data);
      }, "order": 3 }, { "name": "Distance to RDU", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_distance_rdu.rets_distance_rdu', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 5 }], "order": 1 }, { "name": "Address", "items": [{ "name": "Cross Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCrossStreet)(data);
      }, "order": 1 }, { "name": "Street Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetNumber)(data);
      }, "order": 2 }, { "name": "Street Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetDirectional)(data);
      }, "order": 3 }, { "name": "Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreet)(data);
      }, "order": 4 }, { "name": "Post Directional", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_post_direction.rets_post_direction', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 5 }, { "name": "Unit Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getUnitNumber)(data);
      }, "order": 6 }, { "name": "City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCity)(data);
      }, "order": 7 }, { "name": "State", "value": function value(data) {
        return (0, _propertyAttributeHelper.getState)(data);
      }, "order": 8 }, { "name": "Zip", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZip)(data);
      }, "order": 9 }, { "name": "Latitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLatitude)(data);
      }, "order": 10 }, { "name": "Longitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLongitude)(data);
      }, "order": 11 }, { "name": "Directions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDirections)(data);
      }, "order": 12 }], "order": 3 }]
}, { "name": "Listing", "children": [{ "name": "Pricing", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getListingStatuses)(data);
      }, 'order': 1 }, { "name": "Price", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPrice)(data);
      }, "order": 2 }, { "name": "Price Per SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerSQFT)(data);
      }, 'order': 3 }, { "name": "Price Per Acre", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerAcre)(data);
      }, "order": 4 }, { "name": "Min SQFT Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_minimum_sq_ft_available[0]', null);
      }, "order": 5 }, { "name": "Max SQFT Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_maximum_sq_ft_available[0]', null);
      }, "order": 6 }, { "name": "Min Rent SQFT Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_minimum_lease_sq_ft[0]', null);
      }, "order": 7 }, { "name": "Max Rent SQFT Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_max_lease_sq_ft[0]', null);
      }, "order": 8 }], "order": 1 }, { "name": "Terms", "items": [{ "name": "Includes", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_sale_lease_includes.rets_sale_lease_includes', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 1 }, { "name": "Special Conditions", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_special_conditions.rets_special_conditions', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }, { "name": "Restrictions", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_restrictions.rets_restrictions', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 3 }], "order": 2 }, { "name": "Status", "items": [{ "name": "MLS ID", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMLSId)(data);
      }, "order": 1 }, { "name": "Status", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStatus)(data);
      }, "order": 2 }, { "name": "Published Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPublishedDate)(data);
      }, "order": 3 }, { "name": "Modified Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getModifiedDate)(data);
      }, "order": 4 }], "order": 3 }] }];

/***/ }),
/* 1270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _propertyHelper = __webpack_require__(1050);

var _propertyAttributeHelper = __webpack_require__(1064);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{
  "name": "Features", "children": [{ "name": "Land", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getType)(data);
      }, "order": 1 }, { "name": "Description", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_land_description.rets_land_description', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }, { "name": "Topography", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_topography.rets_topography', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 3 }, { "name": "Vegetation", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_vegetation.rets_vegetation', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 4 }, { "name": "Cleared Acres", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_cleared_acres[0]', null);
      }, "order": 5 }, { "name": "Wooded Acres", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_wooded_acres[0]', null);
      }, "order": 6 }, { "name": "Farm Use", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_farm_use.rets_farm_use', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 7 }, { "name": "Water", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_water.rets_water', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 8 }], "order": 1 }, { "name": "Lot", "items": [{ "name": "Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotNumber)(data);
      }, "order": 1 }, { "name": "Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotDescription)(data);
      }, "order": 2 }, { "name": "Acres", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeArea)(data);
      }, "order": 3 }, { "name": "SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getSQFT)(data);
      }, "order": 4 }, { "name": "Dimensions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeDim)(data);
      }, "order": 5 }, { "name": "Buildings", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_buildings[0]', null);
      }, "order": 6 }, { "name": "Equipment", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_equipment_prod.rets_equipment_prod', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 7 }, { "name": "Sewer", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_sewer_septic.rets_sewer_septic', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 8 }, { "name": "Percolation Test", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_perk_test.rets_perk_test', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 9 }, { "name": "Percolation Test Result", "value": function value(data) {
        var result = (0, _get2.default)(data, 'post_meta.rets_number_of_beds_yielded[0]', null);return result ? "Rated " + result + " bedrooms" : null;
      }, "order": 10 }, { "name": "Zoning", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZoning)(data);
      }, "order": 11 }, { "name": "Restrictive Covenants", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRestrictiveCovenants)(data);
      }, "order": 12 }, { "name": "Easements", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_easements.rets_easements', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 13 }, { "name": "Road Frontage", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_road_frontage_description.rets_road_frontage_description', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 14 }, { "name": "Road Frontage Length", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRoadFrontage)(data);
      }, "order": 14 }, { "name": "Road Description", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_road_description.rets_road_description', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 15 }, { "name": "Improvements", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_improvements.rets_improvements', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 16 }, { "name": "Utilities", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_utilities.rets_utilities', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 17 }, { "name": "Building Project", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_building_name[0]', null);
      }, "order": 18 }, { "name": "Flood Plain", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_flood_plain.rets_flood_plain', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 19 }, { "name": "Traffic Count", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_traffic_count[0]', null);
      }, "order": 20 }, { "name": "Distance to RDU", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_distance_rdu.rets_distance_rdu', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 21 }, { "name": "Rail Service", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_rail_service.rets_rail_service', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 22 }], "order": 2 }, { "name": "Utility", "items": [{ "name": "Utilities", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_number_of_rentals[0]', null);
      }, "order": 1 }, { "name": "Water & Sewer", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_water_sewer_fee[0]', null);
      }, "order": 2 }], "order": 3 }]
}, {
  "name": "Location", "children": [{ "name": "Community", "items": [{ "name": "Inside City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInsideCity)(data);
      }, "order": 1 }, { "name": "Neighborhood", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNeighborhood)(data);
      }, "order": 3 }, { "name": "County", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCounty)(data);
      }, "order": 4 }, { "name": "Area", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAreaAndSubArea)(data);
      }, "order": 5 }, { "name": "Transit", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_transportation.rets_transportation', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 7 }], "order": 1 }, { "name": "Homeowners Association", "items": [{ "name": "HOA Fees", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_association_fee[0]', null);
      }, "order": 1 }, { "name": "HOA Fees", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_association_fee_payment.rets_association_fee_payment', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }], "order": 2 }, { "name": "Schools", "items": [{ "name": "Elementary School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getElementarySchool)(data);
      }, "order": 1 }, { "name": "Middle School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMiddleSchool)(data);
      }, "order": 2 }, { "name": "High School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHighSchool)(data);
      }, "order": 3 }], "order": 3 }, { "name": "Address", "items": [{ "name": "Cross Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCrossStreet)(data);
      }, "order": 1 }, { "name": "Street Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetNumber)(data);
      }, "order": 2 }, { "name": "Street Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetDirectional)(data);
      }, "order": 3 }, { "name": "Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreet)(data);
      }, "order": 4 }, { "name": "Post Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPostDirectional)(data);
      }, "order": 5 }, { "name": "Unit Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getUnitNumber)(data);
      }, "order": 6 }, { "name": "City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCity)(data);
      }, "order": 7 }, { "name": "State", "value": function value(data) {
        return (0, _propertyAttributeHelper.getState)(data);
      }, "order": 8 }, { "name": "Zip", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZip)(data);
      }, "order": 9 }, { "name": "Latitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLatitude)(data);
      }, "order": 10 }, { "name": "Longitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLongitude)(data);
      }, "order": 11 }, { "name": "Directions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDirections)(data);
      }, "order": 12 }], "order": 4 }]
}, { "name": "Listing", "children": [{ "name": "Pricing", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getListingStatuses)(data);
      }, 'order': 1 }, { "name": "Price", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPrice)(data);
      }, "order": 2 }, { "name": "Price Per Acre", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerAcre)(data);
      }, "order": 3 }, { "name": "Price Per SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerSQFT)(data);
      }, 'order': 4 }, { "name": "Sale Price", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPrice)(data);
      }, 'order': 5 }, { "name": "Minimum Sale Price Per Acre", "value": function value(data) {
        return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_minimum_sq_ft_available[0]', null));
      }, 'order': 6 }, { "name": "Rent Price", "value": function value(data) {
        var leasePrice = (0, _get2.default)(data, 'post_meta.rets_lease_price[0]', null);return +leasePrice !== 0 ? leasePrice : null;
      }, 'order': 7 }, { "name": "Minimum Rent Price Per Acre", "value": function value(data) {
        var mnimumLeasePrice = (0, _get2.default)(data, 'post_meta.rets_minimum_lease_price_acre[0]', null);return +mnimumLeasePrice !== 0 ? mnimumLeasePrice : null;
      }, 'order': 8 }, { "name": "Acres Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_available_acres[0]', null);
      }, 'order': 9 }, { "name": "Minimum Acres Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_minimum_acres_avail[0]', null);
      }, 'order': 10 }], "order": 1 }, { "name": "Terms", "items": [{ "name": "Special Conditions", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_special_conditions.rets_special_conditions', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 1 }, { "name": "Terms", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_terms.rets_terms', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }], "order": 2 }, { "name": "Status", "items": [{ "name": "MLS ID", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMLSId)(data);
      }, "order": 1 }, { "name": "Status", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStatus)(data);
      }, "order": 2 }, { "name": "Published Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPublishedDate)(data);
      }, "order": 3 }, { "name": "Modified Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getModifiedDate)(data);
      }, "order": 4 }], "order": 3 }] }];

/***/ }),
/* 1271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _propertyHelper = __webpack_require__(1050);

var _propertyAttributeHelper = __webpack_require__(1064);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{ "name": "Rooms", "children": [{ "name": "Bedrooms", "items": [{ "name": "Bedrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBedrooms)(data);
      }, "order": 1 }, { "name": "Bedrooms on 1st Floor", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBedroomsOnFirstFloor)(data);
      }, "order": 2 }, { "name": "Master Bedroom on First Floor", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMasterBedroomOnFirstFloor)(data);
      }, "order": 3 }], "order": 1 }, { "name": "Bathrooms", "items": [{ "name": "Full Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFullBathrooms)(data);
      }, "order": 1 }, { "name": "Half Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHalfBathrooms)(data);
      }, "order": 2 }, { "name": "Total Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalBathrooms)(data);
      }, "order": 3 }, { "name": "Bathroom Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBathFeatures)(data);
      }, "order": 4 }], "order": 2 }, { "name": "Kitchen & Dining", "items": [{ "name": "Dining Room", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDiningRoom)(data);
      }, "order": 1 }], "order": 4 }, { "name": "Other Rooms", "items": [{ "name": "Number of Rooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNumberOfRooms)(data);
      }, "order": 1 }, { "name": "Other Rooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherRooms)(data);
      }, "order": 2 }, { "name": "Attic", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_attic.rets_attic', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 3 }, { "name": "Basement", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBasement)(data);
      }, "order": 4 }, { "name": "Basement Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBasementDescription)(data);
      }, "order": 5 }], "order": 5 }]
}, {
  "name": "Features", "children": [{ "name": "Interior", "items": [{ "name": "Interior Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInteriorFeatures)(data);
      }, "order": 1 }, { "name": "Flooring", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFlooring)(data);
      }, "order": 2 }, { "name": "Appliances", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAppliances)(data);
      }, "order": 3 }], "order": 1 }, { "name": "Exterior", "items": [{ "name": "Exterior Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getExteriorFeatures)(data);
      }, "order": 1 }, { "name": "Exterior Finish", "value": function value(data) {
        return (0, _propertyAttributeHelper.getExteriorFinish)(data);
      }, "order": 2 }, { "name": "Pool", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPool)(data);
      }, "order": 3 }], "order": 2 }, { "name": "Heating & Cooling", "items": [{ "name": "Cooling", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCooling)(data);
      }, "order": 1 }, { "name": "Heating", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHeating)(data);
      }, "order": 2 }, { "name": "Heating Fuel", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHeatingFuel)(data);
      }, "order": 3 }, { "name": "Water Heater", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterHeater)(data);
      }, "order": 4 }, { "name": "Fireplaces", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFireplaces)(data);
      }, "order": 5 }, { "name": "Fireplace Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFireplacesDescription)(data);
      }, "order": 6 }], "order": 3 }, { "name": "Parking", "items": [{ "name": "Parking", "value": function value(data) {
        return (0, _propertyAttributeHelper.getParking)(data);
      }, "order": 1 }, { "name": "Garage Capacity", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGarageCapacity)(data);
      }, "order": 2 }], "order": 4 }, { "name": "Utility", "items": [{ "name": "Water & Sewer", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterAndSewer)(data);
      }, "order": 1 }], "order": 5 }]
}, { "name": "Property", "children": [{ "name": "Building", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getType)(data);
      }, "order": 1 }, { "name": "New Construction", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNewConstruction)(data);
      }, "order": 3 }, { "name": "Construction Completion", "value": function value(data) {
        return (0, _propertyAttributeHelper.getConstructionCompletion)(data);
      }, "order": 4 }, { "name": "Year Built", "value": function value(data) {
        return (0, _propertyAttributeHelper.getEstFinYear)(data) !== null ? (0, _propertyAttributeHelper.getYearBuilt)(data) : null;
      }, "order": 5 }, { "name": "Design", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDesign)(data);
      }, "order": 6 }, { "name": "Accessibility", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAccessibility)(data);
      }, "order": 7 }, { "name": "Sustainability", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGreenBuildingCert)(data);
      }, "order": 8 }, { "name": "Sustainability", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGreenBuildingFeatures)(data);
      }, "order": 9 }, { "name": "Total Living Area SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalLivingAreaSQFT)(data);
      }, "order": 10 }, { "name": "Living Area Above Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLivingAreaAboveGradeSQFT)(data);
      }, "order": 11 }, { "name": "Living Area Below Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLivingAreaBelowGradeSQFT)(data);
      }, "order": 12 }, { "name": "Total Other Area SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalOtherAreaSQFT)(data);
      }, "order": 13 }, { "name": "Other Area Above Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherAreaAboveGradeSQFT)(data);
      }, "order": 14 }, { "name": "Other Area Below Grade", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherAreaBelowGrade)(data);
      }, "order": 15 }, { "Name": "Detached Living Area Aqft", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_detached_living_area_sq_ft[0]', null);
      }, "order": 16 }], "order": 1 }, { "name": "Lot", "items": [{ "name": "Acres", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeArea)(data);
      }, "order": 1 }, { "name": "Zoning", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZoning)(data);
      }, "order": 2 }, { "name": "Waterfront", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterfront)(data);
      }, "order": 3 }, { "name": "Waterfront Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterfrontType)(data);
      }, "order": 4 }], "order": 2 }] }, {
  "name": "Location", "children": [{ "name": "Community", "items": [{ "name": "Inside City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInsideCity)(data);
      }, "order": 1 }, { "name": "Neighborhood", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNeighborhood)(data);
      }, "order": 3 }, { "name": "County", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCounty)(data);
      }, "order": 4 }, { "name": "Area", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAreaAndSubArea)(data);
      }, "order": 5 }, { "name": "Active Adult Community", "value": function value(data) {
        return (0, _propertyAttributeHelper.getActiveAdultCommunity)(data);
      }, 'order': 7 }, { "name": "Active Adult Community", "value": function value(data) {
        return (0, _propertyAttributeHelper.getActiveAdultCommunityNA)(data);
      }, "order": 8 }], "order": 1 }, { "name": "Schools", "items": [{ "name": "Elementary School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getElementarySchool)(data);
      }, "order": 1 }, { "name": "Middle School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMiddleSchool)(data);
      }, "order": 2 }, { "name": "High School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHighSchool)(data);
      }, "order": 3 }], "order": 2 }, { "name": "Address", "items": [{ "name": "Street Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetNumber)(data);
      }, "order": 1 }, { "name": "Street Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetDirectional)(data);
      }, "order": 2 }, { "name": "Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreet)(data);
      }, "order": 3 }, { "name": "Post Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPostDirectional)(data);
      }, "order": 4 }, { "name": "Unit Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getUnitNumber)(data);
      }, "order": 5 }, { "name": "City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCity)(data);
      }, "order": 6 }, { "name": "State", "value": function value(data) {
        return (0, _propertyAttributeHelper.getState)(data);
      }, "order": 7 }, { "name": "Zip", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZip)(data);
      }, "order": 8 }, { "name": "Latitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLatitude)(data);
      }, "order": 9 }, { "name": "Longitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLongitude)(data);
      }, "order": 10 }, { "name": "Directions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDirections)(data);
      }, "order": 11 }], "order": 3 }]
}, { "name": "Listing", "children": [{ "name": "Pricing", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getListingStatuses)(data);
      }, "order": 1 }, { "name": "Price", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPrice)(data);
      }, "order": 2 }, { "name": "Price", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_payment_period[0]', null);
      }, "order": 3 }, { "name": "Security Deposit", "value": function value(data) {
        return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_security_deposit[0]', null));
      }, "order": 4 }, { "name": "Price Per SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerSQFT)(data);
      }, "order": 5 }], "order": 1 }, { "name": "Terms", "items": [{ "name": "Date Available", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_date_available[0]');
      }, "order": 1 }, { "name": "Rental Terms", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_rental_terms.rets_rental_terms', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }, { "name": "Tenant Pays", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_tenant_pays.rets_tenant_pays', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 3 }, { "name": "Restrictions", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_restrictions.rets_restrictions', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 4 }, { "name": "Pet Policy", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_pets.rets_pets', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 5 }], "order": 2 }, { "name": "Status", "items": [{ "name": "MLS ID", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMLSId)(data);
      }, "order": 1 }, { "name": "Status", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStatus)(data);
      }, "order": 2 }, { "name": "Published Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPublishedDate)(data);
      }, "order": 3 }, { "name": "Modified Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getModifiedDate)(data);
      }, "order": 4 }], "order": 3 }] }];

/***/ }),
/* 1272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _propertyHelper = __webpack_require__(1050);

var _propertyAttributeHelper = __webpack_require__(1064);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{ "name": "Rooms", "children": [{ "name": "Bedrooms", "items": [{ "name": "Bedrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBedrooms)(data);
      }, "order": 1 }, { "name": "Bedrooms on 1st Floor", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBedroomsOnFirstFloor)(data);
      }, "order": 2 }, { "name": "Master Bedroom Dimensions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMasterBedroomOnFirstFloor)(data);
      }, "order": 3 }, { "name": "Master Bedroom on First Floor", "value": function value(data) {
        return (0, _propertyHelper.formatYesOrNoFields)(data, 'tax_input.rets_master_bedroom_1st_floor.rets_master_bedroom_1st_floor[0].name');
      }, "order": 3 }, { "name": "Master Bedroom Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_master_bedroom_floor.rets_master_bedroom_floor[0].name', false);
      }, "order": 4 }, { "name": "Bedroom 2 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_bedroom_2_dimensions[0]', false);
      }, "order": 5 }, { "name": "Bedroom 2 Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_bedroom_2_floor.rets_bedroom_2_floor[0].name', false);
      }, "order": 6 }, { "name": "Bedroom 3 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_bedroom_3_dimensions[0]', false);
      }, "order": 7 }, { "name": "Bedroom 3 Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_bedroom_3_floor.rets_bedroom_3_floor[0].name', false);
      }, "order": 8 }, { "name": "Bedroom 4 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_bedroom_4_dimensions[0]', false);
      }, "order": 9 }, { "name": "Bedroom 4 Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_bedroom_4_floor.rets_bedroom_4_floor[0].name', false);
      }, "order": 10 }, { "name": "Bedroom 5 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_bedroom_5_dimensions[0]', false);
      }, "order": 11 }, { "name": "Bedroom 5 Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_bedroom_5_floor.rets_bedroom_5_floor[0].name', false);
      }, "order": 11 }], "order": 1 }, { "name": "Bathrooms", "items": [{ "name": "Full Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFullBathrooms)(data);
      }, "order": 1 }, { "name": "Half Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHalfBathrooms)(data);
      }, "order": 2 }, { "name": "Total Bathrooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalBathrooms)(data);
      }, "order": 3 }, { "name": "Bathroom Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBathFeatures)(data);
      }, "order": 4 }], "order": 2 }, { "name": "Living Area", "items": [{ "name": "Living Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_living_room_floor.rets_living_room_floor[0].name', false);
      }, "order": 1 }, { "name": "Family Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_family_room_dimensions[0]', false);
      }, "order": 2 }, { "name": "Family Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_family_room_floor.rets_family_room_floor[0].name', false);
      }, "order": 3 }, { "name": "Other Room", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_lvng_area_other_rm_1_desc[0]', false);
      }, "order": 4 }, { "name": "Other Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_lvng_area_other_rm_1_dim[0]', false);
      }, "order": 5 }, { "name": "Other Room Level", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_lvng_area_other_rm_1_lvl.rets_lvng_area_other_rm_1_lvl[0].name', false);
      }, "order": 6 }, { "name": "Other Room 3", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_lvng_area_other_rm_3_desc[0]', false);
      }, "order": 7 }, { "name": "Other Room 3 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_lvng_area_other_rm_3_dmns[0]', false);
      }, "order": 8 }, { "name": "Other Room 3 Level", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_lvng_area_other_rm_3_lvl.rets_lvng_area_other_rm_3_lvl[0].name', false);
      }, "order": 9 }, { "name": "Living Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_living_room_dimensions[0]', false);
      }, "order": 10 }], "order": 3 }, { "name": "Kitchen & Dining", "items": [{ "name": "Kitchen Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_kitchen_dimensions[0]', false);
      }, "order": 1 }, { "name": "Kitchen Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_kitchen_floor.rets_kitchen_floor[0].name', false);
      }, "order": 2 }, { "name": "Dining Room", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDiningRoom)(data);
      }, "order": 3 }, { "name": "Dining Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_dining_room_dimensions[0]', false);
      }, "order": 4 }, { "name": "Dining Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_dining_room_floor.rets_dining_room_floor[0].name', false);
      }, "order": 5 }, { "name": "Breakfast Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_breakfast_room_dimensions[0]', false);
      }, "order": 6 }, { "name": "Breakfast Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_breakfast_room_floor.rets_breakfast_room_floor[0].name', false);
      }, "order": 7 }], "order": 4 }, { "name": "Other Rooms", "items": [{ "name": "Number of Rooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNumberOfRooms)(data);
      }, "order": 1 }, { "name": "Other Rooms", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherRooms)(data);
      }, "order": 2 }, { "name": "Attic", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_attic_description.rets_attic_description[0].name', false);
      }, "order": 3 }, { "name": "Basement", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBasement)(data);
      }, "order": 4 }, { "name": "Basement Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getBasementDescription)(data);
      }, "order": 5 }], "order": 5 }, { "name": "Other", "items": [{ "name": "Bonus Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_bonus_room_dimensions[0]', null);
      }, "order": 1 }, { "name": "Bonus Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_bonus_room_floor.rets_bonus_room_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 2 }, { "name": "Entrance Hall Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_entrance_hall_dimensions[0]', false);
      }, "order": 3 }, { "name": "Entrance Hall Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_entrance_hall_floor.rets_entrance_hall_floor[0].name', false);
      }, "order": 4 }, { "name": "Office Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_office_study_dimensions[0]', false);
      }, "order": 5 }, { "name": "Office Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_office_study_floor.rets_office_study_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 6 }, { "name": "Storage Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_storage_dimensions[0]', false);
      }, "order": 7 }, { "name": "Storage Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_storage_floor.rets_storage_floor', []).map(function (d) {
          return d.name;
        }).join(', ');
      }, "order": 8 }, { "name": "Utility Room Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_utility_room_dimensions[0]', false);
      }, "order": 9 }, { "name": "Utility Room Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_utility_room_floor.rets_utility_room_floor[0].name', false);
      }, "order": 10 }, { "name": "Other Room 2", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_other_area_room_2_desc[0]', false);
      }, "order": 11 }, { "name": "Other Room 2 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_other_area_room_2_dmns[0]', false);
      }, "order": 12 }, { "name": "Other Room 2 Level", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_other_area_room_2_lvl.rets_other_area_room_2_lvl', []).map(function (d) {
          return d.name;
        }).join(', ');
      }, "order": 13 }, { "name": "Other Room 4", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_other_area_room_4_desc[0]', false);
      }, "order": 14 }, { "name": "Other Room 4 Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_other_area_room_4_dmns[0]', false);
      }, "order": 15 }, { "name": "Other Room 4 Level", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_other_area_room_4_lvl.rets_other_area_room_4_lvl', []).map(function (d) {
          return d.name;
        }).join(', ');
      }, "order": 16 }], "order": 6 }]
}, {
  "name": "Features", "children": [{ "name": "Interior", "items": [{ "name": "Interior Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInteriorFeatures)(data);
      }, "order": 1 }, { "name": "Flooring", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFlooring)(data);
      }, "order": 2 }, { "name": "Appliances", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAppliances)(data);
      }, "order": 3 }, { "name": "Washer & Dryer Location", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_washer_dryer_location.rets_washer_dryer_location', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 4 }], "order": 1 }, { "name": "Exterior", "items": [{ "name": "Exterior Features", "value": function value(data) {
        return (0, _propertyAttributeHelper.getExteriorFeatures)(data);
      }, "order": 1 }, { "name": "Exterior Finish", "value": function value(data) {
        return (0, _propertyAttributeHelper.getExteriorFinish)(data);
      }, "order": 2 }, { "name": "Roof", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRoof)(data);
      }, "order": 3 }, { "name": "Pool", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPool)(data);
      }, "order": 4 }, { "name": "Deck Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_deck_dimensions[0]', false);
      }, "order": 5 }, { "name": "Deck Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_deck_floor.rets_deck_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 6 }, { "name": "Patio Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_patio_dimensions[0]', false);
      }, "order": 7 }, { "name": "Patio Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_patio_floor.rets_patio_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 8 }, { "name": "Porch Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_porch_dimensions[0]', false);
      }, "order": 9 }, { "name": "Porch Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_porch_floor.rets_porch_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 10 }, { "name": "Screened Porch Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_screened_porch_dimensions[0]', false);
      }, "order": 11 }, { "name": "Screened Porch Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_screened_porch_floor.rets_screened_porch_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 12 }], "order": 2 }, { "name": "Heating & Cooling", "items": [{ "name": "Cooling", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCooling)(data);
      }, "order": 1 }, { "name": "Heating", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHeating)(data);
      }, "order": 2 }, { "name": "Heating Fuel", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHeatingFuel)(data);
      }, "order": 3 }, { "name": "Water Heater", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterHeater)(data);
      }, "order": 4 }, { "name": "Fireplaces", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFireplaces)(data);
      }, "order": 5 }, { "name": "Fireplace Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFireplacesDescription)(data);
      }, "order": 6 }], "order": 3 }, { "name": "Parking", "items": [{ "name": "Parking", "value": function value(data) {
        return (0, _propertyAttributeHelper.getParking)(data);
      }, "order": 1 }, { "name": "Garage Capacity", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGarageCapacity)(data);
      }, "order": 2 }, { "name": "Garage Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_garage_dimensions[0]', null);
      }, "order": 3 }, { "name": "Garage Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_garage_floor.rets_garage_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 4 }, { "name": "Carport Dimensions", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_carport_dimensions[0]', null);
      }, "order": 5 }, { "name": "Carport Floor", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_carport_floor.rets_carport_floor', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 6 }], "order": 4 }, { "name": "Utility", "items": [{ "name": "Water & Sewer", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterAndSewer)(data);
      }, "order": 1 }], "order": 5 }]
}, { "name": "Property", "children": [{ "name": "Building", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getType)(data);
      }, "order": 1 }, { "name": "New Construction", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNewConstruction)(data);
      }, "order": 3 }, { "name": "Construction Completion", "value": function value(data) {
        return (0, _propertyAttributeHelper.getConstructionCompletion)(data);
      }, "order": 4 }, { "name": "Year Built", "value": function value(data) {
        return !(0, _propertyAttributeHelper.getEstFinYear)(data) ? (0, _propertyAttributeHelper.getYearBuilt)(data) : null;
      }, "order": 5 }, { "name": "Builder", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_builder_name[0]', null);
      }, "order": 6 }, { "name": "Design", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDesign)(data);
      }, "order": 7 }, { "name": "Architectural Style", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_style.rets_style', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 8 }, { "name": "Foundation", "value": function value(data) {
        return (0, _propertyAttributeHelper.getFoundation)(data);
      }, "order": 9 }, { "name": "Accessibility", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAccessibility)(data);
      }, "order": 10 }, { "name": "Sustainability", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGreenBuildingCert)(data);
      }, "order": 11 }, { "name": "Sustainability", "value": function value(data) {
        return (0, _propertyAttributeHelper.getGreenBuildingFeatures)(data);
      }, "order": 12 }, { "name": "Total Living Area SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalLivingAreaSQFT)(data);
      }, "order": 13 }, { "name": "Living Area Above Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLivingAreaAboveGradeSQFT)(data);
      }, "order": 14 }, { "name": "Living Area Below Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLivingAreaBelowGradeSQFT)(data);
      }, "order": 15 }, { "name": "Total Other Area SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getTotalOtherAreaSQFT)(data);
      }, "order": 16 }, { "name": "Other Area Above Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherAreaAboveGradeSQFT)(data);
      }, "order": 17 }, { "name": "Other Area Below Grade SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getOtherAreaBelowGrade)(data);
      }, "order": 18 }, { "name": "Detached Living Area Aqft", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_detached_living_area_sq_ft[0]', null);
      }, "order": 19 }], "order": 1 }, { "name": "Lot", "items": [{ "name": "Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotNumber)(data);
      }, "order": 1 }, { "name": "Description", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotDescription)(data);
      }, "order": 2 }, { "name": "Acres", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeArea)(data);
      }, "order": 3 }, { "name": "Acrage", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAcres)(data);
      }, "order": 4 }, { "name": "SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getSQFT)(data);
      }, "order": 5 }, { "name": "Dimensions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLotSizeDim)(data);
      }, "order": 5 }, { "name": "Zoning", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZoning)(data);
      }, "order": 6 }, { "name": "Restrictive Covenants", "value": function value(data) {
        return (0, _propertyAttributeHelper.getRestrictiveCovenants)(data);
      }, "order": 7 }, { "name": "Waterfront", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterfront)(data);
      }, "order": 8 }, { "name": "Waterfront Features", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_water_front.rets_water_front', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 9 }, { "name": "Waterfront Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getWaterfrontType)(data);
      }, "order": 10 }], "order": 2 }] }, {
  "name": "Location", "children": [{ "name": "Community", "items": [{ "name": "Inside City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getInsideCity)(data);
      }, "order": 1 }, { "name": "Neighborhood", "value": function value(data) {
        return (0, _propertyAttributeHelper.getNeighborhood)(data);
      }, "order": 3 }, { "name": "County", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCounty)(data);
      }, "order": 4 }, { "name": "Area", "value": function value(data) {
        return (0, _propertyAttributeHelper.getAreaAndSubArea)(data);
      }, "order": 5 }, { "name": "Active Adult Community", "value": function value(data) {
        return (0, _propertyAttributeHelper.getActiveAdultCommunity)(data);
      }, 'order': 7 }, { "name": "Active Adult Community", "value": function value(data) {
        return (0, _propertyAttributeHelper.getActiveAdultCommunityNA)(data);
      }, "order": 8 }], "order": 1 }, { "name": "Homeowners Association", "items": [{ "name": "HOA Office", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_hoa_1_mgmt[0]', null);
      }, "order": 1 }, { "name": "HOA Office Phone", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_hoa_phone[0]', null);
      }, "order": 2 }, { "name": "HOA Fees Requirement", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_hoa_1_fees_required.rets_hoa_1_fees_required[0].name', null);
      }, "order": 3 }, { "name": "HOA Fees", "value": function value(data) {
        return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_hoa_1_fees[0]', null));
      }, "order": 4 }, { "name": "HOA Fees", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_hoa_1_fee_payment.rets_hoa_1_fee_payment', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 5 }, { "name": "HOA Office", "value": function value(data) {
        return (0, _get2.default)(data, 'post_meta.rets_hoa_2_mgmt[0]', null);
      }, "order": 6 }, { "name": "HOA 2 Fees Requirement", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_hoa_2_fees_required.rets_hoa_2_fees_required', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 7 }, { "name": "HOA 2 Fees", "value": function value(data) {
        return (0, _propertyHelper.moneyFormat)((0, _get2.default)(data, 'post_meta.rets_hoa_2_fees[0]', null));
      }, "order": 8 }, { "name": "HOA 2 Fees", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_hoa_2_fee_payment.rets_hoa_2_fee_payment', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 9 }, { "name": "HOA Fees Include", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_ho_fees_include.rets_ho_fees_include', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 10 }], "order": 2 }, { "name": "Schools", "items": [{ "name": "Elementary School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getElementarySchool)(data);
      }, "order": 1 }, { "name": "Middle School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMiddleSchool)(data);
      }, "order": 2 }, { "name": "High School", "value": function value(data) {
        return (0, _propertyAttributeHelper.getHighSchool)(data);
      }, "order": 3 }], "order": 3 }, { "name": "Address", "items": [{ "name": "Street Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetNumber)(data);
      }, "order": 1 }, { "name": "Street Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreetDirectional)(data);
      }, "order": 2 }, { "name": "Street", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStreet)(data);
      }, "order": 3 }, { "name": "Post Directional", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPostDirectional)(data);
      }, "order": 4 }, { "name": "Unit Number", "value": function value(data) {
        return (0, _propertyAttributeHelper.getUnitNumber)(data);
      }, "order": 5 }, { "name": "City", "value": function value(data) {
        return (0, _propertyAttributeHelper.getCity)(data);
      }, "order": 6 }, { "name": "State", "value": function value(data) {
        return (0, _propertyAttributeHelper.getState)(data);
      }, "order": 7 }, { "name": "Zip", "value": function value(data) {
        return (0, _propertyAttributeHelper.getZip)(data);
      }, "order": 8 }, { "name": "Latitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLatitude)(data);
      }, "order": 9 }, { "name": "Longitude", "value": function value(data) {
        return (0, _propertyAttributeHelper.getLongitude)(data);
      }, "order": 10 }, { "name": "Directions", "value": function value(data) {
        return (0, _propertyAttributeHelper.getDirections)(data);
      }, "order": 11 }], "order": 4 }]
}, { "name": "Listing", "children": [{ "name": "Pricing", "items": [{ "name": "Type", "value": function value(data) {
        return (0, _propertyAttributeHelper.getListingStatuses)(data);
      }, "order": 1 }, { "name": "Price", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPrice)(data);
      }, "order": 2 }, { "name": "Price Per SQFT", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPricePerSQFT)(data);
      }, "order": 3 }], "order": 1 }, { "name": "Terms", "items": [{ "name": "Special Conditions", "value": function value(data) {
        return (0, _get2.default)(data, 'tax_input.rets_special_conditions.rets_special_conditions', []).map(function (d) {
          return d.name;
        }).join(', ') || null;
      }, "order": 1 }], "order": 2 }, { "name": "Status", "items": [{ "name": "MLS ID", "value": function value(data) {
        return (0, _propertyAttributeHelper.getMLSId)(data);
      }, "order": 1 }, { "name": "Status", "value": function value(data) {
        return (0, _propertyAttributeHelper.getStatus)(data);
      }, "order": 2 }, { "name": "Published Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getPublishedDate)(data);
      }, "order": 3 }, { "name": "Modified Date", "value": function value(data) {
        return (0, _propertyAttributeHelper.getModifiedDate)(data);
      }, "order": 4 }], "order": 3 }] }];

/***/ }),
/* 1273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _moment = __webpack_require__(1084);

var _moment2 = _interopRequireDefault(_moment);

var _lib = __webpack_require__(3);

var _htmlHelper = __webpack_require__(1083);

var _htmlHelper2 = _interopRequireDefault(_htmlHelper);

var _propertyHelper = __webpack_require__(1050);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DISCLAIMER_TEXT = 'Information Not Guaranteed. © Triangle MLS Inc. All rights reserved. Listings marked with a TMLSidx icon are provided courtesy of the Triangle MLS, Inc. of North Carolina, Internet Data Exchange Database.';

var ListingProvider = function ListingProvider(_ref) {
  var curatedPropertyInfo = _ref.curatedPropertyInfo,
      fromMapView = _ref.fromMapView;
  var mlsId = curatedPropertyInfo.mlsId,
      address = curatedPropertyInfo.address,
      address_unit = curatedPropertyInfo.address_unit,
      listing_office = curatedPropertyInfo.listing_office,
      officePhoneNumber = curatedPropertyInfo.officePhoneNumber,
      agentName = curatedPropertyInfo.agentName,
      agentPhoneNumber = curatedPropertyInfo.agentPhoneNumber;


  var gridClass = fromMapView ? 'col-12' : 'col-lg-6';

  var daysOnWebsite = (0, _propertyHelper.daysPassedSincePostedDate)(curatedPropertyInfo);
  var lastUpdatedMoment = (0, _propertyHelper.getLastUpdatedMoment)(curatedPropertyInfo);
  // let lastCheckedMoment = getLastCheckedMoment(curatedPropertyInfo);
  var lastCheckedMoment = '1 minute ago';

  return _react2.default.createElement(
    'section',
    { className: _lib.Lib.THEME_CLASSES_PREFIX + 'single-listing-provider py-5' },
    _react2.default.createElement(
      'div',
      { className: 'container' },
      _react2.default.createElement(
        'div',
        { className: 'row' },
        _react2.default.createElement(
          'div',
          { className: 'col-12' },
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'info-section-header mb-4' },
            'Listing Provider for ',
            address[0],
            ' ',
            address_unit
          ),
          _react2.default.createElement(
            'p',
            { className: 'text-muted ' + _lib.Lib.THEME_CLASSES_PREFIX + 'info-description text-muted py-3' },
            DISCLAIMER_TEXT
          ),
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: gridClass },
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-group-content' },
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Agent: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    agentName
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Agent Phone Number: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    agentPhoneNumber
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Office: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    _htmlHelper2.default.decodeHtml(listing_office)
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Office Phone Number: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    officePhoneNumber
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'MLS ID: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    mlsId
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: gridClass },
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'attr-group-content' },
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Data Source: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    'Triangle MLS Inc.'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Last Checked: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,

                    //lastCheckedMoment.isValid() ? lastCheckedMoment.format('LLL') + ' UTC' : ''
                    lastCheckedMoment
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Last Updated: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    lastUpdatedMoment.isValid() ? lastUpdatedMoment.format('LLL') + ' UTC' : ''
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Days on Site: '
                  ),
                  _react2.default.createElement(
                    'span',
                    null,
                    daysOnWebsite
                  )
                ),
                _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement('img', { src: bundle.static_images_url + "triangle-mls-logo-large.gif", alt: 'Buy' })
                )
              )
            )
          )
        )
      )
    )
  );
};

ListingProvider.propTypes = {
  curatedPropertyInfo: _propTypes2.default.object,
  fromMapView: _propTypes2.default.bool
};

exports.default = ListingProvider;

/***/ }),
/* 1274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _lib = __webpack_require__(3);

var _propertyHelper = __webpack_require__(1050);

var _FormFetcher = __webpack_require__(384);

var _FormFetcher2 = _interopRequireDefault(_FormFetcher);

var _JSONSchemaFormContainer = __webpack_require__(407);

var _JSONSchemaFormContainer2 = _interopRequireDefault(_JSONSchemaFormContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var formIdMapper = {
  'request-showing-rent': 'form-rent-inquiry',
  'request-showing-sale': 'form-buy-inquiry-listing',
  'request-information-sale': 'form-buy-inquiry-listing',
  'request-application': 'form-rent-application'
};

var AgentContactForms = function (_Component) {
  _inherits(AgentContactForms, _Component);

  function AgentContactForms(props) {
    _classCallCheck(this, AgentContactForms);

    var _this = _possibleConstructorReturn(this, (AgentContactForms.__proto__ || Object.getPrototypeOf(AgentContactForms)).call(this, props));

    _this.getInitialTab = function (saleTypeWithRDC) {
      var tab = void 0;
      switch (saleTypeWithRDC) {
        case 'rentRDC':
          tab = 'request-showing-rent';
          break;
        case 'saleRDC':
          tab = 'request-showing-sale';
          break;
        case 'saleNotRdc':
          tab = 'request-showing-sale';
          break;
      }
      return tab;
    };

    _this.selectTab = function (name) {
      _this.setState({ selectedTab: name });
    };

    _this.state = {
      selectedTab: null
    };
    return _this;
  }

  _createClass(AgentContactForms, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var initialTab = this.getInitialTab(this.props.saleTypeWithRDC);
      this.selectTab(initialTab);
      console.debug('[AgentContactForms tab] componentDidMount', initialTab);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var previous_mlsId = (0, _get2.default)(this.props, 'curatedPropertyInfo.mlsId');
      var next_mlsId = (0, _get2.default)(nextProps, 'curatedPropertyInfo.mlsId');
      var isNewProperty = previous_mlsId !== next_mlsId;

      if (nextProps.tabActive !== null) {
        this.selectTab(nextProps.tabActive);
        console.debug('[AgentContactForms tab] from buttons', nextProps.tabActive);
      }

      if (isNewProperty) {
        var initialTab = this.getInitialTab(nextProps.saleTypeWithRDC);
        this.selectTab(initialTab);
        console.debug('[AgentContactForms tab] for new property', initialTab);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          agent = _props.agent,
          listingOffice = _props.listingOffice,
          saleTypeWithRDC = _props.saleTypeWithRDC,
          _props$curatedPropert = _props.curatedPropertyInfo,
          mlsId = _props$curatedPropert.mlsId,
          post_title = _props$curatedPropert.post_title,
          officePhoneNumber = _props$curatedPropert.officePhoneNumber;
      var selectedTab = this.state.selectedTab;


      var getInitialFormData = (0, _propertyHelper.getContactFormTabFeeder)(post_title, mlsId);

      var formContent = void 0;

      switch (saleTypeWithRDC) {
        case 'rentRDC':
          {
            formContent = _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-tabs d-flex' },
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-showing-rent' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-showing-rent');
                      } },
                    'Request Showing'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-application' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-application');
                      } },
                    'Request Application'
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-content' },
                _react2.default.createElement(
                  _FormFetcher2.default,
                  { formId: formIdMapper[selectedTab] },
                  _react2.default.createElement(_JSONSchemaFormContainer2.default, { formData: getInitialFormData(selectedTab), jsonSchemaForm: this.props.jsonSchemaForm, showConfirmation: true })
                )
              )
            );
            break;
          }
        case 'rentNOTRdc':
          {
            formContent = _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-content' },
              _react2.default.createElement(
                'p',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-description' },
                'Please contact ',
                agent.name,
                ' at ',
                listingOffice,
                ' direct by phone at ',
                agent.phone,
                '. You may also reach ',
                listingOffice,
                ' by phone at ',
                officePhoneNumber,
                '. '
              )
            );
            break;
          }
        case 'saleRDC':
          {
            formContent = _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-tabs d-flex' },
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-showing-sale' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-showing-sale');
                      } },
                    'Request Showing'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-information-sale' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-information-sale');
                      } },
                    'Request Information'
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-content' },
                _react2.default.createElement(
                  _FormFetcher2.default,
                  { formId: formIdMapper[selectedTab] },
                  _react2.default.createElement(_JSONSchemaFormContainer2.default, { formData: getInitialFormData(selectedTab), showConfirmation: true, jsonSchemaForm: this.props.jsonSchemaForm })
                )
              )
            );
            break;
          }
        case 'saleNotRdc':
          {
            formContent = _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-tabs d-flex' },
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-showing-sale' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-showing-sale');
                      } },
                    'Request Showing'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'col-6 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'tab ' + (selectedTab === 'request-information-sale' ? _lib.Lib.THEME_CLASSES_PREFIX + 'tab-selected' : null) },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(event) {
                        event.preventDefault();_this2.selectTab('request-information-sale');
                      } },
                    'Request Information'
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form-content' },
                _react2.default.createElement(
                  _FormFetcher2.default,
                  { formId: formIdMapper['request-showing-sale'] },
                  _react2.default.createElement(_JSONSchemaFormContainer2.default, { formData: getInitialFormData(selectedTab), showConfirmation: true })
                )
              )
            );
          }
        default:
      }

      return _react2.default.createElement(
        'div',
        { className: 'container' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'col-md-12' },
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-contact-form' },
              _react2.default.createElement(
                'div',
                { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-card' },
                _react2.default.createElement(
                  'div',
                  { className: 'media' },
                  _react2.default.createElement('img', { className: 'd-flex align-self-start mr-4 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'agent-photo',
                    src: agent.image,
                    alt: 'Agent photo',
                    width: '100'
                  }),
                  _react2.default.createElement(
                    'div',
                    { className: 'media-body ' + _lib.Lib.THEME_CLASSES_PREFIX + 'agent-card-content' },
                    _react2.default.createElement(
                      'h5',
                      null,
                      agent.name
                    ),
                    _react2.default.createElement(
                      'p',
                      null,
                      listingOffice
                    ),
                    _react2.default.createElement(
                      'div',
                      null,
                      agent.phone
                    )
                  )
                )
              ),
              formContent
            )
          )
        )
      );
    }
  }]);

  return AgentContactForms;
}(_react.Component);

AgentContactForms.propTypes = {
  agent: _propTypes2.default.object,
  saleTypeWithRDC: _propTypes2.default.string,
  listingOffice: _propTypes2.default.string,
  tabActive: _propTypes2.default.string
};

exports.default = AgentContactForms;

/***/ }),
/* 1275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactStickyState = __webpack_require__(1276);

var _reactStickyState2 = _interopRequireDefault(_reactStickyState);

var _lib = __webpack_require__(3);

var _RequestButtons = __webpack_require__(1327);

var _RequestButtons2 = _interopRequireDefault(_RequestButtons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StickyCard = function (_Component) {
  _inherits(StickyCard, _Component);

  function StickyCard() {
    _classCallCheck(this, StickyCard);

    return _possibleConstructorReturn(this, (StickyCard.__proto__ || Object.getPrototypeOf(StickyCard)).apply(this, arguments));
  }

  _createClass(StickyCard, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          agent = _props.agent,
          listingOffice = _props.listingOffice,
          isAgentShown = _props.isAgentShown;


      var containerClass = 'sticky sticky-at-top ' + _lib.Lib.THEME_CLASSES_PREFIX + 'sticky-container';

      if (isAgentShown) {
        containerClass += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'agent-shown';
      } else {
        containerClass += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'agent-hidden';
      }

      return _react2.default.createElement(
        _reactStickyState2.default,
        null,
        _react2.default.createElement(
          'div',
          { className: containerClass },
          !isAgentShown && _react2.default.createElement(
            'div',
            { className: 'container' },
            _react2.default.createElement(_RequestButtons2.default, {
              saleTypeWithRDC: this.props.saleTypeWithRDC,
              saleType: this.props.saleType,
              onClick: this.props.onClickRequestBtn
            })
          ),
          isAgentShown && _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-card d-flex flex-column align-items-center' },
            _react2.default.createElement('div', {
              className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-avatar',
              style: { backgroundImage: 'url(' + agent.image + ')' }
            }),
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-name' },
              agent.name
            ),
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-company' },
              listingOffice
            ),
            _react2.default.createElement(
              'div',
              { className: _lib.Lib.THEME_CLASSES_PREFIX + 'agent-phone' },
              agent.phone
            ),
            _react2.default.createElement(_RequestButtons2.default, {
              saleTypeWithRDC: this.props.saleTypeWithRDC,
              saleType: this.props.saleType,
              onClick: this.props.onClickRequestBtn
            })
          )
        )
      );
    }
  }]);

  return StickyCard;
}(_react.Component);

StickyCard.propTypes = {
  isAgentShown: _propTypes2.default.bool,
  agent: _propTypes2.default.object,
  listingOffice: _propTypes2.default.string,
  saleType: _propTypes2.default.string,
  saleTypeWithRDC: _propTypes2.default.string,
  onClickRequestBtn: _propTypes2.default.func
};

exports.default = StickyCard;

/***/ }),
/* 1276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(1277);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(1286);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(1068);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(1096);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(1103);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(93);

var _classnames2 = _interopRequireDefault(_classnames);

var _scrollfeatures = __webpack_require__(1316);

var _scrollfeatures2 = _interopRequireDefault(_scrollfeatures);

var _objectAssign = __webpack_require__(10);

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _featureDetect = __webpack_require__(1326);

var _featureDetect2 = _interopRequireDefault(_featureDetect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = function log() {};

var initialState = {
  initialized: false,
  sticky: false,
  absolute: false,
  fixedOffset: '',
  offsetHeight: 0,
  bounds: {
    top: null,
    left: null,
    right: null,
    bottom: null,
    height: null,
    width: null
  },
  restrict: {
    top: null,
    left: null,
    right: null,
    bottom: null,
    height: null,
    width: null
  },
  wrapperStyle: null,
  elementStyle: null,
  initialStyle: null,
  style: {
    top: null,
    bottom: null,
    left: null,
    right: null,
    'margin-top': 0,
    'margin-bottom': 0,
    'margin-left': 0,
    'margin-right': 0
  },
  disabled: false
};

var getAbsolutBoundingRect = function getAbsolutBoundingRect(el, fixedHeight) {
  var rect = el.getBoundingClientRect();
  var top = rect.top + _scrollfeatures2.default.windowY;
  var height = fixedHeight || rect.height;
  return {
    top: top,
    bottom: top + height,
    height: height,
    width: rect.width,
    left: rect.left,
    right: rect.right
  };
};

var addBounds = function addBounds(rect1, rect2) {
  var rect = (0, _objectAssign2.default)({}, rect1);
  rect.top -= rect2.top;
  rect.left -= rect2.left;
  rect.right = rect.left + rect1.width;
  rect.bottom = rect.top + rect1.height;
  return rect;
};

var getPositionStyle = function getPositionStyle(el) {

  var result = {};
  var style = window.getComputedStyle(el, null);

  for (var key in initialState.style) {
    var value = parseInt(style.getPropertyValue(key));
    value = isNaN(value) ? null : value;
    result[key] = value;
  }

  return result;
};

var getPreviousElementSibling = function getPreviousElementSibling(el) {
  var prev = el.previousElementSibling;
  if (prev && prev.tagName.toLocaleLowerCase() === 'script') {
    prev = getPreviousElementSibling(prev);
  }
  return prev;
};

var ReactStickyState = function (_Component) {
  (0, _inherits3.default)(ReactStickyState, _Component);

  function ReactStickyState(props, context) {
    (0, _classCallCheck3.default)(this, ReactStickyState);

    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

    _this._updatingBounds = false;
    _this._shouldComponentUpdate = true;
    _this._updatingState = false;

    _this.state = (0, _objectAssign2.default)({}, initialState, { disabled: props.disabled });

    if (props.debug === true) {
      log = console.log.bind(console);
    }

    return _this;
  }

  ReactStickyState.prototype.getBoundingClientRect = function getBoundingClientRect() {
    return this.refs.el.getBoundingClientRect();
  };

  ReactStickyState.prototype.getBounds = function getBounds(noCache) {

    var clientRect = this.getBoundingClientRect();
    var offsetHeight = _scrollfeatures2.default.documentHeight;
    noCache = noCache === true;

    if (noCache !== true && this.state.bounds.height !== null) {
      if (this.state.offsetHeight === offsetHeight && clientRect.height === this.state.bounds.height) {
        return {
          offsetHeight: offsetHeight,
          style: this.state.style,
          bounds: this.state.bounds,
          restrict: this.state.restrict
        };
      }
    }

    // var style = noCache ? this.state.style : getPositionStyle(this.el);
    var initialStyle = this.state.initialStyle;
    if (!initialStyle) {
      initialStyle = getPositionStyle(this.refs.el);
    }

    var style = initialStyle;
    var child = this.refs.wrapper || this.refs.el;
    var rect;
    var restrict;
    var offsetY = 0;
    // var offsetX = 0;

    if (!_featureDetect2.default.sticky) {
      rect = getAbsolutBoundingRect(child, clientRect.height);
      if (this.hasOwnScrollTarget) {
        var parentRect = getAbsolutBoundingRect(this.scrollTarget);
        offsetY = this.scroll.y;
        rect = addBounds(rect, parentRect);
        restrict = parentRect;
        restrict.top = 0;
        restrict.height = this.scroll.scrollHeight || restrict.height;
        restrict.bottom = restrict.height;
      }
    } else {
      var elem = getPreviousElementSibling(child);
      offsetY = 0;

      if (elem) {
        offsetY = parseInt(window.getComputedStyle(elem)['margin-bottom']);
        offsetY = offsetY || 0;
        rect = getAbsolutBoundingRect(elem);
        if (this.hasOwnScrollTarget) {
          rect = addBounds(rect, getAbsolutBoundingRect(this.scrollTarget));
          offsetY += this.scroll.y;
        }
        rect.top = rect.bottom + offsetY;
      } else {
        elem = child.parentNode;
        offsetY = parseInt(window.getComputedStyle(elem)['padding-top']);
        offsetY = offsetY || 0;
        rect = getAbsolutBoundingRect(elem);
        if (this.hasOwnScrollTarget) {
          rect = addBounds(rect, getAbsolutBoundingRect(this.scrollTarget));
          offsetY += this.scroll.y;
        }
        rect.top = rect.top + offsetY;
      }
      if (this.hasOwnScrollTarget) {
        restrict = getAbsolutBoundingRect(this.scrollTarget);
        restrict.top = 0;
        restrict.height = this.scroll.scrollHeight || restrict.height;
        restrict.bottom = restrict.height;
      }

      rect.height = child.clientHeight;
      rect.width = child.clientWidth;
      rect.bottom = rect.top + rect.height;
    }

    restrict = restrict || getAbsolutBoundingRect(child.parentNode);

    return {
      offsetHeight: offsetHeight,
      style: style,
      bounds: rect,
      initialStyle: initialStyle,
      restrict: restrict
    };
  };

  ReactStickyState.prototype.updateBounds = function updateBounds(silent, noCache, cb) {
    var _this2 = this;

    noCache = noCache === true;
    this._shouldComponentUpdate = silent !== true;

    this.setState(this.getBounds(noCache), function () {
      _this2._shouldComponentUpdate = true;
      if (cb) {
        cb();
      }
    });
  };

  // updateFixedOffset() {
  //   if (this.hasOwnScrollTarget && !Can.sticky) {

  //     if (this.state.sticky) {
  //       this.setState({ fixedOffset: this.scrollTarget.getBoundingClientRect().top + 'px' });
  //       if (!this.hasWindowScrollListener) {
  //         this.hasWindowScrollListener = true;
  //         ScrollFeatures.getInstance(window).on('scroll:progress', this.updateFixedOffset);
  //       }
  //     } else {
  //       this.setState({ fixedOffset: '' });
  //       if (this.hasWindowScrollListener) {
  //         this.hasWindowScrollListener = false;
  //         ScrollFeatures.getInstance(window).off('scroll:progress', this.updateFixedOffset);
  //       }
  //     }
  //   }
  // }


  ReactStickyState.prototype.updateFixedOffset = function updateFixedOffset() {

    var fixedOffset = this.state.fixedOffset;
    if (this.state.sticky) {
      this.setState({ fixedOffset: this.scrollTarget.getBoundingClientRect().top + 'px;' });
    } else {
      this.setState({ fixedOffset: '' });
    }
    // if (fixedOffset !== this.state.fixedOffset) {
    //   this.render();
    // }
  };

  ReactStickyState.prototype.addSrollHandler = function addSrollHandler() {
    if (!this.scroll) {
      var hasScrollTarget = _scrollfeatures2.default.hasInstance(this.scrollTarget);
      this.scroll = _scrollfeatures2.default.getInstance(this.scrollTarget);
      this.onScroll = this.onScroll.bind(this);
      this.scroll.on('scroll:start', this.onScroll);
      this.scroll.on('scroll:progress', this.onScroll);
      this.scroll.on('scroll:stop', this.onScroll);

      if (this.props.scrollClass.active) {
        this.onScrollDirection = this.onScrollDirection.bind(this);
        this.scroll.on('scroll:up', this.onScrollDirection);
        this.scroll.on('scroll:down', this.onScrollDirection);
        if (!this.props.scrollClass.persist) {
          this.scroll.on('scroll:stop', this.onScrollDirection);
        }
      }
      if (hasScrollTarget && this.scroll.scrollY > 0) {
        this.scroll.trigger('scroll:progress');
      }
    }
  };

  ReactStickyState.prototype.removeSrollHandler = function removeSrollHandler() {
    if (this.scroll) {
      this.scroll.off('scroll:start', this.onScroll);
      this.scroll.off('scroll:progress', this.onScroll);
      this.scroll.off('scroll:stop', this.onScroll);
      if (this.props.scrollClass.active) {
        this.scroll.off('scroll:up', this.onScrollDirection);
        this.scroll.off('scroll:down', this.onScrollDirection);
        this.scroll.off('scroll:stop', this.onScrollDirection);
      }
      if (!this.scroll.hasListeners()) {
        this.scroll.destroy();
      }
      this.onScroll = null;
      this.onScrollDirection = null;
      this.scroll = null;
    }
  };

  ReactStickyState.prototype.addResizeHandler = function addResizeHandler() {
    if (!this.onResize) {
      this.onResize = this.update.bind(this);
      window.addEventListener('sticky:update', this.onResize, false);
      window.addEventListener('resize', this.onResize, false);
      window.addEventListener('orientationchange', this.onResize, false);
    }
  };

  ReactStickyState.prototype.removeResizeHandler = function removeResizeHandler() {
    if (this.onResize) {
      window.removeEventListener('sticky:update', this.onResize);
      window.removeEventListener('resize', this.onResize);
      window.removeEventListener('orientationchange', this.onResize);
      this.onResize = null;
    }
  };

  ReactStickyState.prototype.destroy = function destroy() {
    this._updatingBounds = false;
    this._shouldComponentUpdate = false;
    this._updatingState = false;
    this.removeSrollHandler();
    this.removeResizeHandler();
    this.scrollTarget = null;
  };

  ReactStickyState.prototype.getScrollClasses = function getScrollClasses(obj) {
    if (this.options.scrollClass.active) {
      obj = obj || {};
      var direction = this.scroll.y <= 0 || this.scroll.y + this.scroll.clientHeight >= this.scroll.scrollHeight ? 0 : this.scroll.directionY;
      obj[this.options.scrollClass.up] = direction < 0;
      obj[this.options.scrollClass.down] = direction > 0;
    }
    return obj;
  };

  ReactStickyState.prototype.getScrollClass = function getScrollClass() {
    if (this.props.scrollClass.up || this.props.scrollClass.down) {

      var direction = this.scroll.y <= 0 || this.scroll.y + this.scroll.clientHeight >= this.scroll.scrollHeight ? 0 : this.scroll.directionY;
      var scrollClass = direction < 0 ? this.props.scrollClass.up : this.props.scrollClass.down;
      scrollClass = direction === 0 ? null : scrollClass;
      return scrollClass;
    }
    return null;
  };

  ReactStickyState.prototype.onScrollDirection = function onScrollDirection(e) {
    if (this.state.sticky || e && e.type === _scrollfeatures2.default.events.SCROLL_STOP) {
      this.setState({
        scrollClass: this.getScrollClass()
      });
    }
  };

  ReactStickyState.prototype.onScroll = function onScroll(e) {
    this.updateStickyState(false);
    if (this.hasOwnScrollTarget && !_featureDetect2.default.sticky) {
      this.updateFixedOffset();
      if (this.state.sticky && !this.hasWindowScrollListener) {
        this.hasWindowScrollListener = true;
        _scrollfeatures2.default.getInstance(window).on('scroll:progress', this.updateFixedOffset);
      } else if (!this.state.sticky && this.hasWindowScrollListener) {
        this.hasWindowScrollListener = false;
        _scrollfeatures2.default.getInstance(window).off('scroll:progress', this.updateFixedOffset);
      }
    }
  };

  ReactStickyState.prototype.update = function update() {
    var _this3 = this;

    // this.scroll.updateScrollPosition();
    this.updateBounds(true, true, function () {
      _this3.updateStickyState(false);
    });
  };

  // update(force = false) {

  //   if (!this._updatingBounds) {
  //     this._updatingBounds = true;
  //     this.scroll.updateScrollPosition();
  //     this.updateBounds(true, true, () => {
  //       this.updateBounds(force, true, () => {
  //         this.scroll.updateScrollPosition();
  //         var updateSticky = this.updateStickyState(false, () => {
  //           if (force && !updateSticky) {
  //             this.forceUpdate();
  //           }
  //         });
  //         this._updatingBounds = false;
  //       });
  //     });
  //   }
  // }


  ReactStickyState.prototype.getStickyState = function getStickyState() {

    if (this.state.disabled) {
      return { sticky: false, absolute: false };
    }

    var scrollY = this.scroll.y;
    // var scrollX = this.scroll.x;
    var top = this.state.style.top;
    var bottom = this.state.style.bottom;
    // var left = this.state.style.left;
    // var right = this.state.style.right;
    var sticky = this.state.sticky;
    var absolute = this.state.absolute;

    if (top !== null) {
      var offsetBottom = this.state.restrict.bottom - this.state.bounds.height - top;
      top = this.state.bounds.top - top;

      if (this.state.sticky === false && (scrollY >= top && scrollY <= offsetBottom || top <= 0 && scrollY < top)) {
        sticky = true;
        absolute = false;
      } else if (this.state.sticky && (top > 0 && scrollY < top || scrollY > offsetBottom)) {
        sticky = false;
        absolute = scrollY > offsetBottom;
      }
    } else if (bottom !== null) {

      scrollY += window.innerHeight;
      var offsetTop = this.state.restrict.top + this.state.bounds.height - bottom;
      bottom = this.state.bounds.bottom + bottom;

      if (this.state.sticky === false && scrollY <= bottom && scrollY >= offsetTop) {
        sticky = true;
        absolute = false;
      } else if (this.state.sticky && (scrollY > bottom || scrollY < offsetTop)) {
        sticky = false;
        absolute = scrollY <= offsetTop;
      }
    }
    return { sticky: sticky, absolute: absolute };
  };

  ReactStickyState.prototype.updateStickyState = function updateStickyState(silent) {
    var _this4 = this;

    var values = this.getStickyState();

    if (values.sticky !== this.state.sticky || values.absolute !== this.state.absolute) {
      this._shouldComponentUpdate = silent !== true;
      values = (0, _objectAssign2.default)(values, this.getBounds(false));
      this._updatingState = true;
      this.setState(values, function () {
        _this4._shouldComponentUpdate = true;
        _this4._updatingState = false;
      });
    }
  };

  // updateStickyState(bounds = true, cb) {
  //   if (this._updatingState) {
  //     return;
  //   }
  //   var values = this.getStickyState();

  //   if (values.sticky !== this.state.sticky || values.absolute !== this.state.absolute) {
  //     this._updatingState = true;
  //     if (bounds) {
  //       values = assign(values, this.getBounds(), { scrollClass: this.getScrollClass() });
  //     }
  //     this.setState(values, () => {
  //       this._updatingState = false;
  //       if (typeof cb === 'function') {
  //         cb();
  //       }
  //     });
  //     return true;
  //   } else if (typeof cb === 'function') {
  //     cb();
  //   }
  //   return false;
  // }


  ReactStickyState.prototype.initialize = function initialize() {
    var _this5 = this;

    if (!this.state.initialized && !this.state.disabled) {
      this.setState({
        initialized: true
      }, function () {
        var child = _this5.refs.wrapper || _this5.refs.el;
        _this5.scrollTarget = _scrollfeatures2.default.getScrollParent(child);
        _this5.hasOwnScrollTarget = _this5.scrollTarget !== window;
        if (_this5.hasOwnScrollTarget) {
          _this5.updateFixedOffset = _this5.updateFixedOffset.bind(_this5);
        }

        _this5.addSrollHandler();
        _this5.addResizeHandler();
        _this5.update();
      });
    }
  };

  ReactStickyState.prototype.shouldComponentUpdate = function shouldComponentUpdate(newProps, newState) {
    return this._shouldComponentUpdate;
  };

  ReactStickyState.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this6 = this;

    var intialize = !this.state.initialized && nextProps.initialize;

    if (nextProps.disabled !== this.state.disabled) {
      this.setState({
        disabled: nextProps.disabled
      }, function () {
        if (intialize) {
          _this6.initialize();
        }
      });
    }
  };

  ReactStickyState.prototype.componentDidMount = function componentDidMount() {
    if (!this.state.initialized && this.props.initialize) {
      this.initialize();
    }
  };

  ReactStickyState.prototype.componentWillUnmount = function componentWillUnmount() {
    this.destroy();
  };

  ReactStickyState.prototype.render = function render() {
    var _classNames, _classNames2, _classNames3, _classNames4;

    if (!this.state.initialized) {
      return this.props.children;
    }

    var element = _react2.default.Children.only(this.props.children);

    var _props = this.props,
        wrapperClass = _props.wrapperClass,
        stickyClass = _props.stickyClass,
        fixedClass = _props.fixedClass,
        stateClass = _props.stateClass,
        disabledClass = _props.disabledClass,
        absoluteClass = _props.absoluteClass,
        disabled = _props.disabled,
        debug = _props.debug,
        tagName = _props.tagName,
        props = (0, _objectWithoutProperties3.default)(_props, ['wrapperClass', 'stickyClass', 'fixedClass', 'stateClass', 'disabledClass', 'absoluteClass', 'disabled', 'debug', 'tagName']);


    var style;
    var refName = 'el';
    var className = (0, _classnames2.default)((_classNames = {}, _classNames[stickyClass] = !this.state.disabled, _classNames[disabledClass] = this.state.disabled, _classNames), (_classNames2 = {}, _classNames2[fixedClass] = !_featureDetect2.default.sticky, _classNames2), (_classNames3 = {}, _classNames3[stateClass] = this.state.sticky && !this.state.disabled, _classNames3), (_classNames4 = {}, _classNames4[absoluteClass] = this.state.absolute, _classNames4), this.state.scrollClass);

    if (!_featureDetect2.default.sticky) {
      if (this.state.absolute) {

        style = {
          marginTop: this.state.style.top !== null ? this.state.restrict.height - (this.state.bounds.height + this.state.style.top) + (this.state.restrict.top - this.state.bounds.top) + 'px' : '',
          marginBottom: this.state.style.bottom !== null ? this.state.restrict.height - (this.state.bounds.height + this.state.style.bottom) + (this.state.restrict.bottom - this.state.bounds.bottom) + 'px' : ''
        };
      } else if (this.hasOwnScrollTarget && this.state.fixedOffset !== '') {
        style = {
          marginTop: this.state.fixedOffset
        };
      }
    }

    if (element) {
      element = _react2.default.cloneElement(element, { ref: refName, style: style, className: (0, _classnames2.default)(element.props.className, className) });
    } else {
      var Comp = this.props.tagName;
      element = _react2.default.createElement(
        Comp,
        (0, _extends3.default)({ ref: refName, style: style, className: className }, props),
        this.props.children
      );
    }

    if (_featureDetect2.default.sticky) {
      return element;
    }

    var height = this.state.disabled || this.state.bounds.height === null /*|| (!this.state.sticky && !this.state.absolute)*/ ? 'auto' : this.state.bounds.height + 'px';
    var marginTop = height === 'auto' ? '' : this.state.style['margin-top'] ? this.state.style['margin-top'] + 'px' : '';
    var marginBottom = height === 'auto' ? '' : this.state.style['margin-bottom'] ? this.state.style['margin-bottom'] + 'px' : '';

    style = {
      height: height,
      marginTop: marginTop,
      marginBottom: marginBottom
    };
    if (this.state.absolute) {
      style.position = 'relative';
    }
    return _react2.default.createElement(
      'div',
      { ref: 'wrapper', className: wrapperClass, style: style },
      element
    );
  };

  return ReactStickyState;
}(_react.Component);

ReactStickyState.propTypes = {
  initialize: _react.PropTypes.bool,
  wrapperClass: _react.PropTypes.string,
  stickyClass: _react.PropTypes.string,
  fixedClass: _react.PropTypes.string,
  stateClass: _react.PropTypes.string,
  disabledClass: _react.PropTypes.string,
  absoluteClass: _react.PropTypes.string,
  disabled: _react.PropTypes.bool,
  debug: _react.PropTypes.bool,
  wrapFixedSticky: _react.PropTypes.bool,
  tagName: _react.PropTypes.string,
  scrollClass: _react.PropTypes.shape({
    down: _react.PropTypes.string,
    up: _react.PropTypes.string,
    none: _react.PropTypes.string,
    persist: _react.PropTypes.bool,
    active: _react.PropTypes.bool
  })
};
ReactStickyState.defaultProps = {
  initialize: true,
  wrapperClass: 'sticky-wrap',
  stickyClass: 'sticky',
  fixedClass: 'sticky-fixed',
  stateClass: 'is-sticky',
  disabledClass: 'sticky-disabled',
  absoluteClass: 'is-absolute',
  wrapFixedSticky: true,
  debug: false,
  disabled: false,
  tagName: 'div',
  scrollClass: {
    down: null,
    up: null,
    none: null,
    persist: false,
    active: false
  }
};
exports.default = ReactStickyState;
module.exports = exports['default'];

/***/ }),
/* 1277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(1278);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 1278 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1279), __esModule: true };

/***/ }),
/* 1279 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1280);
module.exports = __webpack_require__(1055).Object.assign;


/***/ }),
/* 1280 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(1060);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(1282) });


/***/ }),
/* 1281 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 1282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(1073);
var gOPS = __webpack_require__(1095);
var pIE = __webpack_require__(1075);
var toObject = __webpack_require__(1138);
var IObject = __webpack_require__(1136);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(1067)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 1283 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(1062);
var toLength = __webpack_require__(1284);
var toAbsoluteIndex = __webpack_require__(1285);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 1284 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(1091);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 1285 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(1091);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 1286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

/***/ }),
/* 1287 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1288), __esModule: true };

/***/ }),
/* 1288 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1289);
__webpack_require__(1295);
module.exports = __webpack_require__(1101).f('iterator');


/***/ }),
/* 1289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(1290)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(1140)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 1290 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(1091);
var defined = __webpack_require__(1090);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 1291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(1099);
var descriptor = __webpack_require__(1072);
var setToStringTag = __webpack_require__(1100);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(1061)(IteratorPrototype, __webpack_require__(1063)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 1292 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(1056);
var anObject = __webpack_require__(1065);
var getKeys = __webpack_require__(1073);

module.exports = __webpack_require__(1057) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 1293 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(1051).document;
module.exports = document && document.documentElement;


/***/ }),
/* 1294 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(1058);
var toObject = __webpack_require__(1138);
var IE_PROTO = __webpack_require__(1092)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 1295 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1296);
var global = __webpack_require__(1051);
var hide = __webpack_require__(1061);
var Iterators = __webpack_require__(1098);
var TO_STRING_TAG = __webpack_require__(1063)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 1296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(1297);
var step = __webpack_require__(1298);
var Iterators = __webpack_require__(1098);
var toIObject = __webpack_require__(1062);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(1140)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 1297 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 1298 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 1299 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1300), __esModule: true };

/***/ }),
/* 1300 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1301);
__webpack_require__(1306);
__webpack_require__(1307);
__webpack_require__(1308);
module.exports = __webpack_require__(1055).Symbol;


/***/ }),
/* 1301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(1051);
var has = __webpack_require__(1058);
var DESCRIPTORS = __webpack_require__(1057);
var $export = __webpack_require__(1060);
var redefine = __webpack_require__(1141);
var META = __webpack_require__(1302).KEY;
var $fails = __webpack_require__(1067);
var shared = __webpack_require__(1093);
var setToStringTag = __webpack_require__(1100);
var uid = __webpack_require__(1074);
var wks = __webpack_require__(1063);
var wksExt = __webpack_require__(1101);
var wksDefine = __webpack_require__(1102);
var enumKeys = __webpack_require__(1303);
var isArray = __webpack_require__(1304);
var anObject = __webpack_require__(1065);
var toIObject = __webpack_require__(1062);
var toPrimitive = __webpack_require__(1089);
var createDesc = __webpack_require__(1072);
var _create = __webpack_require__(1099);
var gOPNExt = __webpack_require__(1305);
var $GOPD = __webpack_require__(1143);
var $DP = __webpack_require__(1056);
var $keys = __webpack_require__(1073);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(1142).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(1075).f = $propertyIsEnumerable;
  __webpack_require__(1095).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(1097)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    replacer = args[1];
    if (typeof replacer == 'function') $replacer = replacer;
    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
      if ($replacer) value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(1061)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 1302 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(1074)('meta');
var isObject = __webpack_require__(1066);
var has = __webpack_require__(1058);
var setDesc = __webpack_require__(1056).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(1067)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 1303 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(1073);
var gOPS = __webpack_require__(1095);
var pIE = __webpack_require__(1075);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 1304 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(1137);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 1305 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(1062);
var gOPN = __webpack_require__(1142).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 1306 */
/***/ (function(module, exports) {



/***/ }),
/* 1307 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1102)('asyncIterator');


/***/ }),
/* 1308 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1102)('observable');


/***/ }),
/* 1309 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1310), __esModule: true };

/***/ }),
/* 1310 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1311);
module.exports = __webpack_require__(1055).Object.setPrototypeOf;


/***/ }),
/* 1311 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(1060);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(1312).set });


/***/ }),
/* 1312 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(1066);
var anObject = __webpack_require__(1065);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(1132)(Function.call, __webpack_require__(1143).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 1313 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1314), __esModule: true };

/***/ }),
/* 1314 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1315);
var $Object = __webpack_require__(1055).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 1315 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1060);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(1099) });


/***/ }),
/* 1316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(1068);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(1096);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(1144);

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(1103);

var _inherits3 = _interopRequireDefault(_inherits2);

var _eventdispatcher = __webpack_require__(1320);

var _eventdispatcher2 = _interopRequireDefault(_eventdispatcher);

var _scrollParent = __webpack_require__(1322);

var _scrollParent2 = _interopRequireDefault(_scrollParent);

var _raf = __webpack_require__(1324);

var _raf2 = _interopRequireDefault(_raf);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScrollFeatures = function (_EventDispatcher) {
  (0, _inherits3.default)(ScrollFeatures, _EventDispatcher);

  ScrollFeatures.getInstance = function getInstance(scrollTarget, options) {
    if (!scrollTarget.scrollFeatures) {
      return new ScrollFeatures(scrollTarget, options);
    }
    return scrollTarget.scrollFeatures;
  };

  ScrollFeatures.hasInstance = function hasInstance(scrollTarget) {
    return typeof scrollTarget.scrollFeatures !== 'undefined';
  };

  ScrollFeatures.getScrollParent = function getScrollParent(element) {
    return (0, _scrollParent2.default)(element);
  };

  (0, _createClass3.default)(ScrollFeatures, null, [{
    key: 'windowY',
    get: function get() {
      return window.pageYOffset || window.scrollY || 0;
    }
  }, {
    key: 'windowX',
    get: function get() {
      return window.pageXOffset || window.scrollX || 0;
    }
  }, {
    key: 'documentHeight',
    get: function get() {
      return Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
    }
  }, {
    key: 'documentWidth',
    get: function get() {
      return Math.max(document.body.scrollWidth, document.body.offsetWidth, document.documentElement.clientWidth, document.documentElement.scrollWidth, document.documentElement.offsetWidth);
    }
  }]);

  function ScrollFeatures() {
    var scrollTarget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck3.default)(this, ScrollFeatures);


    if (ScrollFeatures.hasInstance(scrollTarget)) {
      var _ret;

      return _ret = ScrollFeatures.getInstance(scrollTarget), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventDispatcher.call(this, { target: scrollTarget }));

    _this._scrollTarget = null;
    _this._y = 0;
    _this._x = 0;
    _this._speedY = 0;
    _this._maxSpeedY = 0;
    _this._speedX = 0;
    _this._lastSpeed = 0;
    _this._lastDirectionY = ScrollFeatures.direction.none;
    _this._lastDirectionX = ScrollFeatures.direction.none;
    _this._stopFrames = 3;
    _this._currentStopFrames = 0;
    _this._firstRender = true;
    _this._directionY = ScrollFeatures.direction.none;
    _this._directionX = ScrollFeatures.direction.none;
    _this._scrolling = false;
    _this._canScrollY = false;
    _this._canScrollX = false;


    scrollTarget.scrollFeatures = _this;
    _this._scrollTarget = scrollTarget;
    _this.cancelFrame = false;
    _this.options = options;

    _this.init();
    return _this;
  }

  ScrollFeatures.prototype.init = function init() {
    var _this2 = this;

    this.getScrollPosition = this._scrollTarget === window ? function () {
      return { y: ScrollFeatures.windowY, x: ScrollFeatures.windowX };
    }.bind(this) : function () {
      return { y: this._scrollTarget.scrollTop, x: this._scrollTarget.scrollLeft };
    }.bind(this);

    this.onResize = function () {
      _this2.trigger(ScrollFeatures.events.SCROLL_RESIZE);
    };
    this.onScroll = this.onScroll.bind(this);
    this.onNextFrame = this.onNextFrame.bind(this);

    this.updateScrollPosition();

    if (this._scrollTarget !== window) {
      var regex = /(auto|scroll)/;
      var style = window.getComputedStyle(this._scrollTarget, null);
      this._canScrollY = regex.test(style.getPropertyValue('overflow-y'));
      this._canScrollX = regex.test(style.getPropertyValue('overflow-x'));
    } else {
      this._canScrollY = this.clientHeight < this.scrollHeight;
      this._canScrollX = this.clientWidth < this.scrollWidth;
    }

    if (this._scrollTarget.addEventListener) {
      this._scrollTarget.addEventListener('scroll', this.onScroll, false);
      this._scrollTarget.addEventListener('resize', this.onResize, false);
    } else if (this._scrollTarget.attachEvent) {
      this._scrollTarget.attachEvent('scroll', this.onScroll);
      this._scrollTarget.attachEvent('resize', this.onResize);
    }
  };

  ScrollFeatures.prototype.destroy = function destroy() {

    this._cancelNextFrame();
    _EventDispatcher.prototype.destroy.call(this);

    if (this._scrollTarget) {
      if (this._scrollTarget.addEventListener) {
        this._scrollTarget.removeEventListener('scroll', this.onScroll);
        this._scrollTarget.removeEventListener('resize', this.onResize);
      } else if (this._scrollTarget.attachEvent) {
        this._scrollTarget.detachEvent('scroll', this.onScroll);
        this._scrollTarget.detachEvent('resize', this.onResize);
      }
    }

    // this.onResize = null;
    // this.onScroll = null;
    // this.getScrollPosition = null;
    // this.onNextFrame = null;
    delete this._scrollTarget.scrollFeatures;
    this._scrollTarget = null;
  };

  ScrollFeatures.prototype.updateScrollPosition = function updateScrollPosition() {
    this._y = this.y;
    this._x = this.x;
  };

  ScrollFeatures.prototype.onScroll = function onScroll() {
    this._currentStopFrames = 0;
    if (this._firstRender) {
      this._firstRender = false;
      if (this.y > 1 || this.x > 1) {
        this.updateScrollPosition();
        this.trigger(ScrollFeatures.events.SCROLL_PROGRESS);
        return;
      }
    }

    if (!this._scrolling) {
      this._scrolling = true;
      this._maxSpeedY = 0;
      this._lastDirectionY = ScrollFeatures.direction.none;
      this._lastDirectionX = ScrollFeatures.direction.none;
      this.trigger(ScrollFeatures.events.SCROLL_START);
      this.cancelFrame = false;
      (0, _raf2.default)(this.onNextFrame);
    }
  };

  ScrollFeatures.prototype.onNextFrame = function onNextFrame() {
    if (!this.cancelFrame) {
      this._speedY = this._y - this.y;
      this._speedX = this._x - this.x;

      if (this._speedY < 0) {
        this._maxSpeedY = this._speedY < this._maxSpeedY ? this._speedY : this._maxSpeedY;
      } else if (this._speedY > 0) {
        this._maxSpeedY = this._speedY > this._maxSpeedY ? this._speedY : this._maxSpeedY;
      }

      var speed = +this.speedY + +this.speedX;
      if (this._scrolling && speed === 0 && this._currentStopFrames++ > this._stopFrames) {
        this.onScrollStop();
        return;
      }

      this.updateScrollPosition();

      if (this._lastDirectionY !== this.directionY) {
        this.trigger('scroll:' + (this.directionY === ScrollFeatures.direction.down ? 'down' : 'up'));
      }
      if (this._lastDirectionX !== this.directionX) {
        this.trigger('scroll:' + (this.directionX === ScrollFeatures.direction.right ? 'right' : 'left'));
      }

      this._lastDirectionY = this.directionY;
      this._lastDirectionX = this.directionX;

      this.trigger(ScrollFeatures.events.SCROLL_PROGRESS);

      (0, _raf2.default)(this.onNextFrame);
    }
  };

  ScrollFeatures.prototype.onScrollStop = function onScrollStop() {

    this._cancelNextFrame();
    this._scrolling = false;

    if (this._scrollTarget) {
      this.updateScrollPosition();

      this.trigger(ScrollFeatures.events.SCROLL_STOP);

      if (this._canScrollY) {
        if (this.y <= 0) {
          this.trigger(ScrollFeatures.events.SCROLL_MIN);
        } else if (this.y + this.clientHeight >= this.scrollHeight) {
          this.trigger(ScrollFeatures.events.SCROLL_MAX);
        }
      }

      if (this._canScrollX) {
        if (this.x <= 0) {
          this.trigger(ScrollFeatures.events.SCROLL_MIN);
        } else if (this.x + this.clientWidth >= this.scrollWidth) {
          this.trigger(ScrollFeatures.events.SCROLL_MAX);
        }
      }
    } else {
      this.trigger(ScrollFeatures.events.SCROLL_STOP);
    }
  };

  ScrollFeatures.prototype._cancelNextFrame = function _cancelNextFrame() {
    this.cancelFrame = true;
    this._currentStopFrames = 0;
  };

  (0, _createClass3.default)(ScrollFeatures, [{
    key: 'scrollPosition',
    get: function get() {
      return this.getScrollPosition();
    }
  }, {
    key: 'directionY',
    get: function get() {
      if (!this._canScrollY || this.speedY === 0 && !this._scrolling) {
        this._directionY = ScrollFeatures.direction.none;
      } else {
        if (this.speedY > 0) {
          this._directionY = ScrollFeatures.direction.up;
        } else if (this.speedY < 0) {
          this._directionY = ScrollFeatures.direction.down;
        }
      }
      return this._directionY;
    }
  }, {
    key: 'directionX',
    get: function get() {
      if (!this._canScrollX || this.speedX === 0 && !this._scrolling) {
        this._directionX = ScrollFeatures.direction.none;
      } else {
        if (this.speedX > 0) {
          this._directionX = ScrollFeatures.direction.left;
        } else if (this.speedX < 0) {
          this._directionX = ScrollFeatures.direction.right;
        }
      }
      return this._directionX;
    }
  }, {
    key: 'scrollTarget',
    get: function get() {
      return this._scrollTarget;
    }
  }, {
    key: 'scrolling',
    get: function get() {
      return this._scrolling;
    }
  }, {
    key: 'speedY',
    get: function get() {
      return this._speedY;
    }
  }, {
    key: 'speedX',
    get: function get() {
      return this._speedX;
    }
  }, {
    key: 'maxSpeedY',
    get: function get() {
      return this._maxSpeedY;
    }
  }, {
    key: 'canScrollY',
    get: function get() {
      return this._canScrollY;
    }
  }, {
    key: 'canScrollX',
    get: function get() {
      return this._canScrollX;
    }
  }, {
    key: 'y',
    get: function get() {
      return this.scrollPosition.y;
    }
  }, {
    key: 'x',
    get: function get() {
      return this.scrollPosition.x;
    }
  }, {
    key: 'clientHeight',
    get: function get() {
      return this._scrollTarget === window ? window.innerHeight : this._scrollTarget.clientHeight;
    }
  }, {
    key: 'clientWidth',
    get: function get() {
      return this._scrollTarget === window ? window.innerWidth : this._scrollTarget.clientWidth;
    }
  }, {
    key: 'scrollHeight',
    get: function get() {
      return this._scrollTarget === window ? ScrollFeatures.documentHeight : this._scrollTarget.scrollHeight;
    }
  }, {
    key: 'scrollWidth',
    get: function get() {
      return this._scrollTarget === window ? ScrollFeatures.documentWidth : this._scrollTarget.scrollWidth;
    }
  }]);
  return ScrollFeatures;
}(_eventdispatcher2.default);

ScrollFeatures.direction = {
  up: -1,
  down: 1,
  none: 0,
  right: 2,
  left: -2
};
ScrollFeatures.events = {
  SCROLL_PROGRESS: 'scroll:progress',
  SCROLL_START: 'scroll:start',
  SCROLL_STOP: 'scroll:stop',
  SCROLL_DOWN: 'scroll:down',
  SCROLL_UP: 'scroll:up',
  SCROLL_MIN: 'scroll:min',
  SCROLL_MAX: 'scroll:max',
  SCROLL_RESIZE: 'scroll:resize'
};
exports.default = ScrollFeatures;
module.exports = exports['default'];

/***/ }),
/* 1317 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1318), __esModule: true };

/***/ }),
/* 1318 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1319);
var $Object = __webpack_require__(1055).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 1319 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1060);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(1057), 'Object', { defineProperty: __webpack_require__(1056).f });


/***/ }),
/* 1320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EventDispatcher; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(1068);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(1096);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(1103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core__ = __webpack_require__(1321);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_object_assign__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_object_assign__);






var EventDispatcher = function (_CoreDispatcher) {
  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(EventDispatcher, _CoreDispatcher);

  function EventDispatcher() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        target = _ref.target,
        currentTarget = _ref.currentTarget;

    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, EventDispatcher);

    var _this = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, _CoreDispatcher.call(this));

    _this.target = target || _this;
    _this.currentTarget = currentTarget || _this;

    _this.addListener = _this.bind = _this.addEventListener = _this.on;
    _this.removeListener = _this.unbind = _this.removeEventListener = _this.off;
    _this.addListenerOnce = _this.one = _this.once;
    _this.emit = _this.dispatch = _this.dispatchEvent = _this.trigger;

    _this.hasListener = _this.hasListeners = _this.listens;
    return _this;
  }

  EventDispatcher.prototype.listens = function listens(eventName) {
    if (eventName) {
      return this.getListener(eventName).length > 0;
    }
    return !!this.eventMap && Object.keys(this.eventMap).length > 0;
  };

  EventDispatcher.prototype.createEventObject = function createEventObject(eventType, eventObject) {
    var evtObj = {
      type: eventType,
      target: this.target,
      currentTarget: this.currentTarget
    };

    if (eventObject) {
      evtObj = __WEBPACK_IMPORTED_MODULE_4_object_assign___default()(evtObj, eventObject);
    }

    return evtObj;
  };

  return EventDispatcher;
}(__WEBPACK_IMPORTED_MODULE_3__core__["a" /* default */]);



/***/ }),
/* 1321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CoreDispatcher; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(1068);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_object_assign__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_object_assign__);



var CoreDispatcher = function () {
  function CoreDispatcher() {
    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, CoreDispatcher);

    this.eventMap = {};
    this.destroyed = false;
  }

  CoreDispatcher.prototype.on = function on(eventName, handler) {
    var listeners = this.getListener(eventName);
    if (listeners.indexOf(handler) === -1) {
      listeners.push(handler);
    }
    this.eventMap[eventName] = this.eventMap[eventName] || listeners;
    return this;
  };

  CoreDispatcher.prototype.once = function once(eventName, handler) {
    var _this = this;

    var f2 = function f2(e) {
      handler(e);
      _this.off(eventName, f2);
    };
    return this.on(eventName, f2);
  };

  CoreDispatcher.prototype.off = function off(eventName, handler) {
    var listeners = this.getListener(eventName);
    if (!handler) {
      this.eventMap[eventName].length = 0;
      delete this.eventMap[eventName];
    } else {
      var i = listeners.indexOf(handler);
      if (i > -1) {
        listeners.splice(i, 1);
        if (!listeners.length) {
          delete this.eventMap[eventName];
        }
      }
    }
    return this;
  };

  CoreDispatcher.prototype.commitEvent = function commitEvent(listeners, eventObject) {
    for (var i = 0, l = listeners.length; i < l; i++) {
      if (listeners[i]) {
        listeners[i](eventObject);
      } else if (console) {
        console.warn('listener undefined', i);
      }
    }
    return this;
  };

  CoreDispatcher.prototype.commitEvents = function commitEvents(listeners, eventObjects) {
    for (var i = 0, l = listeners.length; i < l; i++) {
      if (listeners[i]) {
        for (var ii = 0, ll = eventObjects.length; ii < ll; ii++) {
          listeners[i](eventObjects[ii]);
        }
      } else if (console) {
        console.warn('listener undefined', i);
      }
    }
    return this;
  };

  CoreDispatcher.prototype.createEventObject = function createEventObject(eventType, eventObject) {
    var evtObj = {
      type: eventType,
      target: this
    };

    if (eventObject) {
      evtObj = __WEBPACK_IMPORTED_MODULE_1_object_assign___default()(evtObj, eventObject);
    }

    return evtObj;
  };

  CoreDispatcher.prototype.triggerSync = function triggerSync(eventObjects) {
    var listenerCollection = [];
    for (var i = 0, l = eventObjects.length; i < l; i++) {
      var listeners = this.getListener(eventObjects[i].type);
      for (var ii = 0, ll = listeners.length; ii < ll; ii++) {
        var listener = listeners[ii];
        if (listenerCollection.indexOf(listener) < 0) {
          listenerCollection.push(listener);
        }
      }
    }
  };

  CoreDispatcher.prototype.trigger = function trigger(eventType, eventObject) {
    var listeners = this.getListener(eventType);
    if (listeners && listeners.length) {
      return this.commitEvent(listeners, this.createEventObject(eventType, eventObject));
    }
    return this;
  };

  CoreDispatcher.prototype.clear = function clear() {
    if (this.eventMap) {
      var keys = Object.keys(this.eventMap);
      for (var i = 0, l = keys.length; i < l; i++) {
        this.eventMap[keys[i]].length = 0;
        delete this.eventMap[keys[i]];
      }
    }
  };

  CoreDispatcher.prototype.getListener = function getListener(eventName) {
    return !!this.eventMap && this.eventMap[eventName] ? this.eventMap[eventName] : [];
  };

  CoreDispatcher.prototype.destroy = function destroy() {
    this.clear();
    this.eventMap = null;
    this.destroyed = true;
    return this;
  };

  return CoreDispatcher;
}();



/***/ }),
/* 1322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hasOverflow = __webpack_require__(1323);

var scrollParent = function scrollParent(element) {

  if (!(element instanceof HTMLElement)) {
    return window;
  }

  while (element.parentNode) {
    if (element.parentNode === document.body) {
      return window;
    }

    if (hasOverflow(element.parentNode)) {
      return element.parentNode;
    }
    element = element.parentNode;
  }
  return window;
};

module.exports = scrollParent;

/***/ }),
/* 1323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regex = /(auto|scroll)/;

var hasOverflow = function hasOverflow(element) {
  var style = window.getComputedStyle(element, null);
  return regex.test(style.getPropertyValue('overflow') + style.getPropertyValue('overflow-y') + style.getPropertyValue('overflow-x'));
};
module.exports = hasOverflow;

/***/ }),
/* 1324 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(1325)
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))

/***/ }),
/* 1325 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42)))

/***/ }),
/* 1326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(1068);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(1144);

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _canSticky = null;

var Can = function () {
  function Can() {
    (0, _classCallCheck3.default)(this, Can);
  }

  (0, _createClass3.default)(Can, null, [{
    key: 'sticky',
    get: function get() {
      if (_canSticky !== null) {
        return _canSticky;
      }

      if (typeof window !== 'undefined') {

        if (window.Modernizr && window.Modernizr.hasOwnProperty('csspositionsticky')) {
          return _canSticky = window.Modernizr.csspositionsticky;
        }

        var documentFragment = document.documentElement;
        var testEl = document.createElement('div');
        documentFragment.appendChild(testEl);
        var prefixedSticky = ['sticky', '-webkit-sticky'];

        _canSticky = false;

        for (var i = 0; i < prefixedSticky.length; i++) {
          testEl.style.position = prefixedSticky[i];
          _canSticky = !!window.getComputedStyle(testEl).position.match('sticky');
          if (_canSticky) {
            break;
          }
        }
        documentFragment.removeChild(testEl);
      }
      return _canSticky;
    }
  }]);
  return Can;
}();

exports.default = Can;
module.exports = exports['default'];

/***/ }),
/* 1327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RequestButtons = function (_Component) {
  _inherits(RequestButtons, _Component);

  function RequestButtons() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RequestButtons);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RequestButtons.__proto__ || Object.getPrototypeOf(RequestButtons)).call.apply(_ref, [this].concat(args))), _this), _this.handleBtnClick = function (type) {
      _this.props.onClick(type);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(RequestButtons, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          saleType = _props.saleType,
          saleTypeWithRDC = _props.saleTypeWithRDC;


      var btnClass = 'btn btn-primary ' + _lib.Lib.THEME_CLASSES_PREFIX + 'button';

      var typeA = 'request-showing-' + saleType;
      var typeB = 'request-information-' + saleType;
      var typeC = 'request-application';

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'request-buttons' },
        _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: btnClass + ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'primary-button',
            onClick: this.handleBtnClick.bind(this, typeA)
          },
          'Request Showing'
        ),
        ['rentNOTRdc', 'saleRDC', 'saleNotRdc'].indexOf(saleTypeWithRDC) >= 0 && _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: btnClass + ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'secondary-button',
            onClick: this.handleBtnClick.bind(this, typeB)
          },
          'Request Information'
        ),
        saleTypeWithRDC === 'rentRDC' && _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: btnClass + ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'secondary-button',
            onClick: this.handleBtnClick.bind(this, typeC)
          },
          'Request Application'
        )
      );
    }
  }]);

  return RequestButtons;
}(_react.Component);

RequestButtons.propTypes = {
  saleType: _propTypes2.default.string,
  saleTypeWithRDC: _propTypes2.default.string,
  onClick: _propTypes2.default.func
};

exports.default = RequestButtons;

/***/ }),
/* 1328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  above: 'above',
  inside: 'inside',
  below: 'below',
  invisible: 'invisible'
};
module.exports = exports['default'];

/***/ }),
/* 1329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactContentLoader = __webpack_require__(387);

var _reactContentLoader2 = _interopRequireDefault(_reactContentLoader);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CardPlaceholder = function CardPlaceholder() {
  return _react2.default.createElement(
    'div',
    { className: _lib.Lib.THEME_CLASSES_PREFIX + 'card card ' + _lib.Lib.THEME_CLASSES_PREFIX + 'content-placeholder' },
    _react2.default.createElement(
      'div',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'card-img' },
      _react2.default.createElement(
        _reactContentLoader2.default,
        { height: 211, primaryColor: '#dcdcdc' },
        _react2.default.createElement(_reactContentLoader.Rect, null)
      )
    ),
    _react2.default.createElement(
      'div',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'card-block card-block' },
      _react2.default.createElement(
        'h4',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'card-title card-title' },
        _react2.default.createElement(
          _reactContentLoader2.default,
          { primaryColor: '#8b8c8d' },
          _react2.default.createElement(_reactContentLoader.Rect, null)
        )
      ),
      _react2.default.createElement(
        'p',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'card-text card-text' },
        _react2.default.createElement(
          _reactContentLoader2.default,
          { primaryColor: '#dcdcdc' },
          _react2.default.createElement(_reactContentLoader.Rect, null)
        )
      ),
      _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'listing-info-box' },
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _reactContentLoader2.default,
            { primaryColor: '#dcdcdc' },
            _react2.default.createElement(_reactContentLoader.Rect, null)
          )
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _reactContentLoader2.default,
            { primaryColor: '#dcdcdc' },
            _react2.default.createElement(_reactContentLoader.Rect, null)
          )
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _reactContentLoader2.default,
            { primaryColor: '#dcdcdc' },
            _react2.default.createElement(_reactContentLoader.Rect, null)
          )
        )
      )
    )
  );
};

var Placeholder = function Placeholder(_ref) {
  var onInit = _ref.onInit,
      isFetching = _ref.isFetching,
      isMobile = _ref.isMobile;

  return _react2.default.createElement(
    'div',
    { className: isFetching ? 'row d-flex' : 'row d-none', ref: onInit },
    _react2.default.createElement(
      'div',
      { className: 'col-12 col-xl-6' },
      _react2.default.createElement(CardPlaceholder, null)
    ),
    !isMobile && _react2.default.createElement(
      'div',
      { className: 'col-12 col-xl-6' },
      _react2.default.createElement(CardPlaceholder, null)
    )
  );
};

Placeholder.propTypes = {
  isFetching: _propTypes2.default.bool.isRequired,
  isMobile: _propTypes2.default.bool.isRequired,
  onInit: _propTypes2.default.func.isRequired
};

exports.default = Placeholder;

/***/ }),
/* 1330 */,
/* 1331 */,
/* 1332 */,
/* 1333 */,
/* 1334 */,
/* 1335 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(414),
    baseFilter = __webpack_require__(1336),
    baseIteratee = __webpack_require__(114),
    isArray = __webpack_require__(30);

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = isArray(collection) ? arrayFilter : baseFilter;
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = filter;


/***/ }),
/* 1336 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(244);

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

module.exports = baseFilter;


/***/ }),
/* 1337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ErrorMessageModal = __webpack_require__(385);

var _ErrorMessageModal2 = _interopRequireDefault(_ErrorMessageModal);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(41);

var _capitalize = __webpack_require__(1076);

var _capitalize2 = _interopRequireDefault(_capitalize);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _omit = __webpack_require__(1112);

var _omit2 = _interopRequireDefault(_omit);

var _qs = __webpack_require__(380);

var _qs2 = _interopRequireDefault(_qs);

var _urijs = __webpack_require__(230);

var _urijs2 = _interopRequireDefault(_urijs);

var _Api = __webpack_require__(152);

var _Api2 = _interopRequireDefault(_Api);

var _index = __webpack_require__(52);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

var _lib = __webpack_require__(3);

var _ErrorMessage = __webpack_require__(161);

var _ErrorMessage2 = _interopRequireDefault(_ErrorMessage);

var _HeaderSearch = __webpack_require__(1338);

var _HeaderSearch2 = _interopRequireDefault(_HeaderSearch);

var _PropertiesModal = __webpack_require__(1104);

var _PropertiesModal2 = _interopRequireDefault(_PropertiesModal);

var _LocationModal = __webpack_require__(234);

var _LocationModal2 = _interopRequireDefault(_LocationModal);

var _Map = __webpack_require__(1339);

var _Map2 = _interopRequireDefault(_Map);

var _SearchResultListing = __webpack_require__(1340);

var _SearchResultListing2 = _interopRequireDefault(_SearchResultListing);

var _SearchFilterDescriptionText = __webpack_require__(1357);

var _SearchFilterDescriptionText2 = _interopRequireDefault(_SearchFilterDescriptionText);

var _CarouselOnMap = __webpack_require__(1360);

var _CarouselOnMap2 = _interopRequireDefault(_CarouselOnMap);

var _PropertyPanelOnMap = __webpack_require__(1361);

var _PropertyPanelOnMap2 = _interopRequireDefault(_PropertyPanelOnMap);

var _SearchFilterDescriptionTextPlaceholder = __webpack_require__(1362);

var _SearchFilterDescriptionTextPlaceholder2 = _interopRequireDefault(_SearchFilterDescriptionTextPlaceholder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, ownProps) {
  var propertyTypeOptions = (0, _get2.default)(state, 'propertyTypeOptions.options');
  var queryDefaults = ownProps.queryDefaults;
  var propertySubTypes = ownProps.propertySubtypes;
  var searchQueryParamsCollection = _Util2.default.URLSearchParse('search', window.location.href);
  var searchQueryObject = _Util2.default.searchCollectionToObject(searchQueryParamsCollection);
  var saleType = null;
  if (searchQueryObject.sale_type) {
    saleType = searchQueryObject.sale_type.map(function (d) {
      return (0, _capitalize2.default)(d);
    });
  }
  var searchType = _Util2.default.determineSearchType(propertyTypeOptions, searchQueryObject.property_type[0], saleType);
  var termDetails = (0, _get2.default)(ownProps, 'termDetails');
  if (searchType instanceof Error) {
    //TODO: handle not determining searchQueryObject
    console.log('error determining search type: ', searchType.message);
  }
  searchQueryObject['property_type'] = searchQueryObject.property_type[0];
  searchQueryObject['search_type'] = searchType;
  if (searchQueryObject.sale_type) {
    if (!(searchQueryObject.sale_type instanceof Array)) {
      searchQueryObject.sale_type = [searchQueryObject.sale_type];
    }
  }

  searchQueryObject = _Util2.default.searchObjectToCustomFormat(searchQueryObject);
  searchQueryObject['term'] = termDetails;
  for (var key in searchQueryObject) {
    if (termDetails.map(function (d) {
      return d.term;
    }).indexOf(key) >= 0) {
      delete searchQueryObject[key];
    }
  }

  if (searchQueryObject['property_subtype']) {
    var property_subtype = searchQueryObject['property_subtype'] instanceof Array ? searchQueryObject['property_subtype'] : [searchQueryObject['property_subtype']];
    searchQueryObject['property_subtype'] = propertySubTypes.filter(function (d) {
      return property_subtype.indexOf(d.slug) >= 0;
    });
  }

  return {
    availableSubTypes: (0, _get2.default)(state, 'availablePropertySubTypesForSearch.items'),
    errorMessage: state.errorMessage,
    query: (0, _get2.default)(state, 'searchResults.query', []),
    isFetching: (0, _get2.default)(state, 'searchResults.isFetching', []),
    displayedResults: (0, _get2.default)(state, 'searchResults.displayedResults', []),
    propertiesModalOpen: (0, _get2.default)(state, 'propertiesModal.open'),
    propertiesModalResultCountErrorMessage: (0, _get2.default)(state, 'propertiesModal.errorMessage'),
    propertiesModalResultCountIsFetching: (0, _get2.default)(state, 'propertiesModal.isFetching'),
    propertiesModalResultCount: (0, _get2.default)(state, 'propertiesModal.resultCount'),
    propertySubTypes: propertySubTypes,
    propertyTypeOptions: propertyTypeOptions,
    results: (0, _get2.default)(state, 'searchResults.searchResults', []),
    resultsTotal: (0, _get2.default)(state, 'searchResults.totalProps', 0),
    propertyOnPanel: state.singleProperty.propertyOnPanel,
    panelOnMapShown: state.singleProperty.panelOnMapShown,
    queryDefaults: queryDefaults,
    saleTypesPanelOpen: (0, _get2.default)(state, 'headerSearch.saleTypesPanelOpen', false),
    searchQueryParams: searchQueryObject,
    searchResultsErrorMessage: (0, _get2.default)(state, 'searchResults.errorMessage'),
    termDetails: termDetails,
    isMobile: (0, _get2.default)(state, 'viewport.isMobile', false)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  return {
    closeLocationModal: function closeLocationModal() {
      dispatch((0, _index.openLocationModal)(false));
    },

    doPropertiesModalSearch: function doPropertiesModalSearch(filters, queryDefaults) {
      var params = Object.assign({}, filters);
      dispatch((0, _index.requestPropertiesModalResultCount)());
      params = _Util2.default.enricSearchParamshWithDefaults(params, queryDefaults);
      _Api2.default.makeStandardPropertySearch(params, function (err, query, response) {
        if (err) {
          return dispatch((0, _index.receivePropertiesModalResultCountFetchingError)(err));
        }
        dispatch((0, _index.receivePropertiesModalResultCount)((0, _get2.default)(response, 'hits.total', null)));
      });
    },

    doSearchWithQuery: function doSearchWithQuery(query, append) {
      var url = _Api2.default.getPropertySearchRequestURL();
      dispatch((0, _index.requestSearchResultsPosts)(append));
      _Api2.default.search(url, query, function (err, response) {
        if (err) {
          return dispatch((0, _index.receiveSearchResultsPostsError)(err));
        }
        dispatch((0, _index.receiveSearchResultsPosts)(query, (0, _get2.default)(response, 'hits.hits', []), (0, _get2.default)(response, 'hits.total', 0), append));
      });
    },

    getAvailablePropertySubTypes: function getAvailablePropertySubTypes(filters, queryDefaults) {
      var params = Object.assign({}, filters);
      params.aggregations = _Api2.default.getPropertySubTypesAggregations();
      params = _Util2.default.enricSearchParamshWithDefaults(params, queryDefaults);
      params = (0, _omit2.default)(params, ['property_subtype']);
      dispatch((0, _index.requestAvailablePropertySubTypesForSearch)());
      _Api2.default.makeStandardPropertySearch(params, function (err, query, response) {
        if (err) {
          return dispatch((0, _index.receiveAvailablePropertySubTypesForSearchError)(err));
        }
        var availableSubTypes = (0, _get2.default)(response, 'aggregations.property_subtype_slugs.buckets', []).map(function (d) {
          return { key: d.key, count: d.doc_count };
        });
        dispatch((0, _index.receiveAvailablePropertySubTypesForSearch)(availableSubTypes));
      });
    },

    openPropertiesModal: function openPropertiesModal(open) {
      dispatch((0, _index.openPropertiesModal)(open));
    },

    openLocationModal: function openLocationModal() {
      dispatch((0, _index.openLocationModal)(true));
    },

    resetSearchResults: function resetSearchResults() {
      dispatch((0, _index.receiveSearchResultsPosts)({}, [], 0));
    },

    standardSearch: function standardSearch(p, defaults) {
      dispatch((0, _index.requestSearchResultsPosts)());
      var params = Object.assign({}, p);
      // geoCorrdinates
      if (p[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] && p[_lib.Lib.TOP_LEFT_URL_PREFIX]) {
        params.geoCoordinates = {
          bottomRight: [p[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][0], p[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][1]],
          topLeft: [p[_lib.Lib.TOP_LEFT_URL_PREFIX][0], p[_lib.Lib.TOP_LEFT_URL_PREFIX][1]]
        };
      }
      params = _Util2.default.enricSearchParamshWithDefaults(params, defaults);
      _Api2.default.makeStandardPropertySearch(params, function (err, query, response) {
        if (err) {
          return dispatch((0, _index.receiveSearchResultsPostsError)(err));
        }
        dispatch((0, _index.receiveSearchResultsPosts)(query, (0, _get2.default)(response, 'hits.hits', []), (0, _get2.default)(response, 'hits.total', 0), false));
      });
    },

    openUserPanel: function openUserPanel() {
      dispatch((0, _index.toggleUserPanel)(true));
    },

    togglePropertiesModalModeInLocationModal: function togglePropertiesModalModeInLocationModal(on) {
      dispatch((0, _index.togglePropertiesModalModeInLocationModal)(on));
    }
  };
};

var MapSearchResults = function (_Component) {
  _inherits(MapSearchResults, _Component);

  function MapSearchResults(props) {
    _classCallCheck(this, MapSearchResults);

    var _this = _possibleConstructorReturn(this, (MapSearchResults.__proto__ || Object.getPrototypeOf(MapSearchResults)).call(this, props));

    _this.dismissNotice = function () {
      _this.setState({ noticeDisplay: false });
    };

    _this.handleLoadMore = function () {
      var modifiedQuery = _this.props.query;
      modifiedQuery.from = _this.props.displayedResults.length;
      _this.props.doSearchWithQuery(modifiedQuery, true);
    };

    _this.applyQueryFilters = function (searchFilters, queryDefaults) {
      _this.props.standardSearch(searchFilters, queryDefaults);
    };

    _this.updateSelectedProperty = function (propertyId) {
      var filters = Object.assign({}, _this.props.searchQueryParams);
      filters['selected_property'] = propertyId;
      if (filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] && filters[_lib.Lib.TOP_LEFT_URL_PREFIX]) {
        filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] = { lat: filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][0], lon: filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][1] };
        filters[_lib.Lib.TOP_LEFT_URL_PREFIX] = { lat: filters[_lib.Lib.TOP_LEFT_URL_PREFIX][0], lon: filters[_lib.Lib.TOP_LEFT_URL_PREFIX][1] };
      }
      delete filters['search_type'];
      if (filters['property_subtype'] && filters['property_subtype'].every(function (d) {
        return d.slug;
      })) {
        filters['property_subtype'] = filters['property_subtype'].map(function (d) {
          return d.slug;
        });
      }
      filters = _Util2.default.customFormatToSearchObject(filters);
      var searchCollection = _Util2.default.searchObjectToCollection(filters);
      var searchURL = _Util2.default.createSearchURL('/search', searchCollection);
      _this.props.history.push(searchURL);
    };

    _this.updateURIGeoCoordinates = function (geoCoordinates) {
      var filters = Object.assign({}, _this.props.searchQueryParams);
      delete filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX];
      filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] = { lat: geoCoordinates['bottomRight']['lat'], lon: geoCoordinates['bottomRight']['lon'] };
      delete filters[_lib.Lib.TOP_LEFT_URL_PREFIX];
      filters[_lib.Lib.TOP_LEFT_URL_PREFIX] = { lat: geoCoordinates['topLeft']['lat'], lon: geoCoordinates['topLeft']['lon'] };
      delete filters['search_type'];
      if (filters['sale_type'] && (0, _isEqual2.default)(filters['sale_type'].sort(), ['rent', 'sale'].sort())) {
        delete filters['sale_type'];
      }
      if (filters['property_subtype'] && filters['property_subtype'].every(function (d) {
        return d.slug;
      })) {
        filters['property_subtype'] = filters['property_subtype'].map(function (d) {
          return d.slug;
        });
      }
      filters = _Util2.default.customFormatToSearchObject(filters);
      var searchCollection = _Util2.default.searchObjectToCollection(filters);
      var searchURL = _Util2.default.createSearchURL('/search', searchCollection);
      _this.props.history.push(searchURL);
    };

    _this.state = {
      mapDisplay: true,
      noticeDisplay: true
    };
    _this.displayedProperties = [];
    return _this;
  }

  _createClass(MapSearchResults, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var filters = this.props.searchQueryParams;
      this.applyQueryFilters(filters, this.props.queryDefaults);
      if (this.props.displayedResults.length > 0 && !filters.selected_property && this.props.isMobile) {
        var firstPropertyMLSID = (0, _get2.default)(this.props.displayedResults, '[0]._source.post_meta.rets_mls_number[0]', null);
        if (!firstPropertyMLSID) {
          console.log('first property MLS id is missing');
        } else {
          this.updateSelectedProperty(firstPropertyMLSID);
        }
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var filters = nextProps.searchQueryParams;

      // Update url without selected property for re-rendering listings list if listing was unselected
      if ((0, _get2.default)(this.props, 'panelOnMapShown', false) && !(0, _get2.default)(nextProps, 'panelOnMapShown', false)) {

        if (filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] && filters[_lib.Lib.TOP_LEFT_URL_PREFIX]) {
          filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX] = { lat: filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][0], lon: filters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX][1] };
          filters[_lib.Lib.TOP_LEFT_URL_PREFIX] = { lat: filters[_lib.Lib.TOP_LEFT_URL_PREFIX][0], lon: filters[_lib.Lib.TOP_LEFT_URL_PREFIX][1] };
        }
        if (filters['property_subtype'] && filters['property_subtype'].every(function (d) {
          return d.slug;
        })) {
          filters['property_subtype'] = filters['property_subtype'].map(function (d) {
            return d.slug;
          });
        }

        delete filters['selected_property'];

        filters = _Util2.default.customFormatToSearchObject(filters);
        if ((0, _get2.default)(filters, 'search', null)) {
          delete filters['search'];
        }
        var searchCollection = _Util2.default.searchObjectToCollection(filters);
        var searchURL = _Util2.default.createSearchURL('/search', searchCollection);
        this.props.history.push(searchURL);
      }

      var anyFilterChange = !(0, _isEqual2.default)((0, _omit2.default)(nextProps.searchQueryParams, ['selected_property']), (0, _omit2.default)(this.props.searchQueryParams, ['selected_property']));
      var anyDefaultQueryChange = !(0, _isEqual2.default)(nextProps.queryDefaults, this.props.queryDefaults);
      if (anyFilterChange || anyDefaultQueryChange) {
        this.applyQueryFilters(nextProps.searchQueryParams, nextProps.queryDefaults);
      }
      if (nextProps.searchQueryParams.search_type !== this.props.searchQueryParams.search_type && this.listingSidebar) {
        // this fixes the issue where changing "search_type" would keep the scrolling of the previous search type
        var listingSidebar = this.listingSidebar;
        listingSidebar.scrollTop = 0;
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.resetSearchResults();
    }
  }, {
    key: 'clickMobileSwitcherHandler',
    value: function clickMobileSwitcherHandler(mapDisplay) {
      this.setState({
        mapDisplay: mapDisplay
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          availableSubTypes = _props.availableSubTypes,
          errorMessage = _props.errorMessage,
          displayedResults = _props.displayedResults,
          doPropertiesModalSearch = _props.doPropertiesModalSearch,
          _getAvailablePropertySubTypes = _props.getAvailablePropertySubTypes,
          history = _props.history,
          isFetching = _props.isFetching,
          location = _props.location,
          openPropertiesModal = _props.openPropertiesModal,
          propertiesModalOpen = _props.propertiesModalOpen,
          propertiesModalResultCount = _props.propertiesModalResultCount,
          propertiesModalResultCountErrorMessage = _props.propertiesModalResultCountErrorMessage,
          propertiesModalResultCountIsFetching = _props.propertiesModalResultCountIsFetching,
          propertySubTypes = _props.propertySubTypes,
          propertyTypeOptions = _props.propertyTypeOptions,
          queryDefaults = _props.queryDefaults,
          results = _props.results,
          resultsTotal = _props.resultsTotal,
          searchQueryParams = _props.searchQueryParams,
          termDetails = _props.termDetails,
          isMobile = _props.isMobile;
      // create a clone because we might change it in the if statement

      var searchFilters = Object.assign({}, searchQueryParams);
      if (termDetails.length) {
        // termDetails has the display information as well
        searchFilters.term = termDetails;
      }
      var captionElement = this.state.noticeDisplay && displayedResults.length > 0 ? _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + "caption" },
        _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + "caption-content" },
          'Showing ',
          displayedResults.length,
          ' of ',
          resultsTotal,
          ' listings. Browse to load more or adjust filters.'
        ),
        _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + "caption-dismiss", onClick: this.dismissNotice },
          'x'
        )
      ) : null;

      var mobileNavigatorElement = _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'mobile-bottom-navbar fixed-bottom hidden-sm-up d-flex' },
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'mobile-bottom-navbar-left' },
          _react2.default.createElement(
            'span',
            { onClick: function onClick() {
                return openPropertiesModal(true);
              } },
            'Filter'
          ),
          _react2.default.createElement(
            'span',
            { className: 'separator' },
            '|'
          ),
          _react2.default.createElement(
            'span',
            { onClick: function onClick() {
                return _this2.clickMobileSwitcherHandler.bind(_this2)(!_this2.state.mapDisplay);
              } },
            this.state.mapDisplay ? 'List' : 'Map'
          )
        ),
        _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'mobile-bottom-navbar-right' })
      );

      var mapElement = _react2.default.createElement(_Map2.default, {
        currentGeoBounds: searchFilters.geotl && searchFilters.geobr ? _Util2.default.elasticsearchGeoFormatToGoogle({ bottomRight: searchFilters[_lib.Lib.BOTTOM_RIGHT_URL_PREFIX], topLeft: searchFilters[_lib.Lib.TOP_LEFT_URL_PREFIX] }) : null,
        historyPush: history.push,
        location: this.props.location,
        properties: displayedResults,
        searchByCoordinates: this.updateURIGeoCoordinates,
        selectedProperty: searchFilters.selected_property,
        updateSelectedProperty: this.updateSelectedProperty
      });

      var sliderElement = _react2.default.createElement(_CarouselOnMap2.default, {
        properties: displayedResults,
        selectedProperty: searchFilters.selected_property,
        onChangeSlide: this.updateSelectedProperty,
        isFetching: isFetching,
        onLoadMore: this.handleLoadMore
      });

      var propertyPanelElement = _react2.default.createElement(_PropertyPanelOnMap2.default, {
        agents: this.props.agents,
        isVisible: this.props.panelOnMapShown,
        property: this.props.propertyOnPanel,
        historyPush: history.push
      });
      var elementToShow = _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-map' },
        this.props.searchResultsErrorMessage && _react2.default.createElement(_ErrorMessageModal2.default, { errorMessage: this.props.searchResultsErrorMessage }),
        _react2.default.createElement(_PropertiesModal2.default, {
          availableSubTypes: availableSubTypes,
          closeLocationModal: this.props.closeLocationModal,
          closeModal: function closeModal() {
            return openPropertiesModal(false);
          },
          doSearch: function doSearch(filters) {
            doPropertiesModalSearch(filters, queryDefaults);
          },
          errorMessage: propertiesModalResultCountErrorMessage,
          getAvailablePropertySubTypes: function getAvailablePropertySubTypes(filters) {
            _getAvailablePropertySubTypes(filters, queryDefaults);
          },
          historyPush: history.push,
          open: propertiesModalOpen,
          openLocationModal: this.props.openLocationModal,
          propertySubTypes: propertySubTypes,
          propertyTypeOptions: propertyTypeOptions,
          resultCount: propertiesModalResultCount,
          resultCountButtonLoading: propertiesModalResultCountIsFetching,
          searchFilters: (0, _omit2.default)(searchFilters, ['geoCoordinates', 'selected_property']),
          turnOffPropertiesModalModeInLocationModal: function turnOffPropertiesModalModeInLocationModal() {
            return _this2.props.togglePropertiesModalModeInLocationModal(false);
          },
          turnOnPropertiesModalModeInLocationModal: function turnOnPropertiesModalModeInLocationModal() {
            return _this2.props.togglePropertiesModalModeInLocationModal(true);
          }
        }),
        _react2.default.createElement(
          'section',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-map-section row no-gutters h-100' },
          (!isMobile || !this.state.mapDisplay) && _react2.default.createElement(
            'div',
            { className: 'col-sm-6 h-100 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'listing-sidebar', ref: function ref(r) {
                return _this2.listingSidebar = r;
              } },
            isFetching ? _react2.default.createElement(_SearchFilterDescriptionTextPlaceholder2.default, null) : _react2.default.createElement(_SearchFilterDescriptionText2.default, {
              data: {
                acres: searchFilters.acres,
                bathrooms: searchFilters.bathrooms,
                bedrooms: searchFilters.bedrooms,
                filters: searchFilters,
                historyPush: history.push,
                price: searchFilters.price,
                saleType: searchFilters.sale_type,
                sqft: searchFilters.sqft,
                subtypes: searchFilters.property_subtype,
                terms: searchFilters.term,
                total: this.props.resultsTotal,
                type: searchFilters.property_type
              }
            }),
            errorMessage ? _react2.default.createElement(_ErrorMessage2.default, { message: errorMessage }) : _react2.default.createElement(_SearchResultListing2.default, {
              isFetching: isFetching,
              properties: displayedResults,
              onLoadMore: this.handleLoadMore,
              onUpdateSelectedProperty: this.updateSelectedProperty,
              selectedProperty: searchFilters.selected_property,
              total: this.props.resultsTotal,
              isMobile: isMobile
            })
          ),
          !isMobile && _react2.default.createElement(
            'div',
            { className: 'col-sm-6 h-100 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'listing-map ' + (!this.state.mapDisplay ? 'hidden-xs-down' : '') },
            captionElement,
            propertyPanelElement,
            mapElement
          ),
          isMobile && _react2.default.createElement(
            'div',
            { className: 'col-sm-6 h-100 ' + _lib.Lib.THEME_CLASSES_PREFIX + 'listing-map' },
            captionElement,
            mapElement,
            sliderElement
          ),
          isMobile && mobileNavigatorElement
        )
      );

      return _react2.default.createElement(
        'div',
        { className: 'h-100 d-flex flex-column' },
        _react2.default.createElement(
          'section',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'toolbar ' + _lib.Lib.THEME_CLASSES_PREFIX + 'header-search' },
          _react2.default.createElement(_HeaderSearch2.default, {
            historyPush: history.push,
            openUserPanel: this.props.openUserPanel,
            searchFilters: searchFilters,
            termDetails: this.props.termDetails
          })
        ),
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-map-container h-100' },
          elementToShow
        )
      );
    }
  }]);

  return MapSearchResults;
}(_react.Component);

MapSearchResults.propTypes = {
  availableSubTypes: _propTypes2.default.array,
  doPropertiesModalSearch: _propTypes2.default.func.isRequired,
  doSearchWithQuery: _propTypes2.default.func.isRequired,
  history: _propTypes2.default.object.isRequired,
  isFetching: _propTypes2.default.bool.isRequired,
  location: _propTypes2.default.object,
  params: _propTypes2.default.object,
  propertiesModalOpen: _propTypes2.default.bool.isRequired,
  propertiesModalResultCount: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  propertiesModalResultCountErrorMessage: _propTypes2.default.string,
  propertiesModalResultCountIsFetching: _propTypes2.default.bool.isRequired,
  propertySubTypes: _propTypes2.default.array.isRequired,
  queryDefaults: _propTypes2.default.object.isRequired,
  resetSearchResults: _propTypes2.default.func.isRequired,
  results: _propTypes2.default.array.isRequired,
  searchResultsErrorMessage: _propTypes2.default.string,
  searchQueryParams: _propTypes2.default.object.isRequired,
  termDetails: _propTypes2.default.array.isRequired,
  openUserPanel: _propTypes2.default.func.isRequired
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapSearchResults);

/***/ }),
/* 1338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(41);

var _SearchFilters = __webpack_require__(1163);

var _SearchFilters2 = _interopRequireDefault(_SearchFilters);

var _lib = __webpack_require__(3);

var _SaleTypeHeaderSelection = __webpack_require__(1157);

var _SaleTypeHeaderSelection2 = _interopRequireDefault(_SaleTypeHeaderSelection);

var _index = __webpack_require__(52);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _NavigationIcons = __webpack_require__(1183);

var _NavigationIcons2 = _interopRequireDefault(_NavigationIcons);

var _UserPanelIcon = __webpack_require__(1120);

var _UserPanelIcon2 = _interopRequireDefault(_UserPanelIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, ownProps) {
  return {
    propertyTypeOptions: (0, _get2.default)(state, 'propertyTypeOptions.options'),
    saleTypesPanelOpen: (0, _get2.default)(state, 'headerSearch.saleTypesPanelOpen', false)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
  return {
    doOpenSaleTypesPanel: function doOpenSaleTypesPanel(open) {
      dispatch((0, _index.openSaleTypesPanel)(open));
    }
  };
};

var HeaderSearch = function (_Component) {
  _inherits(HeaderSearch, _Component);

  function HeaderSearch(props) {
    _classCallCheck(this, HeaderSearch);

    var _this = _possibleConstructorReturn(this, (HeaderSearch.__proto__ || Object.getPrototypeOf(HeaderSearch)).call(this, props));

    _this.closeSaleTypePanel = function () {
      _this.props.doOpenSaleTypesPanel(false);
    };

    _this.handleSaleTypeClick = function (event) {
      event.preventDefault();
      _this.props.doOpenSaleTypesPanel(!_this.props.saleTypesPanelOpen);
    };

    return _this;
  }

  _createClass(HeaderSearch, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var shouldUpdate = !(0, _isEqual2.default)(nextProps.propertyTypeOptions, this.props.propertyTypeOptions) || !(0, _isEqual2.default)(nextProps.searchFilters, this.props.searchFilters) || nextProps.saleTypesPanelOpen !== this.props.saleTypesPanelOpen;
      return shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          historyPush = _props.historyPush,
          propertyTypeOptions = _props.propertyTypeOptions,
          searchFilters = _props.searchFilters,
          saleTypesPanelOpen = _props.saleTypesPanelOpen;


      var searchType = searchFilters['search_type'];
      var containerClass = _lib.Lib.THEME_CLASSES_PREFIX + 'header-search-container';
      if (saleTypesPanelOpen) {
        containerClass += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'with-sale-types-panel-open';
      }
      return _react2.default.createElement(
        'div',
        { className: containerClass },
        _react2.default.createElement(_SaleTypeHeaderSelection2.default, {
          currentURL: window.location.href,
          closePanel: this.closeSaleTypePanel,
          termFilters: searchFilters.term,
          historyPush: historyPush,
          propertyTypeOptions: this.props.propertyTypeOptions,
          open: this.props.saleTypesPanelOpen
        }),
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'header-search-navigation d-flex align-items-center' },
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'navigation-menu-left hidden-md-up px-2' },
            _react2.default.createElement(_UserPanelIcon2.default, { openUserPanel: this.props.openUserPanel })
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'logo' },
            (0, _get2.default)(bundle, 'logos.square_logo', null) ? _react2.default.createElement(
              'a',
              { href: (0, _get2.default)(bundle, 'site_url', ''), onClick: function onClick(eve) {
                  eve.preventDefault();
                  _this2.props.historyPush('');
                }, title: (0, _get2.default)(bundle, 'site_name', '') },
              _react2.default.createElement('img', { src: bundle.logos.square_logo, alt: (0, _get2.default)(bundle, 'site_name', ''),
                className: _lib.Lib.THEME_CLASSES_PREFIX + 'logo ' + _lib.Lib.THEME_CLASSES_PREFIX + 'square-logo' })
            ) : null
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'drop-nav hidden-sm-down', onClick: this.handleSaleTypeClick },
            _react2.default.createElement(
              'a',
              { href: '#' },
              searchType,
              this.props.saleTypesPanelOpen ? _react2.default.createElement('i', { className: 'fa fa-caret-down up ml-2' }) : _react2.default.createElement('i', { className: 'fa fa-caret-down ml-2' })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-box-wrap' },
            _react2.default.createElement(_SearchFilters2.default, { filters: searchFilters, historyPush: historyPush, propertyTypeOptions: propertyTypeOptions })
          ),
          _react2.default.createElement(
            'div',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'top-nav-bar d-flex align-items-center hidden-sm-down' },
            _react2.default.createElement(_NavigationIcons2.default, { openUserPanel: this.props.openUserPanel })
          )
        )
      );
    }
  }]);

  return HeaderSearch;
}(_react.Component);

HeaderSearch.propTypes = {
  doOpenSaleTypesPanel: _propTypes2.default.func.isRequired,
  historyPush: _propTypes2.default.func.isRequired,
  propertyTypeOptions: _propTypes2.default.array.isRequired,
  saleTypesPanelOpen: _propTypes2.default.bool.isRequired,
  searchFilters: _propTypes2.default.object.isRequired,
  openUserPanel: _propTypes2.default.func.isRequired
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HeaderSearch);

/***/ }),
/* 1339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultIcon = {
  url: bundle.static_images_url + 'oval-3-25.png'
};

var selectedIcon = {
  url: bundle.static_images_url + 'oval-selected-3-25.png'
};

var defaultZoom = 9;

var isMobile = window.innerWidth < _lib.Lib.MOBILE_WIDTH;

var Map = function (_Component) {
  _inherits(Map, _Component);

  function Map(props) {
    _classCallCheck(this, Map);

    var _this = _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).call(this, props));

    _this.onMapChange = function () {
      // only trigger the Geo change at a certain zoom level and exclude initial auto zoom to prevent ES requests duplicate
      if (_this.map.getZoom() >= _lib.Lib.MAP_CHANGE_ZOOM_LIMIT || _this.props.properties.length === 0 || _this.updatingProperties) {
        return;
      }
      var bounds = _this.map.getBounds();
      var ne = bounds.getNorthEast();
      var sw = bounds.getSouthWest();
      _this.props.searchByCoordinates(_Util2.default.googleGeoFormatToElasticsearch({
        ne: {
          lat: ne.lat(),
          lon: ne.lng()
        },
        sw: {
          lat: sw.lat(),
          lon: sw.lng()
        }
      }));
      // enable drag mode to distinguish between initial load and dragging in componentWillReceiveProps
      _this.setState({
        dragMode: true
      });
    };

    _this.bounds;
    _this.map;
    _this.markers = [];
    _this.state = {
      dragMode: false
    };

    return _this;
  }

  _createClass(Map, [{
    key: 'calculateGeoRectangleCenterPoint',
    value: function calculateGeoRectangleCenterPoint(neLat, neLon, swLat, swLon) {
      var calculateCenter = new google.maps.LatLngBounds({
        lat: +swLat,
        lng: +swLon
      }, {
        lat: +neLat,
        lng: +neLon
      }).getCenter();
      return {
        lat: calculateCenter.lat(),
        lng: calculateCenter.lng()
      };
    }
  }, {
    key: 'clearBounds',
    value: function clearBounds() {
      this.bounds = new google.maps.LatLngBounds();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (!(0, _isEqual2.default)(nextProps.properties, this.props.properties)) {
        this.updatingProperties = true;
        if (!this.state.dragMode) {
          var coordinates = this.getInitialCoordinates(null, nextProps.properties);
          this.setMapCoordinates(coordinates);
        }
        this.clearMarkers();
        this.clearBounds();
        this.setPropertyMarkers(nextProps.properties);
        if (!this.state.dragMode) {
          this.map.fitBounds(this.bounds);
          if (this.map.getZoom() < defaultZoom) {
            this.map.setZoom(defaultZoom);
          }
        }
        this.updatingProperties = false;
      }
      var condition = !this.markers.filter(function (m) {
        return m.selected;
      }).length || nextProps.selectedProperty !== this.markers.filter(function (m) {
        return m.selected;
      })[0].propertyId;
      if (condition) {
        this.deselectMarkers(this.markers);
        this.selectMarker(this.markers, nextProps.selectedProperty);
      }
      this.setState({
        dragMode: false
      });
    }
  }, {
    key: 'clearMarkers',
    value: function clearMarkers() {
      this.markers.forEach(function (m) {
        m.setMap(null);
      });
      this.markers = [];
    }
  }, {
    key: 'getInitialCoordinates',
    value: function getInitialCoordinates(currentGeoBounds, properties) {
      // calculate the initial coordinates based on geo bounds from the URL or the properties
      var centerPoint = void 0;
      if (currentGeoBounds) {
        centerPoint = this.calculateGeoRectangleCenterPoint(currentGeoBounds.ne.lat, currentGeoBounds.ne.lon, currentGeoBounds.sw.lat, currentGeoBounds.sw.Lon);
      } else if (properties && properties.length) {
        centerPoint = {
          lat: properties.length ? +properties[0]._source.post_meta.wpp_location_pin[0] : 0,
          lng: properties.length ? +properties[0]._source.post_meta.wpp_location_pin[1] : 0
        };
      } else {
        centerPoint = {
          lat: _lib.Lib.DEFAULT_MAP_COORDINATES.lat,
          lng: _lib.Lib.DEFAULT_MAP_COORDINATES.lng
        };
      }

      return centerPoint;
    }
  }, {
    key: 'setMapCoordinates',
    value: function setMapCoordinates(coordinates) {
      if (!this.map) {
        this.map = new window.google.maps.Map(this.mapElement, {
          center: coordinates,
          mapTypeControlOptions: { mapTypeIds: [] },
          scrollwheel: false,
          streetViewControl: false,
          zoom: defaultZoom,
          zoomControl: isMobile === false
        });
      } else {
        this.map.setCenter(new google.maps.LatLng(coordinates.lat, coordinates.lng));
      }
    }
  }, {
    key: 'setPropertyMarkers',
    value: function setPropertyMarkers(properties) {
      var _this2 = this;

      properties.forEach(function (p) {
        var loc = new window.google.maps.LatLng(p._source.wpp_location_pin.lat, p._source.wpp_location_pin.lon);
        var marker = new window.google.maps.Marker({
          icon: defaultIcon,
          position: loc,
          map: _this2.map
        });
        if (!(0, _get2.default)(p, '_source.post_meta.rets_mls_number[0]', null)) {
          console.log('mls reference missing from the data, property selection on at least some of the items wont work as expected');
        }
        marker.propertyId = (0, _get2.default)(p, '_source.post_meta.rets_mls_number[0]', null);
        marker.selected = false;
        marker.addListener('click', function () {
          _this2.props.updateSelectedProperty(marker.propertyId);
        });
        _this2.markers.push(marker);
        _this2.bounds.extend(loc);
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var currentGeoBounds = this.props.currentGeoBounds;
      // no properties to pass into `getInitialCoordinates`

      var coordinates = this.getInitialCoordinates(currentGeoBounds, null);
      this.setMapCoordinates(coordinates);
      // this.setPropertyMarkers(this.props.properties);
      this.map.addListener('dragend', this.onMapChange);
      this.map.addListener('zoom_changed', this.onMapChange);
    }
  }, {
    key: 'deselectMarkers',
    value: function deselectMarkers(markers) {
      var selectedMarkers = markers.filter(function (m) {
        return m.selected;
      });
      if (selectedMarkers.length) {
        selectedMarkers.forEach(function (m) {
          m.selected = false;
          m.setIcon(defaultIcon);
        });
      }
    }
  }, {
    key: 'selectMarker',
    value: function selectMarker(markers, selectedProperty) {
      // Remove all current selected markers
      var selectedMarker = markers.filter(function (m) {
        return m.propertyId === selectedProperty;
      });
      if (selectedMarker.length) {
        selectedMarker[0].setIcon(selectedIcon);
        selectedMarker[0].selected = true;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement('div', { id: _lib.Lib.THEME_CLASSES_PREFIX + "Map", ref: function ref(r) {
          return _this3.mapElement = r;
        } });
    }
  }]);

  return Map;
}(_react.Component);

Map.propTypes = {
  currentGeoBounds: _propTypes2.default.object,
  historyPush: _propTypes2.default.func.isRequired,
  searchByCoordinates: _propTypes2.default.func.isRequired,
  properties: _propTypes2.default.array.isRequired
};
exports.default = Map;
;

/***/ }),
/* 1340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(61);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactWaypoint = __webpack_require__(1341);

var _reactWaypoint2 = _interopRequireDefault(_reactWaypoint);

var _lib = __webpack_require__(3);

var _htmlHelper = __webpack_require__(1083);

var _htmlHelper2 = _interopRequireDefault(_htmlHelper);

var _PropertyCardList = __webpack_require__(1356);

var _PropertyCardList2 = _interopRequireDefault(_PropertyCardList);

var _SearchResultListingPlaceholder = __webpack_require__(1329);

var _SearchResultListingPlaceholder2 = _interopRequireDefault(_SearchResultListingPlaceholder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchResultListing = function (_Component) {
  _inherits(SearchResultListing, _Component);

  function SearchResultListing() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SearchResultListing);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SearchResultListing.__proto__ || Object.getPrototypeOf(SearchResultListing)).call.apply(_ref, [this].concat(args))), _this), _this.setLoaderDOM = function (d) {
      _this.loaderDOM = d;
    }, _this.handleLoadMore = function (e) {
      if (typeof e.preventDefault === 'function') {
        e.preventDefault();
      }
      _this.props.onLoadMore();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SearchResultListing, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      // Scroll a bit down to make 2 loading cards fully visible
      if (this.props.isFetching && this.loaderDOM) {
        var container = document.querySelector('.' + _lib.Lib.THEME_CLASSES_PREFIX + 'listing-sidebar');
        var node = (0, _reactDom.findDOMNode)(this.loaderDOM);
        _htmlHelper2.default.scrollToElement(container, node, 0);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          properties = _props.properties,
          selectedProperty = _props.selectedProperty,
          total = _props.total,
          isFetching = _props.isFetching,
          isMobile = _props.isMobile;


      var allowPagination = properties.length < total;

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'listing-wrap-container' },
        _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'listing-wrap' },
          _react2.default.createElement(_PropertyCardList2.default, {
            properties: properties,
            selectedProperty: selectedProperty,
            onUpdateSelectedProperty: this.props.onUpdateSelectedProperty
          }),
          _react2.default.createElement(_SearchResultListingPlaceholder2.default, {
            isFetching: isFetching,
            isMobile: isMobile,
            onInit: this.setLoaderDOM
          })
        ),
        allowPagination && !isFetching && (isMobile ? _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-result-container' },
          _react2.default.createElement(_reactWaypoint2.default, { onEnter: this.handleLoadMore })
        ) : _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'search-result-container' },
          _react2.default.createElement(
            'a',
            { className: 'btn', onClick: this.handleLoadMore },
            'Load More'
          ),
          _react2.default.createElement(
            'span',
            null,
            properties.length + ' of ' + total + ' '
          )
        ))
      );
    }
  }]);

  return SearchResultListing;
}(_react.Component);

SearchResultListing.propTypes = {
  properties: _propTypes2.default.array.isRequired,
  onLoadMore: _propTypes2.default.func.isRequired,
  total: _propTypes2.default.number,
  isMobile: _propTypes2.default.bool.isRequired,
  isFetching: _propTypes2.default.bool.isRequired
};
exports.default = SearchResultListing;

/***/ }),
/* 1341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _consolidatedEvents = __webpack_require__(1342);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _computeOffsetPixels = __webpack_require__(1348);

var _computeOffsetPixels2 = _interopRequireDefault(_computeOffsetPixels);

var _constants = __webpack_require__(1328);

var _constants2 = _interopRequireDefault(_constants);

var _debugLog = __webpack_require__(1351);

var _debugLog2 = _interopRequireDefault(_debugLog);

var _ensureChildrenIsSingleDOMElement = __webpack_require__(1352);

var _ensureChildrenIsSingleDOMElement2 = _interopRequireDefault(_ensureChildrenIsSingleDOMElement);

var _getCurrentPosition = __webpack_require__(1354);

var _getCurrentPosition2 = _interopRequireDefault(_getCurrentPosition);

var _resolveScrollableAncestorProp = __webpack_require__(1355);

var _resolveScrollableAncestorProp2 = _interopRequireDefault(_resolveScrollableAncestorProp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultProps = {
  topOffset: '0px',
  bottomOffset: '0px',
  horizontal: false,
  onEnter: function onEnter() {},
  onLeave: function onLeave() {},
  onPositionChange: function onPositionChange() {},

  fireOnRapidScroll: true
};

/**
 * Calls a function when you scroll to the element.
 */

var Waypoint = function (_React$Component) {
  _inherits(Waypoint, _React$Component);

  function Waypoint(props) {
    _classCallCheck(this, Waypoint);

    var _this = _possibleConstructorReturn(this, (Waypoint.__proto__ || Object.getPrototypeOf(Waypoint)).call(this, props));

    _this.refElement = function (e) {
      return _this._ref = e;
    };
    return _this;
  }

  _createClass(Waypoint, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      (0, _ensureChildrenIsSingleDOMElement2.default)(this.props.children);

      if (this.props.scrollableParent) {
        // eslint-disable-line react/prop-types
        throw new Error('The `scrollableParent` prop has changed name to `scrollableAncestor`.');
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (!Waypoint.getWindow()) {
        return;
      }

      this._handleScroll = this._handleScroll.bind(this);
      this.scrollableAncestor = this._findScrollableAncestor();

      if ("development" !== 'production' && this.props.debug) {
        (0, _debugLog2.default)('scrollableAncestor', this.scrollableAncestor);
      }

      this.scrollEventListenerHandle = (0, _consolidatedEvents.addEventListener)(this.scrollableAncestor, 'scroll', this._handleScroll, { passive: true });

      this.resizeEventListenerHandle = (0, _consolidatedEvents.addEventListener)(window, 'resize', this._handleScroll, { passive: true });

      // this._ref may occasionally not be set at this time. To help ensure that
      // this works smoothly, we want to delay the initial execution until the
      // next tick.
      this.initialTimeout = setTimeout(function () {
        _this2.initialTimeout = null;
        _this2._handleScroll(null);
      }, 0);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      (0, _ensureChildrenIsSingleDOMElement2.default)(nextProps.children);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (!Waypoint.getWindow()) {
        return;
      }

      // The element may have moved.
      this._handleScroll(null);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (!Waypoint.getWindow()) {
        return;
      }

      (0, _consolidatedEvents.removeEventListener)(this.scrollEventListenerHandle);
      (0, _consolidatedEvents.removeEventListener)(this.resizeEventListenerHandle);

      if (this.initialTimeout) {
        clearTimeout(this.initialTimeout);
      }
    }

    /**
     * Traverses up the DOM to find an ancestor container which has an overflow
     * style that allows for scrolling.
     *
     * @return {Object} the closest ancestor element with an overflow style that
     *   allows for scrolling. If none is found, the `window` object is returned
     *   as a fallback.
     */

  }, {
    key: '_findScrollableAncestor',
    value: function _findScrollableAncestor() {
      var _props = this.props,
          horizontal = _props.horizontal,
          scrollableAncestor = _props.scrollableAncestor;


      if (scrollableAncestor) {
        return (0, _resolveScrollableAncestorProp2.default)(scrollableAncestor);
      }

      var node = this._ref;

      while (node.parentNode) {
        node = node.parentNode;

        if (node === document) {
          // This particular node does not have a computed style.
          continue;
        }

        if (node === document.documentElement) {
          // This particular node does not have a scroll bar, it uses the window.
          continue;
        }

        var style = window.getComputedStyle(node);
        var overflowDirec = horizontal ? style.getPropertyValue('overflow-x') : style.getPropertyValue('overflow-y');
        var overflow = overflowDirec || style.getPropertyValue('overflow');

        if (overflow === 'auto' || overflow === 'scroll') {
          return node;
        }
      }

      // A scrollable ancestor element was not found, which means that we need to
      // do stuff on window.
      return window;
    }

    /**
     * @param {Object} event the native scroll event coming from the scrollable
     *   ancestor, or resize event coming from the window. Will be undefined if
     *   called by a React lifecyle method
     */

  }, {
    key: '_handleScroll',
    value: function _handleScroll(event) {
      if (!this._ref) {
        // There's a chance we end up here after the component has been unmounted.
        return;
      }

      var bounds = this._getBounds();
      var currentPosition = (0, _getCurrentPosition2.default)(bounds);
      var previousPosition = this._previousPosition;

      if ("development" !== 'production' && this.props.debug) {
        (0, _debugLog2.default)('currentPosition', currentPosition);
        (0, _debugLog2.default)('previousPosition', previousPosition);
      }

      // Save previous position as early as possible to prevent cycles
      this._previousPosition = currentPosition;

      if (previousPosition === currentPosition) {
        // No change since last trigger
        return;
      }

      var callbackArg = {
        currentPosition: currentPosition,
        previousPosition: previousPosition,
        event: event,
        waypointTop: bounds.waypointTop,
        waypointBottom: bounds.waypointBottom,
        viewportTop: bounds.viewportTop,
        viewportBottom: bounds.viewportBottom
      };
      this.props.onPositionChange.call(this, callbackArg);

      if (currentPosition === _constants2.default.inside) {
        this.props.onEnter.call(this, callbackArg);
      } else if (previousPosition === _constants2.default.inside) {
        this.props.onLeave.call(this, callbackArg);
      }

      var isRapidScrollDown = previousPosition === _constants2.default.below && currentPosition === _constants2.default.above;
      var isRapidScrollUp = previousPosition === _constants2.default.above && currentPosition === _constants2.default.below;

      if (this.props.fireOnRapidScroll && (isRapidScrollDown || isRapidScrollUp)) {
        // If the scroll event isn't fired often enough to occur while the
        // waypoint was visible, we trigger both callbacks anyway.
        this.props.onEnter.call(this, {
          currentPosition: _constants2.default.inside,
          previousPosition: previousPosition,
          event: event,
          waypointTop: bounds.waypointTop,
          waypointBottom: bounds.waypointBottom,
          viewportTop: bounds.viewportTop,
          viewportBottom: bounds.viewportBottom
        });
        this.props.onLeave.call(this, {
          currentPosition: currentPosition,
          previousPosition: _constants2.default.inside,
          event: event,
          waypointTop: bounds.waypointTop,
          waypointBottom: bounds.waypointBottom,
          viewportTop: bounds.viewportTop,
          viewportBottom: bounds.viewportBottom
        });
      }
    }
  }, {
    key: '_getBounds',
    value: function _getBounds() {
      var horizontal = this.props.horizontal;

      var _ref$getBoundingClien = this._ref.getBoundingClientRect(),
          left = _ref$getBoundingClien.left,
          top = _ref$getBoundingClien.top,
          right = _ref$getBoundingClien.right,
          bottom = _ref$getBoundingClien.bottom;

      var waypointTop = horizontal ? left : top;
      var waypointBottom = horizontal ? right : bottom;

      var contextHeight = void 0;
      var contextScrollTop = void 0;
      if (this.scrollableAncestor === window) {
        contextHeight = horizontal ? window.innerWidth : window.innerHeight;
        contextScrollTop = 0;
      } else {
        contextHeight = horizontal ? this.scrollableAncestor.offsetWidth : this.scrollableAncestor.offsetHeight;
        contextScrollTop = horizontal ? this.scrollableAncestor.getBoundingClientRect().left : this.scrollableAncestor.getBoundingClientRect().top;
      }

      if ("development" !== 'production' && this.props.debug) {
        (0, _debugLog2.default)('waypoint top', waypointTop);
        (0, _debugLog2.default)('waypoint bottom', waypointBottom);
        (0, _debugLog2.default)('scrollableAncestor height', contextHeight);
        (0, _debugLog2.default)('scrollableAncestor scrollTop', contextScrollTop);
      }

      var _props2 = this.props,
          bottomOffset = _props2.bottomOffset,
          topOffset = _props2.topOffset;

      var topOffsetPx = (0, _computeOffsetPixels2.default)(topOffset, contextHeight);
      var bottomOffsetPx = (0, _computeOffsetPixels2.default)(bottomOffset, contextHeight);
      var contextBottom = contextScrollTop + contextHeight;

      return {
        waypointTop: waypointTop,
        waypointBottom: waypointBottom,
        viewportTop: contextScrollTop + topOffsetPx,
        viewportBottom: contextBottom - bottomOffsetPx
      };
    }

    /**
     * @return {Object}
     */

  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var children = this.props.children;


      if (!children) {
        // We need an element that we can locate in the DOM to determine where it is
        // rendered relative to the top of its context.
        return _react2.default.createElement('span', { ref: this.refElement, style: { fontSize: 0 } });
      }

      var ref = function ref(node) {
        _this3.refElement(node);
        if (children.ref) {
          children.ref(node);
        }
      };

      return _react2.default.cloneElement(children, { ref: ref });
    }
  }]);

  return Waypoint;
}(_react2.default.Component);

exports.default = Waypoint;


Waypoint.propTypes = {
  children: _react.PropTypes.element,
  debug: _react.PropTypes.bool,
  onEnter: _react.PropTypes.func,
  onLeave: _react.PropTypes.func,
  onPositionChange: _react.PropTypes.func,
  fireOnRapidScroll: _react.PropTypes.bool,
  scrollableAncestor: _react.PropTypes.any,
  horizontal: _react.PropTypes.bool,

  // `topOffset` can either be a number, in which case its a distance from the
  // top of the container in pixels, or a string value. Valid string values are
  // of the form "20px", which is parsed as pixels, or "20%", which is parsed
  // as a percentage of the height of the containing element.
  // For instance, if you pass "-20%", and the containing element is 100px tall,
  // then the waypoint will be triggered when it has been scrolled 20px beyond
  // the top of the containing element.
  topOffset: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

  // `bottomOffset` is like `topOffset`, but for the bottom of the container.
  bottomOffset: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
};

Waypoint.above = _constants2.default.above;
Waypoint.below = _constants2.default.below;
Waypoint.inside = _constants2.default.inside;
Waypoint.invisible = _constants2.default.invisible;
Waypoint.getWindow = function () {
  if (typeof window !== 'undefined') {
    return window;
  }
};
Waypoint.defaultProps = defaultProps;
Waypoint.displayName = 'Waypoint';
module.exports = exports['default'];

/***/ }),
/* 1342 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EVENT_HANDLERS_KEY = undefined;
exports.addEventListener = addEventListener;
exports.removeEventListener = removeEventListener;

var _normalizeEventOptions = __webpack_require__(1343);

var _normalizeEventOptions2 = _interopRequireDefault(_normalizeEventOptions);

var _TargetEventHandlers = __webpack_require__(1346);

var _TargetEventHandlers2 = _interopRequireDefault(_TargetEventHandlers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// Export to make testing possible.
var EVENT_HANDLERS_KEY = exports.EVENT_HANDLERS_KEY = '__consolidated_events_handlers__';

function addEventListener(target, eventName, listener, options) {
  if (!target[EVENT_HANDLERS_KEY]) {
    // eslint-disable-next-line no-param-reassign
    target[EVENT_HANDLERS_KEY] = new _TargetEventHandlers2['default'](target);
  }
  var normalizedEventOptions = (0, _normalizeEventOptions2['default'])(options);
  return target[EVENT_HANDLERS_KEY].add(eventName, listener, normalizedEventOptions);
}

// Deprecated
function removeEventListener(unsubscribeFn) {
  unsubscribeFn();
}

/***/ }),
/* 1343 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = normalizeEventOptions;

var _canUsePassiveEventListeners = __webpack_require__(1344);

var _canUsePassiveEventListeners2 = _interopRequireDefault(_canUsePassiveEventListeners);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function normalizeEventOptions(eventOptions) {
  if (!eventOptions) {
    return undefined;
  }

  if (!(0, _canUsePassiveEventListeners2['default'])()) {
    // If the browser does not support the passive option, then it is expecting
    // a boolean for the options argument to specify whether it should use
    // capture or not. In more modern browsers, this is passed via the `capture`
    // option, so let's just hoist that value up.
    return !!eventOptions.capture;
  }

  return eventOptions;
}

/***/ }),
/* 1344 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = canUsePassiveEventListeners;

var _canUseDOM = __webpack_require__(1345);

var _canUseDOM2 = _interopRequireDefault(_canUseDOM);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// Adapted from Modernizr
// https://github.com/Modernizr/Modernizr/blob/5eea7e2a/feature-detects/dom/passiveeventlisteners.js#L26-L35
function testPassiveEventListeners() {
  if (!_canUseDOM2['default']) {
    return false;
  }

  if (!window.addEventListener || !window.removeEventListener || !Object.defineProperty) {
    return false;
  }

  var supportsPassiveOption = false;
  try {
    var opts = Object.defineProperty({}, 'passive', {
      get: function () {
        function get() {
          supportsPassiveOption = true;
        }

        return get;
      }()
    });
    window.addEventListener('test', null, opts);
  } catch (e) {
    // do nothing
  }

  return supportsPassiveOption;
}

var memoized = void 0;

function canUsePassiveEventListeners() {
  if (memoized === undefined) {
    memoized = testPassiveEventListeners();
  }
  return memoized;
}

/***/ }),
/* 1345 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CAN_USE_DOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

exports['default'] = CAN_USE_DOM;

/***/ }),
/* 1346 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _eventOptionsKey = __webpack_require__(1347);

var _eventOptionsKey2 = _interopRequireDefault(_eventOptionsKey);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ensureCanMutateNextEventHandlers(eventHandlers) {
  if (eventHandlers.handlers === eventHandlers.nextHandlers) {
    // eslint-disable-next-line no-param-reassign
    eventHandlers.nextHandlers = eventHandlers.handlers.slice();
  }
}

var TargetEventHandlers = function () {
  function TargetEventHandlers(target) {
    _classCallCheck(this, TargetEventHandlers);

    this.target = target;
    this.events = {};
  }

  _createClass(TargetEventHandlers, [{
    key: 'getEventHandlers',
    value: function () {
      function getEventHandlers(eventName, options) {
        var key = String(eventName) + ' ' + String((0, _eventOptionsKey2['default'])(options));

        if (!this.events[key]) {
          this.events[key] = {
            handlers: [],
            handleEvent: undefined
          };
          this.events[key].nextHandlers = this.events[key].handlers;
        }

        return this.events[key];
      }

      return getEventHandlers;
    }()
  }, {
    key: 'handleEvent',
    value: function () {
      function handleEvent(eventName, options, event) {
        var eventHandlers = this.getEventHandlers(eventName, options);
        eventHandlers.handlers = eventHandlers.nextHandlers;
        eventHandlers.handlers.forEach(function (handler) {
          if (handler) {
            // We need to check for presence here because a handler function may
            // cause later handlers to get removed. This can happen if you for
            // instance have a waypoint that unmounts another waypoint as part of an
            // onEnter/onLeave handler.
            handler(event);
          }
        });
      }

      return handleEvent;
    }()
  }, {
    key: 'add',
    value: function () {
      function add(eventName, listener, options) {
        var _this = this;

        // options has already been normalized at this point.
        var eventHandlers = this.getEventHandlers(eventName, options);

        ensureCanMutateNextEventHandlers(eventHandlers);

        if (eventHandlers.nextHandlers.length === 0) {
          eventHandlers.handleEvent = this.handleEvent.bind(this, eventName, options);

          this.target.addEventListener(eventName, eventHandlers.handleEvent, options);
        }

        eventHandlers.nextHandlers.push(listener);

        var isSubscribed = true;
        var unsubscribe = function () {
          function unsubscribe() {
            if (!isSubscribed) {
              return;
            }

            isSubscribed = false;

            ensureCanMutateNextEventHandlers(eventHandlers);
            var index = eventHandlers.nextHandlers.indexOf(listener);
            eventHandlers.nextHandlers.splice(index, 1);

            if (eventHandlers.nextHandlers.length === 0) {
              // All event handlers have been removed, so we want to remove the event
              // listener from the target node.

              if (_this.target) {
                // There can be a race condition where the target may no longer exist
                // when this function is called, e.g. when a React component is
                // unmounting. Guarding against this prevents the following error:
                //
                //   Cannot read property 'removeEventListener' of undefined
                _this.target.removeEventListener(eventName, eventHandlers.handleEvent, options);
              }

              eventHandlers.handleEvent = undefined;
            }
          }

          return unsubscribe;
        }();
        return unsubscribe;
      }

      return add;
    }()
  }]);

  return TargetEventHandlers;
}();

exports['default'] = TargetEventHandlers;

/***/ }),
/* 1347 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = eventOptionsKey;
/* eslint-disable no-bitwise */

/**
 * Generate a unique key for any set of event options
 */
function eventOptionsKey(normalizedEventOptions) {
  if (!normalizedEventOptions) {
    return 0;
  }

  // If the browser does not support passive event listeners, the normalized
  // event options will be a boolean.
  if (normalizedEventOptions === true) {
    return 100;
  }

  // At this point, the browser supports passive event listeners, so we expect
  // the event options to be an object with possible properties of capture,
  // passive, and once.
  //
  // We want to consistently return the same value, regardless of the order of
  // these properties, so let's use binary maths to assign each property to a
  // bit, and then add those together (with an offset to account for the
  // booleans at the beginning of this function).
  var capture = normalizedEventOptions.capture << 0;
  var passive = normalizedEventOptions.passive << 1;
  var once = normalizedEventOptions.once << 2;
  return capture + passive + once;
}

/***/ }),
/* 1348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = computeOffsetPixels;

var _parseOffsetAsPercentage = __webpack_require__(1349);

var _parseOffsetAsPercentage2 = _interopRequireDefault(_parseOffsetAsPercentage);

var _parseOffsetAsPixels = __webpack_require__(1350);

var _parseOffsetAsPixels2 = _interopRequireDefault(_parseOffsetAsPixels);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {string|number} offset
 * @param {number} contextHeight
 * @return {number} A number representing `offset` converted into pixels.
 */
function computeOffsetPixels(offset, contextHeight) {
  var pixelOffset = (0, _parseOffsetAsPixels2.default)(offset);

  if (typeof pixelOffset === 'number') {
    return pixelOffset;
  }

  var percentOffset = (0, _parseOffsetAsPercentage2.default)(offset);
  if (typeof percentOffset === 'number') {
    return percentOffset * contextHeight;
  }
}
module.exports = exports['default'];

/***/ }),
/* 1349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseOffsetAsPercentage;
/**
 * Attempts to parse the offset provided as a prop as a percentage. For
 * instance, if the component has been provided with the string "20%" as
 * a value of one of the offset props. If the value matches, then it returns
 * a numeric version of the prop. For instance, "20%" would become `0.2`.
 * If `str` isn't a percentage, then `undefined` will be returned.
 *
 * @param {string} str The value of an offset prop to be converted to a
 *   number.
 * @return {number|undefined} The numeric version of `str`. Undefined if `str`
 *   was not a percentage.
 */
function parseOffsetAsPercentage(str) {
  if (str.slice(-1) === '%') {
    return parseFloat(str.slice(0, -1)) / 100;
  }
}
module.exports = exports['default'];

/***/ }),
/* 1350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseOffsetAsPixels;
/**
 * Attempts to parse the offset provided as a prop as a pixel value. If
 * parsing fails, then `undefined` is returned. Three examples of values that
 * will be successfully parsed are:
 * `20`
 * "20px"
 * "20"
 *
 * @param {string|number} str A string of the form "{number}" or "{number}px",
 *   or just a number.
 * @return {number|undefined} The numeric version of `str`. Undefined if `str`
 *   was neither a number nor string ending in "px".
 */
function parseOffsetAsPixels(str) {
  if (!isNaN(parseFloat(str)) && isFinite(str)) {
    return parseFloat(str);
  } else if (str.slice(-2) === 'px') {
    return parseFloat(str.slice(0, -2));
  }
}
module.exports = exports['default'];

/***/ }),
/* 1351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = debugLog;
function debugLog() {
  if (true) {
    console.log(arguments); // eslint-disable-line no-console
  }
}
module.exports = exports['default'];

/***/ }),
/* 1352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ensureChildrenIsSingleDOMElement;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _isDOMElement = __webpack_require__(1353);

var _isDOMElement2 = _interopRequireDefault(_isDOMElement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Raise an error if "children" isn't a single DOM Element
 *
 * @param {React.element|null} children
 * @return {undefined}
 */
function ensureChildrenIsSingleDOMElement(children) {
  if (children) {
    _react2.default.Children.only(children);

    if (!(0, _isDOMElement2.default)(children)) {
      throw new Error('You must wrap any Component Elements passed to Waypoint in a DOM Element (eg; a <div>).');
    }
  }
}
module.exports = exports['default'];

/***/ }),
/* 1353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDOMElement;
/**
 * When an element's type is a string, it represents a DOM node with that tag name
 * https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html#dom-elements
 *
 * @param {React.element} Component
 * @return {bool} Whether the component is a DOM Element
 */
function isDOMElement(Component) {
  return typeof Component.type === 'string';
}
module.exports = exports['default'];

/***/ }),
/* 1354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getCurrentPosition;

var _constants = __webpack_require__(1328);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {object} bounds An object with bounds data for the waypoint and
 *   scrollable parent
 * @return {string} The current position of the waypoint in relation to the
 *   visible portion of the scrollable parent. One of `constants.above`,
 *   `constants.below`, or `constants.inside`.
 */
function getCurrentPosition(bounds) {
  if (bounds.viewportBottom - bounds.viewportTop === 0) {
    return _constants2.default.invisible;
  }

  // top is within the viewport
  if (bounds.viewportTop <= bounds.waypointTop && bounds.waypointTop <= bounds.viewportBottom) {
    return _constants2.default.inside;
  }

  // bottom is within the viewport
  if (bounds.viewportTop <= bounds.waypointBottom && bounds.waypointBottom <= bounds.viewportBottom) {
    return _constants2.default.inside;
  }

  // top is above the viewport and bottom is below the viewport
  if (bounds.waypointTop <= bounds.viewportTop && bounds.viewportBottom <= bounds.waypointBottom) {
    return _constants2.default.inside;
  }

  if (bounds.viewportBottom < bounds.waypointTop) {
    return _constants2.default.below;
  }

  if (bounds.waypointTop < bounds.viewportTop) {
    return _constants2.default.above;
  }

  return _constants2.default.invisible;
}
module.exports = exports['default'];

/***/ }),
/* 1355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveScrollableAncestorProp;
function resolveScrollableAncestorProp(scrollableAncestor) {
  // When Waypoint is rendered on the server, `window` is not available.
  // To make Waypoint easier to work with, we allow this to be specified in
  // string form and safely convert to `window` here.
  if (scrollableAncestor === 'window') {
    return global.window;
  }

  return scrollableAncestor;
}
module.exports = exports['default'];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))

/***/ }),
/* 1356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(61);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = __webpack_require__(41);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _map = __webpack_require__(241);

var _map2 = _interopRequireDefault(_map);

var _find = __webpack_require__(413);

var _find2 = _interopRequireDefault(_find);

var _index = __webpack_require__(52);

var _lib = __webpack_require__(3);

var _htmlHelper = __webpack_require__(1083);

var _htmlHelper2 = _interopRequireDefault(_htmlHelper);

var _Api = __webpack_require__(152);

var _Api2 = _interopRequireDefault(_Api);

var _PropertyCard = __webpack_require__(411);

var _PropertyCard2 = _interopRequireDefault(_PropertyCard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state) {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    selectPropertyOnMap: function selectPropertyOnMap(property) {
      dispatch((0, _index.selectPropertyOnMap)(property));
    }
  };
};

var PropertyCardList = function (_Component) {
  _inherits(PropertyCardList, _Component);

  function PropertyCardList(props) {
    _classCallCheck(this, PropertyCardList);

    var _this = _possibleConstructorReturn(this, (PropertyCardList.__proto__ || Object.getPrototypeOf(PropertyCardList)).call(this, props));

    _this.getPropertyRecordByMlsID = function (mlsID) {
      var foundProperty = _this.props.properties.filter(function (d) {
        return (0, _get2.default)(d, '_source.post_meta.rets_mls_number[0]', null) === mlsID;
      });
      return foundProperty.length ? foundProperty[0] : null;
    };

    _this.handlePropertyClick = function (propertyId) {
      _this.props.onUpdateSelectedProperty(propertyId);
      var property = _this.getPropertyRecordByMlsID(propertyId);

      if (!property) {
        console.log('property was not found');
      } else {
        _this.selectedPropertyOnList = propertyId;
        _this.props.selectPropertyOnMap(property._source);
      }
    };

    _this.selectedPropertyOnList = null;
    _this.propertiesDOM = {};
    return _this;
  }

  _createClass(PropertyCardList, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.properties.length && this.props.selectedProperty) {
        this.scrollToProperty(this.props.selectedProperty);
        var property = this.getPropertyRecordByMlsID(this.props.selectedProperty);
        if (!property) {
          console.log('selected property was not found');
        } else {
          this.props.selectPropertyOnMap(property._source);
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.properties.length && this.props.selectedProperty) {
        // If a property is selected on list section, do not scroll
        if (this.props.selectedProperty !== this.selectedPropertyOnList) {
          this.scrollToProperty(this.props.selectedProperty);
          this.selectedPropertyOnList = this.props.selectedProperty;
        }
        var property = this.getPropertyRecordByMlsID(this.props.selectedProperty);
        if (!property) {
          console.log('selected property was not found');
        } else {
          this.props.selectPropertyOnMap(property._source);
        }
      }
    }
  }, {
    key: 'scrollToProperty',
    value: function scrollToProperty(propertyId) {
      if (!this.propertiesDOM[propertyId]) {
        console.log('chosen property was not found in the results');
      } else {
        // it's listing container (not body) which is scrollable
        var container = document.querySelector('.' + _lib.Lib.THEME_CLASSES_PREFIX + 'listing-sidebar');
        var node = (0, _reactDom.findDOMNode)(this.propertiesDOM[propertyId]);
        _htmlHelper2.default.scrollToElement(container, node, 500);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          selectedProperty = _props.selectedProperty,
          properties = _props.properties;

      return _react2.default.createElement(
        'div',
        { className: 'row' },
        properties.map(function (p, i) {
          var item = {
            address: (0, _get2.default)(p, '_source.post_meta.rets_address', [''])[0],
            address_unit: (0, _get2.default)(p, '_source.post_meta.address_unit', '')[0],
            location: (0, _get2.default)(p, '_source.post_meta.wpp_location_pin', []),
            baths: (0, _get2.default)(p, '_source.post_meta.rets_total_baths', 0),
            beds: (0, _get2.default)(p, '_source.post_meta.rets_beds', 0),
            city: (0, _get2.default)(p, '_source.tax_input.location_city.location_city[0].name', ''),
            gallery_images: (0, _get2.default)(p, '_source.wpp_media', []).map(function (media) {
              return media.url;
            }),
            id: (0, _get2.default)(p, '_source.post_meta.rets_mls_number[0]', null),
            living_area: (0, _get2.default)(p, '_source.post_meta.rets_living_area', 0),
            lots_size: (0, _get2.default)(p, '_source.post_meta.rets_lot_size_area', 0),
            price: (0, _get2.default)(p, '_source.post_meta.rets_list_price[0]', 0),
            post_name: (0, _get2.default)(p, '_source.post_name', 0),
            state: (0, _get2.default)(p, '_source.tax_input.location_state.location_state[0].name', ''),
            type: (0, _get2.default)(p, '_source.tax_input.wpp_listing_type.listing_type[0].slug', ''),
            sqft: (0, _get2.default)(p, '_source.post_meta.sqft[0]', ''),
            sub_types: (0, _map2.default)((0, _get2.default)(p, '_source.tax_input.wpp_listing_subtype.listing_sub_type', []), 'name'),
            relative_permalink: (0, _get2.default)(p, '_source.permalink', ''),
            thumbnail: (0, _get2.default)(p, '_source.post_meta.rets_thumbnail_url', [''])[0],
            zip: (0, _get2.default)(p, '_source.post_meta.rets_postal_code[0]', '')
          };
          return _react2.default.createElement(
            'div',
            { className: 'col-12 col-xl-6', key: item.id },
            _react2.default.createElement(_PropertyCard2.default, {
              data: item,
              highlighted: selectedProperty === item.id,
              propertiesDOM: _this2.propertiesDOM,
              openPanelWhenClicked: true,
              onClickCard: _this2.handlePropertyClick
            })
          );
        })
      );
    }
  }]);

  return PropertyCardList;
}(_react.Component);

PropertyCardList.propTypes = {
  properties: _propTypes2.default.array.isRequired,
  selectedProperty: _propTypes2.default.string
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PropertyCardList);

/***/ }),
/* 1357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lib = __webpack_require__(3);

var _capitalize = __webpack_require__(1076);

var _capitalize2 = _interopRequireDefault(_capitalize);

var _first = __webpack_require__(1358);

var _first2 = _interopRequireDefault(_first);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _isArray = __webpack_require__(30);

var _isArray2 = _interopRequireDefault(_isArray);

var _isEqual = __webpack_require__(151);

var _isEqual2 = _interopRequireDefault(_isEqual);

var _sortBy = __webpack_require__(415);

var _sortBy2 = _interopRequireDefault(_sortBy);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchFilterDescriptionText = function (_Component) {
  _inherits(SearchFilterDescriptionText, _Component);

  function SearchFilterDescriptionText() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SearchFilterDescriptionText);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SearchFilterDescriptionText.__proto__ || Object.getPrototypeOf(SearchFilterDescriptionText)).call.apply(_ref, [this].concat(args))), _this), _this.handleClearFilters = function (evt) {
      evt.preventDefault();

      var termFilters = (0, _get2.default)(_this.props, 'data.filters');
      var historyPush = (0, _get2.default)(_this.props, 'data.historyPush');

      var params = [];

      var property_search_options = (0, _get2.default)(bundle, 'property_search_options', []);

      // Get current search array
      var current_search = (0, _first2.default)(property_search_options.filter(function (option) {
        return option.search === termFilters.search_type;
      }));

      // Get default listing statuses for current search type
      var searchTypeArrayParams = _Util2.default.createSearchTypeArrayParams((0, _get2.default)(termFilters, 'property_type', ''), (0, _get2.default)(current_search, 'listing_statuses'));
      params = params.concat(searchTypeArrayParams);

      // Get terms from filters
      var terms = (0, _get2.default)(termFilters, 'term', []);
      if (terms) {
        params = params.concat(terms.map(function (d) {
          return { key: d.term, values: [d.slug] };
        }));
      }

      // Create search url and go to it
      var searchURL = _Util2.default.createSearchURL('/search', params);
      historyPush(searchURL);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SearchFilterDescriptionText, [{
    key: 'getTitleAndDescription',
    value: function getTitleAndDescription(data) {

      // Define needed props for description
      var acres = data.acres,
          bathrooms = data.bathrooms,
          bedrooms = data.bedrooms,
          filters = data.filters,
          historyPush = data.historyPush,
          terms = data.terms,
          total = data.total,
          price = data.price,
          sqft = data.sqft;

      // Default values

      var title = 'No Results';
      var description = 'Your search does not match any listings. Try zooming out or removing your filters.';

      if (total) {

        // TITLE

        // Count of items which can be displayed at title
        var items_limit = 2;

        var residential_sale_type_label = 'Real Estate';

        // Build locations array
        var _terms = (0, _get2.default)(data, 'terms', []).map(function (term) {
          return term.text;
        });
        var locations = '';
        if (_terms && _terms.length <= items_limit) {
          locations = (0, _sortBy2.default)(_terms).join(' and ');
        }

        // Get listing subtypes array with plural values
        var subtypes = (0, _get2.default)(data, 'subtypes', []).map(function (subtype) {
          return (0, _get2.default)(bundle, ['listing_subtypes_plural_values', data.type, subtype.slug].join('.'));
        });

        // Checking if using 'other' subtype
        var exist_other_values = (0, _get2.default)(data, 'subtypes', []).map(function (subtype) {
          return subtype.slug;
        }).indexOf('other') !== -1;

        // If there is no selected subtypes or one of selected is 'other' then just display listing type
        var types = (0, _capitalize2.default)(data.type);
        if (subtypes && subtypes.length <= items_limit && !exist_other_values) {
          types = (0, _sortBy2.default)(subtypes).join(' and ');
        }

        // Checking selected sale types
        var saleTypes = data.saleType && data.saleType.map(function (d) {
          return (0, _capitalize2.default)(d);
        }) || ['Rent', 'Sale'];
        if (!(0, _isArray2.default)(saleTypes)) {
          saleTypes = [saleTypes];
        }

        // Define sale type title's part
        var saleType = void 0;
        var shortSaleType = void 0;
        switch (data.type) {
          case 'residential':
            shortSaleType = saleType = residential_sale_type_label;
            break;
          case 'commercial':
            shortSaleType = saleType = 'Commercial Real Estate';
            if (exist_other_values) {
              types = saleType;
            }
            break;
          case 'land':
            saleType = 'Land Real Estate';
            shortSaleType = 'Land';
            if (exist_other_values) {
              types = saleType;
            }
            break;
        }

        // If display all sale type, then drop it
        if (saleTypes.length === 2 && subtypes.length > 0) {
          saleType = '';
        } else if (saleTypes.length === 1) {
          // Case when displayed particular sale type with listing subtype
          if (subtypes.length > 0 && subtypes.length <= 2) {
            saleType = [['for', (0, _first2.default)(saleTypes)].join(' ')].join(' ');
          } else {
            //Case when displayed particular sale type without subtypes
            saleType = [shortSaleType, ['for', (0, _first2.default)(saleTypes)].join(' ')].join(' ');
          }
        }

        title = [locations, types, saleType].join(' ');

        // DESCRIPTION

        // Build total count part
        var _count = 'We found ' + total;

        // Build price part
        var _price = '';
        if (price && !(price.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT && price.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT)) {
          _price += ' priced';
          if (price.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT) {
            _price += ' no less than ' + _Util2.default.formatPriceValue(price.start) + ' ';
          } else if (price.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT) {
            _price += ' no more than ' + _Util2.default.formatPriceValue(price.to) + ' ';
          } else {
            _price += ' between ' + _Util2.default.formatPriceValue(price.start) + ' and ' + _Util2.default.formatPriceValue(price.to);
          }
        }

        // Build bedrooms part
        var _bedrooms = '';
        if (bedrooms) {
          _bedrooms += ' at least ' + bedrooms + ' ' + (bedrooms === '1' ? 'bedroom' : 'bedrooms');
        }

        // Build bathrooms part
        var _bathrooms = '';
        if (bathrooms) {
          if (_bedrooms) {
            _bathrooms += ',';
          }
          _bathrooms += ' at least  ' + bathrooms + ' ' + (bathrooms === '1' ? 'bathroom' : 'bathrooms');
        }

        // Build sqft part
        var position = 'start';
        if (_bedrooms || _bathrooms) {
          position = 'middle';
        }
        var _sqft = this.determineSqftPart(sqft, position);

        // Build acres part
        var _acres = '';
        if (acres && !(acres.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT && acres.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT)) {
          if (_bedrooms || _bathrooms || _sqft) {
            _acres = ', and';
          }
          if (acres.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT) {
            _acres += ' at least ' + _Util2.default.formatAcresValue(acres.start) + ' acres';
          } else if (acres.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT) {
            _acres += ' at most ' + _Util2.default.formatAcresValue(acres.to) + ' acres';
          } else {
            _acres += ' between ' + _Util2.default.formatAcresValue(acres.start) + ' and ' + _Util2.default.formatAcresValue(acres.to) + ' acres';
          }
        }

        // Use an "and" after the last comma.
        if (!_acres) {
          if (_sqft) {
            position = 'end';
            if (!_bathrooms && !_bedrooms) {
              position = 'start';
            }
            _sqft = this.determineSqftPart(sqft, position);
          } else if (_bathrooms) {
            _bathrooms = _bathrooms.replace(',', ', and');
          }
        }

        // For residential filter without subtypes sale type is 'homes'
        if (shortSaleType === residential_sale_type_label && !subtypes.length) {
          saleType = saleType.replace(residential_sale_type_label, 'homes');
        }

        // Added 'listings' to sale type or property type/subtype for commercial and land listings
        if (['land', 'commercial'].indexOf(data.type) !== -1) {
          if (types) {
            types += ' listings';
          } else {
            if (saleTypes.length === 1) {
              // Case when displayed particular sale type with listing subtype
              if (subtypes.length > 0 && subtypes.length <= 2) {
                saleType = [['listings', 'for', (0, _first2.default)(saleTypes)].join(' ')].join(' ');
              } else {
                //Case when displayed particular sale type without subtypes
                saleType = [shortSaleType, 'listings', ['for', (0, _first2.default)(saleTypes)].join(' ')].join(' ');
              }
            } else {
              saleType += ' listings';
            }
          }
        }

        description = _count + (types ? ' ' + types.toLowerCase() : '') + (saleType ? ' ' + saleType.toLowerCase() : '') + (locations ? ' in ' + locations : '') + _price + (_bedrooms || _bathrooms ? ' that have' + _bedrooms + _bathrooms : '') + _sqft + _acres + '.';
      }

      return {
        title: title,
        description: description
      };
    }
  }, {
    key: 'determineSqftPart',
    value: function determineSqftPart(sqft, position) {
      var _sqft = '';
      if (sqft && !(sqft.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT && sqft.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT)) {
        if (position === 'end') {
          _sqft = ', and';
        } else if (position === 'middle') {
          _sqft = ',';
        }
        if (sqft.to === _lib.Lib.RANGE_SLIDER_NO_MAX_TEXT) {
          _sqft += ' at least ' + _Util2.default.formatSQFTValue(sqft.start) + ' SQFT';
        } else if (sqft.start === _lib.Lib.RANGE_SLIDER_NO_MIN_TEXT) {
          _sqft += ' at most ' + _Util2.default.formatSQFTValue(sqft.to) + ' SQFT';
        } else {
          _sqft += ' between ' + _Util2.default.formatSQFTValue(sqft.start) + ' and ' + _Util2.default.formatSQFTValue(sqft.to) + ' SQFT';
        }
      }

      return _sqft;
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var shouldUpdate = !(0, _isEqual2.default)(nextProps.data, this.props.data);
      return shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      var data = this.getTitleAndDescription(this.props.data);
      var total = (0, _get2.default)(this.props, 'data.total');

      if (total) {
        return _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle' },
          _react2.default.createElement(
            'h1',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle__title' },
            data.title
          ),
          _react2.default.createElement(
            'p',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle__text' },
            data.description
          )
        );
      } else {
        return _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'noresults-banner' },
          _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__image',
            style: { backgroundImage: 'url(' + bundle.static_images_url + 'no-results-banner.png)' }
          }),
          _react2.default.createElement(
            'h1',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__title' },
            data.title
          ),
          _react2.default.createElement(
            'p',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__text' },
            data.description
          ),
          _react2.default.createElement(
            'a',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__btn btn', onClick: this.handleClearFilters },
            'Remove Filters'
          )
        );
      }
    }
  }]);

  return SearchFilterDescriptionText;
}(_react.Component);

SearchFilterDescriptionText.propTypes = {
  data: _propTypes2.default.shape({
    acres: _propTypes2.default.object,
    bathrooms: _propTypes2.default.string,
    bedrooms: _propTypes2.default.string,
    filters: _propTypes2.default.object,
    historyPush: _propTypes2.default.func,
    price: _propTypes2.default.object,
    saleType: _propTypes2.default.array,
    sqft: _propTypes2.default.object,
    subtypes: _propTypes2.default.array,
    terms: _propTypes2.default.array,
    total: _propTypes2.default.number,
    type: _propTypes2.default.string
  })
};
exports.default = SearchFilterDescriptionText;

/***/ }),
/* 1358 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1359);


/***/ }),
/* 1359 */
/***/ (function(module, exports) {

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

module.exports = head;


/***/ }),
/* 1360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactIdSwiper = __webpack_require__(153);

var _reactIdSwiper2 = _interopRequireDefault(_reactIdSwiper);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _map = __webpack_require__(241);

var _map2 = _interopRequireDefault(_map);

var _debounce = __webpack_require__(386);

var _debounce2 = _interopRequireDefault(_debounce);

var _throttle = __webpack_require__(416);

var _throttle2 = _interopRequireDefault(_throttle);

var _lib = __webpack_require__(3);

var _PropertyCard = __webpack_require__(411);

var _PropertyCard2 = _interopRequireDefault(_PropertyCard);

var _SearchResultListingPlaceholder = __webpack_require__(1329);

var _SearchResultListingPlaceholder2 = _interopRequireDefault(_SearchResultListingPlaceholder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CarouselOnMap = function (_Component) {
  _inherits(CarouselOnMap, _Component);

  function CarouselOnMap(props) {
    _classCallCheck(this, CarouselOnMap);

    var _this = _possibleConstructorReturn(this, (CarouselOnMap.__proto__ || Object.getPrototypeOf(CarouselOnMap)).call(this, props));

    _this.slideToId = function (propertyId) {
      var index = (_this.props.properties || []).findIndex(function (e) {
        return (0, _get2.default)(e, '_source.post_meta.rets_mls_number[0]', null) === propertyId;
      });
      if (_this.swiper && index > -1) {
        _this.swiper.slideTo(index, 0);
      }
    };

    _this.handleSlideChange = function () {
      var _this$swiper = _this.swiper,
          isEnd = _this$swiper.isEnd,
          activeIndex = _this$swiper.activeIndex,
          previousIndex = _this$swiper.previousIndex;

      var property = _this.props.properties[activeIndex];

      _this.props.onChangeSlide((0, _get2.default)(property, '_source.post_meta.rets_mls_number[0]', null));

      if (isEnd && activeIndex === previousIndex) {
        _this.props.onLoadMore();
      }
    };

    _this.swiper = null;
    return _this;
  }

  _createClass(CarouselOnMap, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.selectedProperty !== this.props.selectedProperty) {
        this.slideToId(nextProps.selectedProperty);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      // after loading more props, update selected_property
      if (prevProps.properties.length !== this.props.properties.length) {
        var property = this.props.properties[prevProps.properties.length];
        if (property) {
          this.props.onChangeSlide((0, _get2.default)(property, '_source.post_meta.rets_mls_number[0]', null));
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          properties = _props.properties,
          isFetching = _props.isFetching;

      var swiperParams = {
        slidesPerView: 1,
        slidesPerGroup: 1,
        spaceBetween: 0,
        onInit: function onInit(swiper) {
          _this2.swiper = swiper;
          // this.swiper.on('slideChangeEnd', this.handleSlideChange);
          _this2.swiper.on('transitionStart', (0, _throttle2.default)(_this2.handleSlideChange, 2000)); // fired twice each slide change
        }
      };

      return _react2.default.createElement(
        'div',
        { className: _lib.Lib.THEME_CLASSES_PREFIX + 'listing-wrap hidden-sm-up' },
        !isFetching && properties.length > 0 && _react2.default.createElement(
          _reactIdSwiper2.default,
          swiperParams,
          properties.map(function (p, key) {
            var item = {
              address: (0, _get2.default)(p, '_source.post_meta.rets_address', [''])[0],
              address_unit: (0, _get2.default)(p, '_source.post_meta.address_unit', ''),
              location: (0, _get2.default)(p, '_source.post_meta.wpp_location_pin', []),
              baths: (0, _get2.default)(p, '_source.post_meta.rets_total_baths', 0),
              beds: (0, _get2.default)(p, '_source.post_meta.rets_beds', 0),
              city: (0, _get2.default)(p, '_source.tax_input.location_city.location_city[0].name', ''),
              gallery_images: (0, _get2.default)(p, '_source.wpp_media', []).map(function (media) {
                return media.url;
              }),
              id: p._id,
              living_area: (0, _get2.default)(p, '_source.post_meta.rets_living_area', 0),
              lots_size: (0, _get2.default)(p, '_source.post_meta.rets_lot_size_area', 0),
              price: (0, _get2.default)(p, '_source.post_meta.rets_list_price[0]', 0),
              post_name: (0, _get2.default)(p, '_source.post_name', 0),
              state: (0, _get2.default)(p, '_source.tax_input.location_state.location_state[0].name', ''),
              type: (0, _get2.default)(p, '_source.tax_input.wpp_listing_type.listing_type[0].slug', ''),
              sub_types: (0, _map2.default)((0, _get2.default)(p, '_source.tax_input.wpp_listing_subtype.listing_sub_types', []), 'name'),
              relative_permalink: (0, _get2.default)(p, '_source.permalink', ''),
              thumbnail: (0, _get2.default)(p, '_source.post_meta.rets_thumbnail_url', [''])[0],
              zip: (0, _get2.default)(p, '_source.post_meta.rets_postal_code[0]', '')
            };

            return _react2.default.createElement(
              'div',
              { className: 'swiper-slide', key: p._id },
              _react2.default.createElement(_PropertyCard2.default, { data: item })
            );
          })
        ),
        properties.length === 0 && !isFetching && _react2.default.createElement(
          'div',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'noresults-banner' },
          _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__image',
            style: { backgroundImage: 'url(' + bundle.static_images_url + 'no-results-banner.png)' }
          }),
          _react2.default.createElement(
            'h1',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__title' },
            'No Results'
          ),
          _react2.default.createElement(
            'p',
            { className: _lib.Lib.THEME_CLASSES_PREFIX + 'banner__text' },
            'Your search does not match any listings. Try zooming out or removing your filters.'
          )
        ),
        isFetching && _react2.default.createElement(_SearchResultListingPlaceholder2.default, {
          isFetching: isFetching,
          isMobile: true,
          onInit: function onInit() {}
        })
      );
    }
  }]);

  return CarouselOnMap;
}(_react.Component);

CarouselOnMap.propTypes = {
  properties: _propTypes2.default.array,
  selectedProperty: _propTypes2.default.string,
  onChangeSlide: _propTypes2.default.func
};
exports.default = CarouselOnMap;
;

/***/ }),
/* 1361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(41);

var _get = __webpack_require__(5);

var _get2 = _interopRequireDefault(_get);

var _lib = __webpack_require__(3);

var _index = __webpack_require__(52);

var _PropertySingle = __webpack_require__(1184);

var _PropertySingle2 = _interopRequireDefault(_PropertySingle);

var _Util = __webpack_require__(36);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PropertyPanelOnMap = function (_Component) {
  _inherits(PropertyPanelOnMap, _Component);

  function PropertyPanelOnMap() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PropertyPanelOnMap);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PropertyPanelOnMap.__proto__ || Object.getPrototypeOf(PropertyPanelOnMap)).call.apply(_ref, [this].concat(args))), _this), _this.handleClose = function () {
      _this.props.deselectPropertyOnMap();
    }, _this.handleOpen = function () {
      if (_this.props.historyPush && _this.props.property) {
        var link = '/' + bundle.property_single_url + '/' + _this.props.property.post_name;
        // this.props.historyPush(link);
        window.open(link, '_blank');
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PropertyPanelOnMap, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          agents = _props.agents,
          property = _props.property,
          isVisible = _props.isVisible;


      var propertyMeta = {};
      if (property) {
        propertyMeta = _Util2.default.transformPropertyMeta(property);
      }

      var containerClass = _lib.Lib.THEME_CLASSES_PREFIX + 'panel-on-map';
      if (isVisible) {
        containerClass += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'display';
      } else {
        containerClass += ' ' + _lib.Lib.THEME_CLASSES_PREFIX + 'hide';
      }

      return _react2.default.createElement(
        'div',
        { className: containerClass },
        property ? _react2.default.createElement(_PropertySingle2.default, {
          agents: agents,
          curatedPropertyInfo: propertyMeta,
          elasticSearchSource: property,
          fromMapView: true
        }) : _react2.default.createElement('div', { className: _lib.Lib.THEME_CLASSES_PREFIX + "single-container" }),
        isVisible && _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'panel-on-map-close d-flex justify-content-center align-items-center',
            onClick: this.handleClose
          },
          _react2.default.createElement('i', { className: 'fa fa-close' })
        ),
        isVisible && _react2.default.createElement(
          'span',
          { className: _lib.Lib.THEME_CLASSES_PREFIX + 'panel-on-map-open d-flex justify-content-center align-items-center',
            onClick: this.handleOpen
          },
          _react2.default.createElement('i', { className: 'fa fa-external-link' })
        )
      );
    }
  }]);

  return PropertyPanelOnMap;
}(_react.Component);

;

var mapStateToProps = function mapStateToProps(state) {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    deselectPropertyOnMap: function deselectPropertyOnMap(property) {
      dispatch((0, _index.deselectPropertyOnMap)(property));
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PropertyPanelOnMap);

/***/ }),
/* 1362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactContentLoader = __webpack_require__(387);

var _reactContentLoader2 = _interopRequireDefault(_reactContentLoader);

var _lib = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Placeholder = function Placeholder() {
  return _react2.default.createElement(
    'div',
    { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle ' + _lib.Lib.THEME_CLASSES_PREFIX + 'content-placeholder' },
    _react2.default.createElement(
      'h1',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle__title' },
      _react2.default.createElement(
        _reactContentLoader2.default,
        { primaryColor: '#8b8c8d' },
        _react2.default.createElement(_reactContentLoader.Rect, null)
      )
    ),
    _react2.default.createElement(
      'p',
      { className: _lib.Lib.THEME_CLASSES_PREFIX + 'headtitle__text' },
      _react2.default.createElement(
        _reactContentLoader2.default,
        { primaryColor: '#dcdcdc' },
        _react2.default.createElement(_reactContentLoader.Rect, null)
      )
    )
  );
};

exports.default = Placeholder;

/***/ })
]));